2008-08-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.20-1
	[a449673a05cd] [tip]

2008-08-12  None  <None>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.20-1.noarch.
	[ffefe3480980] [spin-0.8.20-1]

2008-08-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* INSTALL, spin.spec:
	Spin now requires rhnlin, rhn-client-tools, and spin-logos.
	[121b3530997f]

2008-08-12  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/infofiles.py:
	oops, remove extraneous single quote from last commit
	[291d6fcbb7fc]

	* spin/modules/core/installer/infofiles.py:
	buildstamp bugfix - added packagepath, removed name from diff
	variables
	[85d9fa164083]

2008-08-12  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* share/spin/schemas/distro/comps.rng,
	spin/modules/core/packages/comps.py:
	updated comps validation so it fails if it doesn't contain text() or
	at least one group or package element
	[4cd66cddf2f6]

2008-08-12  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/infofiles.py:
	infofiles: small fix, added missing comma
	[741a6b9c00f5]

2008-08-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/installer/infofiles.py:
	Bumped treeinfo event's version number.
	[40af6be0669f]

	* spin/locals/treeinfo.py, spin/modules/core/installer/xen-images.py:
	The .treeinfo file had the wrong arch being written.

	Using the 'basearch' instead of the 'arch' variable in the locals
	dictionary.
	[15f22133f581]

2008-08-11  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/packages/pkglist.py:
	The 'pkglist' event prints out warnings for user-required packages.

	Previously, warnings were printed out for obsolete packages for all
	packages that ended up in the comps file. This became too verbose
	at times because there are packages in the "core" group that have
	been renamed as well. The user has no control over the packages in
	the "core" group and cannot modify it. Now, only packages that are
	explicitly added to the comps file by the user have warnings printed
	out for them.
	[bce7f71cc42d]

	* spin/callback.py:
	Fixed printout of warnings in pkglist event.

	The callback was prepending the string "Warning: " to all the
	warnings. It was dumb, and I should have just prepended "Warning: "
	to all the warnings as done in this changeset.
	[c1a45e2814c5]

2008-08-08  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/callback.py, spin/modules/core/packages/pkglist.py:
	Fixed Bug 205.

	Printing a warning if the required package is obsoleted by some
	other package.
	[37b6d5774045]

2008-08-08  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.19-1
	[e1abf9f20b38]

2008-08-08  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.19-1.noarch.
	[a661a7441631] [spin-0.8.19-1]

2008-08-08  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/core/packages/comps.py:
	bug 280 - fixed incorrectly named exception
	[5b680f888e6d]

	* spin/event/fileio.py, spin/modules/core/repos.py,
	spin/modules/core/rpmbuild/config-rpm.py,
	spin/modules/extensions/packages/gpgsign.py,
	spin/modules/extensions/sources.py:
	various fileio improvements; fixed gpgsign valid key -> exception
	bug

	spin/event/fileio.py
	 * added .io.abspath(f[,prefix]), which is the method all events should
	use for uniform relative path handling. In the default case,
	this joins the path f onto the dirname of the distro definition
	used. If the optional prefix is provided, this prefix is used
	instead
	 * added .io.validate_input_file(f), the method called by
	.io.add_item() to ensure the input is valid. At the moment, this
	merely asserts that the file exists. This may become what is
	currently assert_file_readable, though in that case, whether it
	is ok for a file to be empty or not would have to be configurable
	spin/modules/core/repos.py
	 * now uses .io.abspath() spin/modules/core/rpmbuild/config-rpm.py
	 * now uses .io.abspath() spin/modules/extensions/packages/gpgsign.py
	 * now uses .io.validate_input_file() instead of .io.add_xpath() for
	gpgkey existance validation spin/modules/extensions/sources.py
	 * now uses .io.abspath()
	[e285621b7e20]

	* spin/modules/extensions/packages/gpgsign.py:
	bug 276 - missing gpgkeys to gpgsign now show up in gpgsign-setup
	rather than config-rpm
	 * this was accomplished by faking the download in gpgsign-setup by
	adding them to the sync list via .io.add_xpath(); if they don't
	exist, gpgsign- setup will raise a 'missing input file '%s''
	exception
	[4eb15eece2b6]

	* bin/spin, spin/main.py:
	bugfix to logic processing of debug flags that prevented --no-debug
	from working
	[815ff418023f]

	* spin/modules/extensions/packages/gpgsign.py:
	bug 243 - gpgsign fixed up so errors are handled
	[2dd06f51c864]

2008-08-07  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/core/packages/comps.py, spin/modules/core/repos.py,
	spin/modules/shared/repos.py:
	bug 250, bug 274 - empty repofiles now error; invalid repofiles
	errors are handled
	[421bad533dec]

	* spin/event/fileio.py, spin/modules/core/rpmbuild/release-rpm.py,
	spin/modules/shared/installer.py:
	error raised by .io.add_*() changed to a subclass of SpinError to
	make it handled
	[59a1c65c5aab]

	* spintest/modules/pkglist/__init__.py:
	minor change to pkglist Supplied test case to ensure path is
	computed correctly
	[a1a64bcddc00]

2008-08-07  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.18-1
	[f387a9789fc9]

2008-08-07  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.18-1.noarch.
	[9841f005e078] [spin-0.8.18-1]

2008-08-07  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py:
	main: log messages now refer to distro 'definition' file rather than
	'config'
	[65ce3b3b5b3c]

2008-08-07  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/main.py:
	wrapped log creation and config getting code in exception handlers
	to prevent tracebacks
	[5d264b5188d4]

	* spin/errors.py:
	slightly optimized SpinErrorHandler.handle_Exception code path
	[b2c8983e0d57]

	* spin/main.py, spin/validate.py:
	pulled out validation code from main.py into validate.py
	[9a7c1cfd2ea6]

	* spin/errors.py, spin/main.py:
	improved non debug mode output handling; except SpinErrors
	explicitly
	[02b98cb99a60]

	* spin/modules/core/packages/pkglist.py:
	bug 261 - pkglist depsolve errors are now 'handled' errors
	[e10ebca090d2]

2008-08-06  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	bug 240 - invalid systemids no longer show up as unhandled
	[a8a6d4b88049]

2008-08-06  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/packages/gpgcheck.py:
	If mkrpm.verifyRpms() returns invalid RPMs, raise an exception.

	This exception's error message contains a list of the base names of
	RPMs that are invalid.
	[ee85f33002c3]

2008-08-06  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/errors.py:
	bug 267 - error messages now always start on a new line
	[5d4a16a73f0a]

	* spin/modules/core/packages/gpgcheck.py:
	merged with trunk
	[5dda238942eb]

	* spin/errors.py, spin/event/fileio.py,
	spin/modules/core/packages/gpgcheck.py:
	various bugs - allow reporting of errors to use the source, rather
	than the cached location

	spin/errors.py
	 * assert_file_readable() now accepts a srcfile argument, which, if
	defined, is used instead of file when reporting the error
	location
	 * corrected a bug in SpinError where a .message containing the same
	%(var)X more than once would require the argument to be passed
	more than once spin/event/fileio.py
	 * added .io.i_src and .io.i_dst, indexes on top of self.data keyed on
	src and dest, respectively. To get the location of a source file
	given its destionation, then, use .io.i_dst[dst].src
	 * .add_item() also populates the src and dst indexes
	spin/modules/core/packages/gpgcheck.py
	 * gpgkey checking now reports the source instead of the cached
	location when errors are found
	[b80a1f88f87d]

	* spin/modules/extensions/iso.py:
	added missing import of assert_file_readable
	[becf3baa9902]

2008-08-06  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/packages/gpgcheck.py:
	The GpgCheckEvent.gpgkeys attribute is no longer there.

	After the previous commit, GpgCheckEvent doesn't have a 'gpgkeys'
	attribute anymore, but it was still being referenced. Also, changed
	the event's version.
	[1216259b6615]

	* spin/modules/core/packages/gpgcheck.py:
	Fixed Bug 268.

	In the gpgcheck event, if a repository's gpgkey's mtime, size etc.
	changed but the path to the gpgkey remained unchanged, the homedir
	was not being recreated. This was happening because we were not
	checking to see if new keys were installed, instead relying on the
	path to the gpgkey.
	[981b530a05e5]

2008-08-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py:
	Fixed bug in triggerun scriptlet for firstboot.
	[59b0882d2c86]

2008-08-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.17-1
	[1b800b28479c]

2008-08-05  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.17-1.noarch.
	[848e2cc6d2b6] [spin-0.8.17-1]

2008-08-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py:
	The logos RPM's triggerin on firstboot, copies instead of linking.

	Linking the /usr/share/firstboot/themes/default file to
	/usr/share/firstboot/themes/spin causes the file to be incorrectly
	owned by both the firstboot package and the logos package. Copying
	gets around this problem.
	[7b6e71f365ad]

2008-08-05  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/errors.py, spin/modules/core/packages/comps.py,
	spin/modules/core/packages/download.py,
	spin/modules/core/packages/gpgcheck.py,
	spin/modules/core/packages/pkglist.py, spintest/core.py,
	spintest/modules/gpgcheck.py:
	various fixes to error system and spintest integration

	spin/errors.py
	 * assert_file_readable() now raises an exception if the file in
	question is empty spin/modules/core/packages/comps.py
	 * added definition for various comps-specific errors
	 * uses assert_file_readable for the comps-supplied variant and for
	reading self.cvars['comps-file'] in .apply()
	spin/modules/core/packages/download.py
	 * added definition for various download-specific errors
	spin/modules/core/packages/gpgcheck.py
	 * added definition for various gpgkey-specific errors
	 * instead of using magic.py for gpgkey validation, merely uses
	assert_file_readable (as gpgkeys can technically start anywhere in
	the input file, so magic.py isn't particularly useful in this
	sense) spin/modules/core/packages/pkglist.py
	 * added definition for various pkglist-specific errors
	 * uses assert_file_readable for the pkglist-supplied variant and for
	reading self.cvars['pkglist'] in .apply() spintest/core.py
	 * CoreEventTestCase01 now additionally excepts SpinErrors
	spintest/modules/gpgcheck.py
	 * Test_GpgKeysNotProvided now fails unless a SpinError is raised
	[3b47d8664fb8]

2008-08-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* INSTALL, docsrc/Makefile, docsrc/man/Makefile,
	docsrc/man/distro/comps.rst, docsrc/man/distro/gpgsign.rst,
	docsrc/man/distro/installer.rst, docsrc/man/distro/iso.rst,
	docsrc/man/distro/isolinux.rst, docsrc/man/distro/lib.rst,
	docsrc/man/distro/main.rst, docsrc/man/distro/product.rst,
	docsrc/man/distro/publish.rst, docsrc/man/distro/repos.rst,
	docsrc/man/distro/sources.rst, docsrc/man/distro/updates.rst,
	docsrc/man/tools/rst2man.py, docsrc/man/tools/writers/__init__.py,
	docsrc/man/tools/writers/manpage.py, spin.spec:
	Fixed Bug 263; another miscellaneous cleanup of docs.

	Now that the DDFR is available online, we don't need to create the
	distro.conf.5.gz man page. Removed all the files and binaries that
	were needed to create that man page.

	Removed the BuildRequires on python-docutils and removed
	distro.conf.5.gz from %files directive in the spec file.
	[1bc1106051d8]

2008-08-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/man/spin.conf.xml:
	minor edits to spin.conf.xml for consistency
	[175e68848656]

	* spin/modules/extensions/packages/gpgsign.py:
	adding quotes to log message for clarity
	[6a4d8eff0fb0]

	* spin/modules/extensions/packages/gpgsign.py:
	gpgsign: rearranged actions in run event

	* moved "adding public key" to end of run event
	* modified log text to say "os folder" rather than "software store"
	[2d26855811b3]

2008-08-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/extensions/packages/gpgsign.py:
	Fixed Bug 260.

	The GpgSignEvent now copies the public key to the output folder.
	[edda1eb05b9e]

	* spin/modules/core/packages/gpgcheck.py:
	Made the GpgCheckEvent.version a string.
	[3176967e1375]

	* spin/modules/shared/repos.py:
	Not raising an AttributeError, if RhnPath is not defined.
	[1636643f71ce]

2008-08-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.16-1
	[48315d0ee9be]

2008-08-05  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.16-1.noarch.
	[636157b416ad] [spin-0.8.16-1]

2008-08-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.15-1
	[aad426754d97]

2008-08-05  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.15-1.noarch.
	[54a5256ce930] [spin-0.8.15-1]

2008-08-05  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* docsrc/man/spin.conf.xml:
	added brief note about <debug> element to spin.conf.xml
	[93fdeb5c35fb]

	* share/spin/schemas/spin.rng:
	bug 259 - added 'debug' to spin.conf schema
	[40894d3e076a]

	* spintest/runtest.py:
	added missing 'debug' attribute to spintest option instance
	[f6cf61995bfe]

2008-08-04  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* bin/spin, spin/errors.py, spin/event/__init__.py, spin/main.py,
	spin/modules/core/base.py, spin/modules/core/compose.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/release-files.py, spin/modules/core/packages/pkglist.py,
	spin/modules/core/repos.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py, spin/modules/extensions/sources.py,
	spin/modules/shared/createrepo.py, spin/modules/shared/installer.py,
	spin/modules/shared/repos.py:
	(hopefully) improved error handling in spin; disabled debug mode by
	default

	Debug mode is now disabled by default, meaning tracebacks are hidden
	from the terminal and the user is presented with a more
	'helpful/friendly' message (the tracebacks still appear in the log
	file).

	To reenable debug mode, use --debug on the command line or set a
	'debug' boolean in the spin.conf file.

	 bin/spin
	 * added --debug and --no-debug options spin/errors.py
	 * initial commit of error handling code in spin
	 * assert_file_readable(file,[[cls],**kwargs]) checks to ensure that
	the given file is readable; if it isn't, an exception is raised.
	cls controls the class of this exception; if not given, uses
	SpinIOError. **kwargs is a list of additional keyword arguments
	to pass to the exception
	 * SpinError is the superclass of all expected spin errors. It
	consists of automatic __init__ and __str__ methods that handle
	performing replacements on SpinError.message %(...)X vars. For
	example, if SpinError.message is '%(var1)s %(var2)s a string!',
	the SpinError's __init__() signature looks like __init__(var1,
	var2) and calling __str__() will automatically perform printf
	replacement
	 * SpinIOError is a subclass of SpinError that handles generic I/O
	related errors on files
	 * RhnSupportError is a SpinError subclass related to rhn support not
	being installed on the current system
	 * SpinErrorHandler is a mixin intended for use with the Build object
	that handles error processing
	 * _handle_Exception handles converting errors to a defined error
	class, if present (currently only used for ShlibExecuteErrors
	spin/event/__init__.py
	 * removed extended error processing code; now errors merely result in
	calling Event.error() and reraising the exception spin/main.py
	 * Build now subclasses SpinErrorHandler for error handling support
	 * debug mode now controlled by Build.debug instead of DEBUG global
	variable
	 * error handling code added around Build.dispatch.execute()
	spin/modules/*
	 * created exception classes as subclasses of Spin(IO)Error as
	necessary; convention is that expected errors are SpinError
	subclasses, while unexpected are not (this allows the try/catch
	block to filter exceptions correctly)
	 * many error messages generally revised in the transition
	spin/modules/core/repos.py
	 * removed validation code; shared with sources.py
	spin/modules/extensions/sources.py
	 * removed validation code; shared with repos.py
	spin/modules/shared/installer.py
	 * removed RpmNotFoundError; unused
	 * removed OutputInvalidError; unused spin/modules/shared/repos.py
	 * added validation code that was removed from repos/sources
	[4842f18841ad]

	* spintest/modules/comps/__init__.py,
	spintest/modules/pkglist/pkglist:
	fixed comps relative path for supplied comps file; fixed test
	pkglist format
	[a402c862b079]

2008-08-01  Uday Prakash  <uprakash@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.14-1
	[1d514c31ff4a]

2008-08-01  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.14-1.noarch.
	[bf96fc8ce66c] [spin-0.8.14-1]

2008-08-01  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	bug 253 - added newline between repogroup repos; fixed error
	messages for systemid
	[81fe7cbaa93f]

2008-07-31  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	bug 251 - better error message given with missing systemid
	[454d33624b2e]

	* INSTALL, spin.spec, spin/modules/shared/repos.py:
	added 'dosfstools' to INSTALL and spin.spec (for diskboot.img
	creation purposes)
	[087c5cbcbe39]

2008-07-30  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	added repoid to various systemid error messages
	[0062947eb2a7]

	* spin/logging.py:
	bug 249 - convert log-file to a string before opening for better
	error message
	[fd6e7ba2eca7]

	* spin/modules/core/packages/pkglist.py:
	bug 247 - pkglist validation improvements

	spin/modules/core/packages/pkglist.py
	 * all packages in pkglist are checked to ensure they have the correct
	format (n-v-r.a)
	 * spin prints a warning if the resulting pkglist is empty
	 * caught an additional error case in the kernel validation case when
	input rpms are in an incorrect format
	[d254f076f995]

2008-07-29  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/spin/schemas/distro/release-rpm.rng,
	spin/modules/core/rpmbuild/release-rpm.py, spintest/modules/release-
	rpm.py:
	Fixed Bug 248.

	Removed support for <omf/> element in the 'release-rpm' event. Also,
	updated the schema file and the test cases to reflect this change.
	[d4011caf7bcd]

2008-07-29  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	bug 241 - entering a systemid that is a directory => runtime error
	[9a826bfe2d1a]

	* merged with trunk
	[df6211f5c5ee]

	* spin/modules/core/packages/comps.py,
	spin/modules/core/packages/pkglist.py,
	spin/modules/extensions/iso.py:
	bug 245 - giving a non-file to <pkglist> no longer incorrectly
	results in (potentially) massive downloads nor improper handling of
	error condition

	Also proactively fixed similar error cases in <comps> and <pkgorder>
	[044b47b6772c]

2008-07-29  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro/lib.rng,
	share/spin/schemas/distro/repos.rng,
	share/spin/schemas/distro/sources.rng:
	repos/sources schemas now validate at least one repo or repofile
	element
	[43516a605f5e]

	* share/spin/schemas/distro/comps.rng:
	comps.rng: whitespace fixup
	[85444fd2ad46]

2008-07-29  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/core/repos.py:
	bug 239 - no longer references obsolete <installer> element in
	anaconda RuntimeError
	[1a18c4a3e0b9]

	* spin/modules/core/packages/gpgcheck.py:
	added magic type check for gpgkeys prior to importing them into
	rpmdb
	[210eafcd8cfb]

	* spin/modules/core/packages/pkglist.py:
	bug 237 - pkglist now properly runs when included or excluded pkgs
	change

	spin/modules/core/packages/pkglist.py
	 * removed .rddirs
	 * now automatically adds baseurl, mirrorlist, exclude, includepkgs,
	and enabled attributes of each repo to the variable list of
	DiffMixin if their values are non-None/non-empty
	[392dd7062bb4]

	* merged with trunk
	[4cf560cfc982]

	* spin/modules/core/packages/gpgcheck.py, spin/modules/core/rpmbuild
	/config-rpm.py, spin/modules/shared/repos.py:
	bug 236 - rhn repos are now filtered from the yum repo file created
	in config-rpm

	spin/modules/core/rpmbuild/config-rpm.py
	 * if a repo is specified explicitly in the list of repoids to include
	in the yum .repo file and it's url is a RhnPath, a warning is
	printed to the screen that the repo was skipped. If the machine
	in question doesn't have RhnPath support, this check is skipped
	(though it should never reach this point anyway because spin will
	fail earlier when trying to create this path in the first place).
	[c379ed9187ad]

2008-07-28  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpmbuild/logos-rpm/config/__init__.py:
	If two configlets had the same key, the first one was being used.

	This was happening when the anaconda version of the two configlets
	were the same, but the precedence of the first one was less than the
	precedence of the second one.
	[13373779f354]

2008-07-28  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro/comps.rng:
	comps schema: validating that 'conditional' packages have 'requires'

	Modified schema for the 'package' element so that if the 'type'
	attribute is set to 'conditional', the 'requires' attribute is
	required, and vice versa.

	Now if only our xml schema validator would report the error on the
	correct line. Sigh.
	[04b494bae9c2]

2008-07-28  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/publish.py:
	PublishEvent triggers on changes to the 'selinux-enabled' variable.

	The 'selinux-enabled' variable is set to True is selinux enabled is
	set to True. The 'publish' event runs `chcon' on the publish
	directory if it is set to True. If this variable changes, the
	'publish' event runs again.
	[84575af0d1e6]

	* spin/main.py:
	Chdir'ing into the config file's folder at a later point in time.

	Previously, we were chdir'ing into the distrodef file's folder soon
	after reading the distrodef file. This breaks the setting up of the
	share paths because if a share path specified at the command line is
	relative, it is made relative to the distrodef file's directory.
	Now, we chdir into the distrodef's directory after setting up all
	the Event objects' default values.
	[8b08877e4094]

2008-07-28  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/locals/files.py, spin/modules/core/installer/diskboot-image.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/product-image.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/shared/bootcfg.py, spin/modules/shared/installer.py:
	diskboot-image rewrite - all diskboot images are now created from
	scratch

	spin/locals/files.py
	 * removed 'virtual' property on product.img and updates.img
	spin/modules/core/installer/diskboot-image.py
	 * diskboot-image event now generates a diskboot.img file from scratch
	instead of using the diskboot.img from the base distro as the
	source. This means that fedora 9 can have a working diskboot.img
	file again spin/modules/core/installer/*-image.py
	 * added explicit handling of virtual images when necessary
	spin/modules/extensions/installer/updates-image.py
	 * added explicit handling of virtual images
	spin/modules/shared/bootcfg.py
	 * now forces the remove of the bootconfig file
	spin/modules/shared/installer.py
	 * removed virtual image processing
	 * added add_image(), create_image(), and add_or_create_image(), the
	replacements for virtual images. add_image() will create a copy of
	the image in image_locals from the source (it must already
	exist); create_image() will create a new image locally;
	add_or_create_image() will copy the image in the source, if it
	exists, or create a new image locally if not.
	 * removed custom processing of output cleanup; now uses
	.io.clean_eventcache()
	[c1955b1e568f]

2008-07-24  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro/config-rpm.rng:
	config-rpm.rng: file@destdir now requires an absolute local path
	[0bbae1e72ebe]

	* share/spin/schemas/distro/lib.rng:
	lib.rng: misc path attribute updates

	* added value-filename which disallows '/' characters in filenames
	* added value-absolute-local-path which requires a leading '/'
	character
	* renamed content-path pattern to 'attribute-mode' since in effect it
	defined the mode attribute
	* added attribute-destdir-absolute, parallel to attribute-destdir,
	which references value-absolute-local-path
	* other misc cleanup/organization
	[e01162bc42b4]

2008-07-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/event/fileio.py, spin/modules/extensions/packages/gpgsign.py:
	Fixed Bug 231.

	In IOMixin.sync_input() when checking to see if the mode of the
	input file is different from what's on disk, we need to `&' the
	input file's mode with 07777 to get an accurate condition.
	[e3b8add00658]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.13-1
	[3fe1e2de784a]

2008-07-23  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.13-1.noarch.
	[c6194c785ff2] [spin-0.8.13-1]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.12-1
	[4223f5fa4c7d]

2008-07-23  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.12-1.noarch.
	[ff2bfb93515e] [spin-0.8.12-1]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.11-1
	[c26491e1dd7a]

2008-07-23  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.11-1.noarch.
	[b38a735fde03] [spin-0.8.11-1]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.10-1
	[226bef1e4609]

2008-07-23  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.10-1.noarch.
	[408d59587028] [spin-0.8.10-1]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.9-1
	[73231f71972e]

2008-07-23  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.9-1.noarch.
	[087bcf718410] [spin-0.8.9-1]

2008-07-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/rpmbuild/config-rpm.py:
	config-rpm: added web-path and gpgsign-public-key to variables diff
	data
	[21051149fa4b]

2008-07-18  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	added check to ensure systemid exists before trying to use it
	[69b16a6763ae]

	* spin/event/fileio.py, spintest/mixins.py,
	spintest/modules/rpmbuild.py:
	fixes for spintest

	spin/event/fileio.py
	 * mode computation now pays attention to 4 digits instead of 3
	 * .sync_input() now checks file modes in addition to file names
	 * .sync_input() no longer deletes old destionation files, nor does it
	chmod them; this is handled by sync now spintest/mixins.py
	 * fixed references to 'dest' attribute spintest/modules/rpmbuild.py
	 * renamed moduleid, eventid, to 'rpmbuild' from 'rpms'
	[87c39766902d]

	* share/spin/schemas/distro/lib.rng, spin/modules/core/rpmbuild
	/config-rpm.py:
	merged with trunk
	[098b0a257d46]

	* share/spin/schemas/distro/lib.rng, spin/event/fileio.py,
	spin/modules/core/repos.py, spin/modules/core/rpmbuild/config-
	rpm.py:
	modified schema to accept 4 digit modes (possibly preceded by '0');
	modes now strip leading '0's automatically
	[41e5e0abf60f]

2008-07-17  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/rpmbuild/config-rpm.py:
	config-rpm: bumped version number
	[ac6cd508664f]

2008-07-17  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/publish.py:
	Using IOMixin.sync_input() to sync files in the publish event.

	The publish event was linking files from the build directory to the
	publish directory itself, instead of using `self.io.sync_input()'.
	This was being done so that the publish directory can be cleaned up
	as and if needed. Now that the `PublishEvent.apply()' method has
	been updated to take care of the cleaning of the publish directory,
	we can use the `self.io.sync_input(link=True)' again.
	[b67b73c4b501]

	* spin/modules/core/rpmbuild/logos-rpm/files.py:
	Fixed a bug in logos-rpm which caused .pth files to not be read.

	If a shared path didn't have a <distroid>.xml and didn't have a
	default.xml, we weren't searching for *.pth files.
	[d0f5bd720d99]

2008-07-17  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro/lib.rng:
	fix to destname validation; allowing zero or more characters

	for consistency with other text attributes
	[dfd49cb2a352]

	* branch merge
	[5726f7c833f7]

	* share/spin/schemas/distro/lib.rng:
	added validation for destname attribute; no '/' characters allowed
	[04d74002cfc5]

	* spin.spec:
	spin.spec: added requires for gnupg and mkisofs
	[86445d782600]

2008-07-17  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spintest/modules/config-rpm.py, spintest/modules/files.py,
	spintest/modules/release-files.py, spintest/modules/release-rpm.py:
	dest -> destdir, filename -> destname in spintest
	[4e703b5ea2d7]

	* spin/event/__init__.py:
	updated .getpath() implementation in DummyConfig to fit with new API
	[ed07c8099868]

2008-07-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.8-1
	[c794f933f719]

2008-07-16  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.8-1.noarch.
	[34628b23a0d8] [spin-0.8.8-1]

2008-07-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin.spec:
	After a lot of testing, now finally requiring 'python-devel'.
	[cf1a556a6c17]

2008-07-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.7-1
	[777d2f8c69e2]

2008-07-16  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.7-1.noarch.
	[8e70cc4ede4e] [spin-0.8.7-1]

2008-07-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin.spec:
	Requiring python instead of python-devel.
	[06a4c6e10829]

2008-07-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.6-1
	[2750157e1c5f]

2008-07-16  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.6-1.noarch.
	[5a20430e2949] [spin-0.8.6-1]

2008-07-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin.spec:
	merged with trunk.
	[c371c3f948b1]

	* spin.spec:
	I lied, python-devel is required.
	[1094e4e929d3]

2008-07-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.5-1
	[bfb521fabcf8]

2008-07-16  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.5-1.noarch.
	[a3d005bf88bf] [spin-0.8.5-1]

2008-07-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/spin/schemas/distro/config-rpm.rng, spin/event/fileio.py,
	spin/modules/core/rpmbuild/config-rpm.py:
	Changed dest to destdir and filename and destname in config-rpm.
	[457f2172992a]

	* share/spin/schemas/distro/lib.rng, spin/event/fileio.py:
	Renamed <path/> element attributes.

	The "dest" attribute is now calle "destdir". The "filename"
	attribute is now called "destname".
	[1408d65d4488]

	* spin.spec:
	Spin now owns /usr/share/spin.
	[d1d3ec8ee6aa]

	* spin/modules/core/rpmbuild/logos-rpm/files.py:
	You can now have files with extension .pth in <share>/logos-rpm.

	These *.pth files point to other folders that have config files that
	the logos-rpm event can use. With this change, it is possible for
	spin-logos-rpm to install files to /usr/share/spin-logos-rpm, and it
	also installs a spin-logos-rpm.pth file in /usr/share/spin/logos-
	rpm. The spin-logos-rpm.pth file points to /usr/share/spin-logos-
	rpm.
	[152165b45f58]

	* spin.spec:
	Spin doesn't require spin-logos-rpm. It is optional.
	[78b7032ddb8a]

	* Makefile, setup.py, spin.spec:
	Not relying on INSTALLED_FILES; using globs in %files in spec file.
	[d60966272b61]

	* spin/modules/extensions/rpmbuild/__init__.py:
	Removing empty extensions/rpmbuild folder.
	[152dccbdbf78]

	* spin.spec:
	Removing dependency on 'python-devel'.

	`rpmlint' raises an error if a non-devel package has a devel-package
	dependency. The 'python-setuptools' package requires 'python-devel',
	thereby making the requirement of 'python-devel' redundant.
	[213223b0e7f9]

	* Makefile:
	Was re-installing /etc/* files.
	[4978b892e64a]

	* spin/modules/shared/createrepo.py:
	execlib --> shlib.
	[81d242c43bcb]

2008-07-16  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/bootcfg.py:
	removed erroneous Macro import
	[11014d43ce04]

	* spin/event/__init__.py, spin/main.py, spin/modules/core/base.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/packages/comps.py, spin/modules/core/publish.py,
	spin/modules/core/repos.py, spin/modules/core/rpmbuild/config-
	rpm.py, spin/modules/core/rpmbuild/logos-rpm/__init__.py,
	spin/modules/core/rpmbuild/logos-rpm/config/configlets.py,
	spin/modules/core/rpmbuild/logos-rpm/files.py,
	spin/modules/core/rpmbuild/release-rpm.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/packages/gpgsign.py,
	spin/modules/extensions/sources.py, spin/modules/shared/bootcfg.py,
	spin/modules/shared/installer.py, spin/modules/shared/rpmbuild.py,
	spin/validate.py, spintest/__init__.py:
	applied .getbool() and .getpath() to spin config

	spin/*.py
	 * updated all Event.config.get(..., [fallback]) in
	BOOLEANS_[TRUE|FALSE] to use the new Event.config.getbool(...,
	[fallback]) syntax
	 * updated all pps.path(Event.config.get(..., [fallback]) to use the
	new Event.config.getpath(..., [fallback]) syntax
	 * all queries to .getbool() and .getpath(), above, no longer include
	'/text()' spin/event/__init__.py
	 * added DummyConfig.getbool(), DummyConfig.getbools(),
	DummyConfig.getpath(), and DummyConfig.getpaths() to mirror the
	API of XmlConfigElements spin/modules/core/publish.py
	 * modified PublishEvent._get_host() to automatically prepend 'http://'
	to its return value; adjusted other code accordingly
	spin/modules/extensions/packages/gpgsign.py
	 * greatly simplified gpgsign's cvar setup code spin/validate.py
	 * validate() now raises an AttributeError instead of an IOError when
	both 'schema_file' and 'schema_contents' are passed
	 * added ._scrub_tree(), a method that removes xml:base and <macro>
	from the tree prior to validation spintest/__init__.py
	 * spintest now looks for its configuration in /etc/spin/spintest.conf
	rather than /etc/spin/spin.conf
	[e39a210c1176]

2008-07-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* merged with head.
	[3d9c8b3ffd62]

	* spin/modules/core/publish.py:
	The 'publish' event cleans up files and directories in output
	folder.

	The output folder of the publish event is not its metadata
	directory, but the publish directory. Therefore,
	IOMixin.clean_eventcache() doesn't remove extraneous files and
	directories in the publish directory. Now in PublishEvent.apply() we
	remove all the files and directories in the publish directory that
	shouldn't be there.
	[82f54a78aade]

2008-07-15  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.4-1
	[a99a46de7a54]

2008-07-15  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.4-1.noarch.
	[57c532774f5b] [spin-0.8.4-1]

2008-07-15  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.3-1
	[108fc163c298]

2008-07-15  spinmaster  <spinmaster>

	* ChangeLog, setup.py, spin.spec:
	Bumped version to spin-0.8.3-1.noarch.
	[d23175dd6d34] [spin-0.8.3-1]

2008-07-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* Makefile:
	ChangeLog updated as part of `make bumpver'
	[5b67ae96f5e2]

	* .hgtags, ChangeLog, setup.py, spin.spec:
	Reverted to 0.8.2-1
	[645eb1934ff4]

	* .hgtags:
	Tagged as spin-0.8.3-1
	[561501abdb33]

2008-07-15  spinmaster  <spinmaster>

	* ChangeLog:
	Built package spin-0.8.3-1.noarch.
	[4080f646a30a]

	* setup.py, spin.spec:
	Bumped version to spin-0.8.3-1.noarch.
	[b7827b296f29]

2008-07-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin.spec:
	Adding user name and email address to changelog.
	[f7427fbe4ed6]

2008-07-15  root  <root@localhost.localdomain>

	* .hgtags:
	Tagged as spin-0.8.2-1
	[83c4b2e2fb37]

	* ChangeLog:
	spin-0.8.2-1.noarch built.
	[183071add49a] [spin-0.8.2-1]

	* setup.py, spin.spec:
	bumped version to spin-0.8.2-1.noarch
	[8123434887ba]

2008-07-14  Kay Williams  <kwilliams@renditionsoftware.com>

	* .hgtags:
	Tagged as spin-0.8.1-1
	[1fabc1a8d5a9]

	* ChangeLog:
	spin-0.8.1-1.noarch built.
	[23a5d36ab17d] [spin-0.8.1-1]

	* setup.py, spin.spec:
	bumped version to spin-0.8.1-1.noarch
	[06063b6afb20]

	* share/spin/schemas/distro/comps.rng,
	share/spin/schemas/distro/lib.rng:
	schemas: moved value-boolean-with-default to comps.rng

	since it is only used there; for consistency with DISTRODEF
	documentation
	[1f2986906835]

	* share/doc/examples/fedora.distro:
	fixed typo in example fedora.distro
	[4b9f665b147f]

2008-07-11  Uday Prakash  <uprakash@renditionsoftware.com>

	* Makefile, setup.py, spin.spec:
	Setting the Spin RPM version to be '0.8.0'.
	[120a0f6b3b0f]

	* spin/modules/shared/rpmbuild.py:
	rpmbuild: The spec file isn't deleted after the RPM has been built.

	The spec file for an rpmbuild event can be found in <event-
	id>/build/rpm/SPECS.
	[647fd3a898ff]

	* share/spin/logos-rpm/create.py:
	Had accidentally added a script to the sources.
	[fdf63fb9b48a]

	* Makefile, etc/Makefile, etc/logrotate.d/Makefile, spin.spec:
	RPM now installs logrotate file to /etc/logrotate.d/spin.
	[544f163698c0]

2008-07-11  dmusgrave  <dmusgrave@renditionsoftware.com>

	* share/spin/schemas/distro/rpms.rng:
	merged with trunk
	[726c58a612aa]

	* spin/main.py, spin/modules/shared/repos.py:
	spin now chdir()s into config directory after parsing
	[894c9c218c07]

2008-07-11  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro/config-rpm.rng, share/spin/schemas/distro
	/logos-rpm.rng, share/spin/schemas/distro/release-rpm.rng,
	share/spin/schemas/distro/rpmbuild.rng,
	share/spin/schemas/distro/rpms.rng:
	schema: renamed rpms.rng to rpmbuild.rng
	[d762ed039148]

	* share/doc/examples/centos.distro, share/doc/examples/fedora.distro:
	removed macros from example .distro files
	[96dbbd38161a]

2008-07-10  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/repos.py, spin/modules/core/rpmbuild/__init__.py,
	spin/modules/core/rpmbuild/config-rpm.py, spin/modules/core/rpmbuild
	/logos-rpm/__init__.py, spin/modules/core/rpmbuild/logos-
	rpm/config/__init__.py, spin/modules/core/rpmbuild/logos-
	rpm/config/configlets.py, spin/modules/core/rpmbuild/logos-
	rpm/files.py, spin/modules/core/rpmbuild/release-rpm.py,
	spin/modules/core/rpmbuild/rpmbuild-repo.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/config-
	rpm.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/config/__init__.py, spin/modules/core/rpms/logos-
	rpm/config/configlets.py, spin/modules/core/rpms/logos-rpm/files.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/extensions/rpmbuild/__init__.py,
	spin/modules/extensions/rpms/__init__.py,
	spin/modules/shared/__init__.py, spin/modules/shared/rpmbuild.py,
	spin/modules/shared/rpms.py, spintest/__init__.py, spintest/modules
	/config-rpm.py, spintest/modules/custom-repo.py, spintest/modules
	/logos-rpm.py, spintest/modules/release-rpm.py, spintest/modules
	/rpmbuild-repo.py, spintest/modules/rpmbuild.py,
	spintest/modules/rpms.py, spintest/modules/sources.py,
	spintest/rpmbuild.py, spintest/rpms.py:
	renamed rpms and custom-repo modules to rpmbuild and rpmbuild-repo
	[2097f5f07600]

	* spin/modules/core/packages/gpgcheck.py:
	fixed gpgcheck to expect boolean rather than string value
	[9b153ed0e5ee]

	* spin/modules/core/rpms/custom-repo.py:
	setting gpgcheck property to false for custom-repo
	[aec9fadbb30b]

	* spin/modules/shared/repos.py:
	SpinRepo overrides _boolparse to use BOOLEANS_TRUE, BOOLEANS_FALSE
	[d9c318be1ab3]

	* spintest/runtest.py:
	set default runtest distribution to fedora 9
	[df30c4a93aa5]

	* spin/modules/core/packages/__init__.py,
	spin/modules/core/packages/comps.py,
	spin/modules/core/packages/createrepo.py,
	spin/modules/core/packages/download.py,
	spin/modules/core/packages/gpgcheck.py,
	spin/modules/core/packages/pkglist.py,
	spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/packages/__init__.py,
	spin/modules/extensions/packages/gpgsign.py,
	spin/modules/extensions/software/__init__.py,
	spin/modules/extensions/software/gpgsign.py,
	spintest/modules/comps/__init__.py,
	spintest/modules/createrepo/__init__.py,
	spintest/modules/software.py:
	renamed 'software' module and meta event to 'packages'

	This is a tweak to align the module/meta-event name with the name of
	the folder it generates.
	[aa5178091f76]

2008-07-09  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL:
	INSTALL: added rhn-client-tools and rhnlib to list of spin
	dependencies
	[83c6969770fc]

	* share/spin/schemas/distro/main.rng:
	reverting bad prior commit to main schema
	[42de4c9f231b]

	* share/spin/schemas/distro/main.rng:
	schema: removed optional from <main> element

	This is mainly for schema consistency since main is a required
	element. In practice, this chance has no effect since spin fails
	prior to schema validation main elements are missing.
	[7699e6968c23]

	* share/spin/schemas/distro/repos.rng:
	repos schema: removing optional from the <repos> element

	This allows the user to get a helpful validation error if <repos> is
	missing.
	[71a1a666ad2c]

	* share/spin/schemas/distro/comps.rng:
	comps schema: removing optional from comps element

	Now that we're no longer adding 'core' group by default, users will
	want to specify groups and packages in comps. Note that if the comps
	module is disabled, the comps element will not be required.
	[7f7e67f8c35d]

2008-07-09  root  <root@kayf9.renditionsoftware.com>

	* spin/modules/core/rpms/__init__.py:
	rpms: parenting to 'os' rather than 'software'

	This allows rpms modules to run if the 'software' module group is
	disabled
	[8be926106514]

2008-07-09  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/core/rpms/config-rpm.py:
	bumped config-rpm version to be in line with previous changes
	[a438e15d419f]

	* spin/modules/core/rpms/config-rpm.py:
	seek back to beginning of downloaded script files before reading
	into spec
	[a2c44cd0b4b9]

2008-07-08  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/spin/logos-rpm/files/gdm/SpinGDM.xml, share/spin/logos-
	rpm/files/kdm/SpinKDM.xml:
	The user list on the login screen has a white background.

	Made changes in both GDM and KDM config files.
	[30739551ad4d]

	* spin/modules/core/rpms/config-rpm.py:
	Bumped 'config-rpm' event version.
	[c446a32b1bf4]

	* spin/modules/core/rpms/config-rpm.py:
	Fixed typo in postun script of config-rpm.

	An if-conditional didn't have square brackets around it.
	[212e7b596d77]

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py:
	logos-rpm: Added a trigger on firstboot for Fedora 9.

	The firstboot available for Fedora 9 uses images from
	/usr/share/firstboot/themes/default. Before Fedora 9, images were
	used from /usr/share/firstboot/pixmaps. Added a trigger to move the
	default theme to default.rpmsave and creating a symlink from
	/usr/share/firstboot/themes/spin to
	/usr/share/firstboot/themes/default.
	[ff401bc4be65]

	* spin/event/locals.py, spin/locals/logos_rpm_text.py:
	Removed locals/logos_rpm_text.py; not needed anymore.
	[36daa979ecc2]

2008-07-08  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL:
	INSTALL: updated documentation; spin.conf now at /etc/spin
	[47e92e3c32ca]

	* spin/modules/core/rpms/config-rpm.py:
	config-rpm: installing gpgsign key in 'pki' folder (not 'pkg')

	A previous commit fixed the the folder name for the generated
	NAME.repo file. This commit fixes the file location. Also, bumping
	config-rpm version number.
	[4f526145cfef]

2008-07-08  root  <root@forkbomb.renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/constants.py,
	spin/modules/core/rpms/logos-rpm/gradient.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	merged with trunk
	[bb08579ab19c]

	* spin/modules/shared/repos.py:
	added better error message when trying to include rhn(s):// paths
	without support
	[e0e44618ca9e]

2008-07-08  dmusgrave  <dmusgrave@renditionsoftware.com>

	* INSTALL:
	added mkisofs (or genisoimage) and gnupg to required packages list
	[ccae1c2925a6]

2008-07-07  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/files.py:
	Do not try to write text if no strings are found in config file.
	[14106d093041]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	Bumped logos-rpm event version.
	[8d41b9844447]

	* share/spin/schemas/logos-rpm/config.rng:
	logos-rpm: Allowing optional <limited-palette> element in configs.
	[80911e4b2d4b]

	* spin/modules/core/rpms/logos-rpm/config/configlets.py,
	spin/modules/core/rpms/logos-rpm/files.py:
	Fixed bug with writing of text to images generated by logos-rpm.

	The <strings/> element wasn't being read at all to figure out all
	the data required to write text to images.
	[ffde27ce73f9]

	* share/spin/logos-rpm/common.xml, share/spin/schemas/logos-
	rpm/config.rng, spin/modules/core/rpms/logos-rpm/files.py:
	Added validation support for logos-rpm config files.
	[47d842f92dba]

	* share/spin/logos-rpm/centos5.xml, share/spin/logos-rpm/common.xml,
	share/spin/logos-rpm/create.py, share/spin/logos-rpm/fedora9.xml,
	share/spin/logos-rpm/files/backgrounds/desktop-backgrounds-spin.xml,
	share/spin/logos-rpm/files/backgrounds/spin.xml, share/spin/logos-
	rpm/files/gdm/GdmGreeterTheme.desktop, share/spin/logos-
	rpm/files/gdm/Spin.gtkrc, share/spin/logos-
	rpm/files/gdm/SpinGDM.xml, share/spin/logos-rpm/files/gnome-
	background-properties/desktop-backgrounds-spin.xml, share/spin
	/logos-rpm/files/gnome-screensaver/lock-dialog-system.glade,
	share/spin/logos-rpm/files/gnome-screensaver/lock-dialog-
	system.gtkrc, share/spin/logos-rpm/files/kdisplay/Spin.kcsrc,
	share/spin/logos-rpm/files/kdisplay/SpinKDM.kcsrc, share/spin/logos-
	rpm/files/kdm/GdmGreeterTheme.desktop, share/spin/logos-
	rpm/files/kdm/SpinKDM.xml, share/spin/logos-
	rpm/files/ksplash/Theme.rc, share/spin/logos-rpm/fonts
	/DejaVuLGCSans-Bold.ttf, share/spin/logos-rpm/fonts/DejaVuLGCSans-
	ExtraLight.ttf, share/spin/logos-rpm/fonts/DejaVuLGCSans.ttf,
	share/spin/logos-rpm/icons.xml, share/spin/logos-rpm/icons
	/disconnect-active.png, share/spin/logos-rpm/icons/disconnect-
	prelight.png, share/spin/logos-rpm/icons/disconnect.png, share/spin
	/logos-rpm/icons/halt-active.png, share/spin/logos-rpm/icons/halt-
	prelight.png, share/spin/logos-rpm/icons/halt.png, share/spin/logos-
	rpm/icons/language-active.png, share/spin/logos-rpm/icons/language-
	prelight.png, share/spin/logos-rpm/icons/language.png, share/spin
	/logos-rpm/icons/line.png, share/spin/logos-rpm/icons/quit-
	active.png, share/spin/logos-rpm/icons/quit-prelight.png, share/spin
	/logos-rpm/icons/quit.png, share/spin/logos-rpm/icons/reboot-
	active.png, share/spin/logos-rpm/icons/reboot-prelight.png,
	share/spin/logos-rpm/icons/reboot.png, share/spin/logos-rpm/icons
	/selection-active.png, share/spin/logos-rpm/icons/selection-
	prelight.png, share/spin/logos-rpm/icons/selection.png, share/spin
	/logos-rpm/icons/session-active.png, share/spin/logos-rpm/icons
	/session-prelight.png, share/spin/logos-rpm/icons/session.png,
	share/spin/logos-rpm/icons/suspend-active.png, share/spin/logos-
	rpm/icons/suspend-prelight.png, share/spin/logos-
	rpm/icons/suspend.png, share/spin/logos-rpm/icons/system-active.png,
	share/spin/logos-rpm/icons/system-prelight.png, share/spin/logos-
	rpm/icons/system.png, share/spin/logos-rpm/redhat5.xml,
	share/spin/schemas/logos-rpm/config.rng, spin/locals/__init__.py,
	spin/locals/logos_rpm.py, spin/main.py, spin/modules/core/rpms
	/logos-rpm/__init__.py, spin/modules/core/rpms/logos-
	rpm/config/__init__.py, spin/modules/core/rpms/logos-
	rpm/config/configlets.py, spin/modules/core/rpms/logos-
	rpm/constants.py, spin/modules/core/rpms/logos-rpm/files.py,
	spin/modules/core/rpms/logos-rpm/gradient.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm: Complete rewrite of logos RPM generation.

	The logos-rpm event now makes user customization of the output
	images really easy. There is a distro-specific config file located
	at share/logos-rpm/{redhat5,centos5,fedora9}.xml. If no distro-
	specific config file is found, a file called "default.xml" is
	searched for in the share paths and used.

	The config file can use macros and XIncludes similar to the distro
	definition file.

	This config file defines its precedence. It defaults to 1 and is
	used to order multiple config files. If two files have the same
	precedence the second config file's data overrides the first one's.

	It also contains <file/> and<image/> elements. The <file/> element
	simply copies a file and installs it to the location defined by the
	element. The config file writer can choose to have files specific to
	XWindow Types and Anaconda Versions; <file/>s can also be removed
	for logos RPMs generated for distributions after a specific anaconda
	version.

	The <image/> elements are of three types: <create/>, <source/>, or
	<remove/>. The <create/> element can be used to define the creation
	of an image. The <source/> image is the same as <file/> elements and
	they can be used interchangeably. The <remove/> element is also the
	same as the one for <file/> elements in that it removes images after
	a certain anaconda version.
	[131841dbd384]

2008-07-07  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py:
	bug 209 - this fix should allow spin to run again for systems
	without rhn* rpms installed
	[fdfa7a469199]

2008-07-02  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/modules/shared/repos.py, spintest/__init__.py,
	spintest/modules/gpgcheck.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/repos.py, spintest/modules/sources.py:
	removed special casing of redhat repos in test suites; updated a few
	test cases
	[b55197986a36]

	* spin/modules/shared/repos.py:
	full support of RHN paths is finally here!

	spin/modules/shared/repos.py
	 * added RhnSpinRepo, a subclass of SpinRepo that handles RHN's finicky
	repomd.xml files. Specifically, it attempts to download the
	repomd.xml file up to 5 times, checking each time for checksums
	of empty files ('da39a...0709'), rejecting files that contain any
	checksum like this. If one is not found, raises a RuntimeError.
	RhnSpinRepos are used for any MirrorPath who's realm is a RhnPath
	 * we now check two places for the repomd.xml timestamp/contents - the
	output directory inside of the spin cache and the global sync
	cache itself. The first will be in place in normal spin
	execution, while the second should be there even in the event of
	an error during repos execution. This makes handling of redhat
	repositories fully identical to how other repos are handled.
	 * combined with the fixes to stat updates in pps, the above changes
	allow RHN-based paths to function reasonably well in the spin
	system, including correct behavior in the various --skip,
	--force, and error cases
	[cf2f2deae44c]

	* spintest/core.py:
	... and apparently I'm a moron and can't fix stuff very well
	[f5c5cfe2eb26]

	* spintest/core.py:
	missed one locking fix
	[a8694082cf34]

	* spintest/__init__.py:
	modified locking logic of spin test cases to work with new locking
	system
	[cf6d518f8cea]

2008-07-01  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spin/event/fileio.py, spin/modules/core/rpms/config-rpm.py,
	spin/modules/shared/repos.py:
	added 'filename' argument to Event.io.add_fpath; which allows
	renaming files on copy
	[306e84aeb30c]

	* spin/main.py:
	now uses lock.py from rendition-common for locking
	[5dd79349a759]

2008-06-30  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py, spin/modules/shared/rpms.py:
	validation: modified spin to look for schemas in 'distro' folder

	* related to prior commit
	[868337b8411a]

	* share/spin/schemas/distro.conf/bootiso.rng,
	share/spin/schemas/distro.conf/comps.rng,
	share/spin/schemas/distro.conf/config-rpm.rng,
	share/spin/schemas/distro.conf/createrepo.rng,
	share/spin/schemas/distro.conf/diskboot-image.rng,
	share/spin/schemas/distro.conf/files.rng,
	share/spin/schemas/distro.conf/gpgsign.rng,
	share/spin/schemas/distro.conf/initrd-image.rng,
	share/spin/schemas/distro.conf/iso.rng,
	share/spin/schemas/distro.conf/isolinux.rng,
	share/spin/schemas/distro.conf/kickstart.rng,
	share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/logos-rpm.rng,
	share/spin/schemas/distro.conf/logos.rng,
	share/spin/schemas/distro.conf/main.rng,
	share/spin/schemas/distro.conf/pkglist.rng,
	share/spin/schemas/distro.conf/product-image.rng,
	share/spin/schemas/distro.conf/publish.rng,
	share/spin/schemas/distro.conf/release-files.rng,
	share/spin/schemas/distro.conf/release-rpm.rng,
	share/spin/schemas/distro.conf/repos.rng,
	share/spin/schemas/distro.conf/rpms.rng,
	share/spin/schemas/distro.conf/sources.rng,
	share/spin/schemas/distro.conf/updates-image.rng,
	share/spin/schemas/distro/bootiso.rng,
	share/spin/schemas/distro/comps.rng, share/spin/schemas/distro
	/config-rpm.rng, share/spin/schemas/distro/createrepo.rng,
	share/spin/schemas/distro/diskboot-image.rng,
	share/spin/schemas/distro/files.rng,
	share/spin/schemas/distro/gpgsign.rng, share/spin/schemas/distro
	/initrd-image.rng, share/spin/schemas/distro/iso.rng,
	share/spin/schemas/distro/isolinux.rng,
	share/spin/schemas/distro/kickstart.rng,
	share/spin/schemas/distro/lib.rng, share/spin/schemas/distro/logos-
	rpm.rng, share/spin/schemas/distro/logos.rng,
	share/spin/schemas/distro/main.rng,
	share/spin/schemas/distro/pkglist.rng, share/spin/schemas/distro
	/product-image.rng, share/spin/schemas/distro/publish.rng,
	share/spin/schemas/distro/release-files.rng,
	share/spin/schemas/distro/release-rpm.rng,
	share/spin/schemas/distro/repos.rng,
	share/spin/schemas/distro/rpms.rng,
	share/spin/schemas/distro/sources.rng, share/spin/schemas/distro
	/updates-image.rng:
	cleanup: renamed schemas folder 'distro.conf' -> 'distro'
	[154d222b1f5b]

2008-06-27  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py, spin/modules/core/autoclean.py,
	spin/modules/core/base.py, spin/modules/core/compose.py,
	spin/modules/core/init.py, spin/modules/core/installer/bootiso.py,
	spin/modules/core/installer/diskboot-image.py,
	spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/release-files.py, spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/repos.py, spin/modules/core/rpms/__init__.py,
	spin/modules/core/rpms/config-rpm.py, spin/modules/core/rpms/custom-
	repo.py, spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py:
	--list-modules: changes to text and formatting

	* Removed module group section
	* Now organizing modules by group (or none)
	* Removed reference to implicit 'all' module - to be covered in man
	page
	* Added descriptions for previously undescribed modules
	* Modified descriptions for several modules
	[f32756dcd94f]

2008-06-26  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py, spin/modules/core/installer/logos.py,
	spin/modules/core/rpms/logos-rpm/handlers.py:
	Fedoras 7 and 8 are "unofficially supported." (Kinda, sorta)

	The Fedora-related distribution information dictionary sets the
	"0th" Fedora distribution to use Fedora 9 images. As a side effect
	of this, Fedoras 7 and 8 pass test cases. In the future if we
	discontinue support of Fedora 9 and start our Fedora support at
	Fedora X, the "0th" Fedora distribution should be set up to use
	images for Fedora X. This way everything from Fedora 7 to Fedora X
	will pass their test cases.
	[4e2782916be7]

	* spintest/modules/logos.py:
	spintest/modules/logos: code cleanup
	[cd108bce6d5b]

	* spin/modules/shared/installer.py:
	shared/installer: code cleanup of ExtractMixin.

	ExtractMixin uses `self.rpms' instead of calling self._find_rpms(),
	because self._find_rpms() has already been called once and has
	populated `self.rpms'.
	[d9ab4eb79185]

	* spin/modules/core/installer/logos.py:
	logos: code cleanup, bugfix.

	Similar bugfix as in release-files. Also, removed LogosEvent.dorun;
	instead LogosEvent has an 'rpms' attribute which is set to None, if
	no RPMs are found.
	[00f8ff7c9e7d]

	* spin/modules/core/installer/release-files.py:
	release-files: bugfix, code cleanup.

	The ReleaseFilesEvent._find_rpms() method first looks for '<product-
	name>-release' RPM, and if it doesn't find it, it looks for
	'*release*' and '*release-notes* RPMs'. There is a potential bug
	here in the case where the product name contains the substring
	"release". So now, I have added an nglob for '*<product-name>*'.
	[f578e7cecf4c]

	* share/spin/schemas/distro.conf/logos.rng:
	logos: fixed schema for logos event.

	Made the <package/> element optional. Also including the 'lib.rng'
	file.
	[83e7c7065968]

2008-06-25  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	merged with trunk.
	[eff75bb56c5c]

	* spin/locals/logos_rpm.py:
	logos-rpm: Updated triggers to support KDE for Fedora 9.

	Added triggers on 'kde-settings' and 'kde-settings-kdm'. Also, fixed
	a bug in the 'desktop-background-basic' triggerun script, because of
	which all the symbolic links were not being removed during
	uninstallation.
	[34357100e77f]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: Fixed event version and trigger script creation.

	The logos-rpm event version is 0.1.0 now. While writing the trigger
	scripts, the rpm_name variable in the script contents (read from the
	locals) wasn't being replaced.
	[acd649438a56]

2008-06-25  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py, spin/modules/core/installer/__init__.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/pxeboot-images.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/config-
	rpm.py, spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py:
	list-modules: tweaks to module descriptions
	[630362db7b03]

2008-06-25  Daniel Musgrave  <dmusgrave@renditionsoftware.com>

	* spintest/runtest.py:
	added dummy list_modules to OptParse.Values instance
	[9137f412863b]

	* spin/main.py:
	allow description for 'all' module group
	[19726f1e378f]

	* spin/modules/core/rpms/config-rpm.py:
	added non-raw scripts as input to config-rpm; non-raw scripts now
	provide a statusbar when downloaded as well
	[8aa04a4bc745]

2008-06-25  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/loader.py, spin/main.py:
	tweaks to --list-modules

	spin/event/loader.py
	 * all extension modules are automatically loaded with --list-modules
	spin/main.py
	 * module display list is now a (mostly) complete english sentence
	combined with the description
	 * adjusted _pprint_modules to no longer require modgrps; this variable
	is now automatically computed from the loader instance
	[778ab688fd18]

	* spin/modules/core/repos.py, spin/modules/core/rpms/logos-
	rpm/__init__.py, spin/modules/core/software/download.py:
	merged with trunk
	[74ac7184ac5e]

	* bin/spin, spin/event/loader.py, spin/main.py,
	spin/modules/core/autoclean.py, spin/modules/core/base.py,
	spin/modules/core/compose.py, spin/modules/core/init.py,
	spin/modules/core/installer/__init__.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/pxeboot-images.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/config-
	rpm.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py:
	added --list-modules command line option

	bin/spin
	 * added --list-modules command line option, which prints out a summary
	of modules available in a given spin run spin/event/loader.py
	 * adjusted loader logic to match change in dispatch.py spin/main.py
	 * added ._pprint_modules(), which prints out a list of modules and
	module groups with associated description spin/modules/*/*
	 * fixed a few module groupings
	[7562c9de4365]

2008-06-24  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/autoclean.py, spin/modules/core/base.py,
	spin/modules/core/compose.py, spin/modules/core/init.py,
	spin/modules/core/installer/__init__.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/pxeboot-images.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/config-
	rpm.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py:
	modified events to use new MODULE_INFO variable for storing module
	info
	[ffb07e15398e]

2008-06-25  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/repos.py:
	repos: bumped version
	[6be56f4488e7]

2008-06-24  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/core/software/download.py:
	merged with branch.
	[89ed71122750]

	* spin/modules/shared/repos.py:
	Fixed a pretty major bug in RepoEventMixin.

	The RepoEventMixin.read_new_packages() was not recreating the
	"packages" file if the primary.xml.gz changed. The "download" event
	was, therefore, not downloading all the new packages.
	[24df0cb504d5]

	* spin/modules/core/software/download.py:
	Raising an exception if all packages in pkglist not downloaded.

	In the download event, we were silently passing if a file listed in
	the pkglist file was not being downloaded. This is bad! Fixed.
	[6fd20fad2262]

	* spin/event/locals.py, spin/locals/logos_rpm.py,
	spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	Reorganized the triggers in L_LOGOS_RPM_DISTRO_INFO.

	Previously, the 'triggerin' and 'triggerun' keys were defined
	independently, with its children being a list of things to trigger
	on. Now, there is 'triggers' key which defines a list of items to
	trigger on, with its children being 'triggerin', 'triggerun', and,
	potentially in the future, 'triggerin_flags', 'triggerun_flags' etc.

	Updated the logos-rpm module to reflect these changes.
	[cb81b7a50b18]

	* spin/event/locals.py, spin/locals/logos_rpm.py,
	spin/locals/logos_rpm_text.py:
	Broke down logos_rpm.py into logos_rpm.py and logos_rpm_text.py
	[0541c3b335e0]

	* spin/locals/logos_rpm.py:
	Fixed the backup of the /usr/share/backgrounds/waves folder.

	The /usr/share/backgrounds/waves folder in Fedora 9 was always
	getting backed up to /usr/share/backgrounds/waves.rpmsave, even if
	the latter directory existed. Not doing so anymore -- backing the
	/usr/share/backgrounds/waves folder iff the backup directory doesn't
	exist.
	[82f27497770c]

2008-06-24  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/__init__.py, spin/event/loader.py,
	spin/modules/core/autoclean.py, spin/modules/core/base.py,
	spin/modules/core/compose.py, spin/modules/core/init.py,
	spin/modules/core/installer/__init__.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/pxeboot-images.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/config-
	rpm.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py:
	reworked event parenting so that parentid is in the .__init__ call
	instead of the EVENTS variable

	spin/event/__init__.py
	 * Event.__init__ now accepts parentid, the id of event that will serve
	as this event's parent
	 * adjusted property handling for mddir, mdfile, OUTPUT_DIR,
	SOFTWARE_STORE, and config spin/event/loader.py
	 * modified to set up .modules, as the standard Loader does
	spin/modules/*/*
	 * all events now set up parent id throught the __init__ method rather
	than the EVENTS variable
	[3a23d6e6180f]

	* spin/modules/core/rpms/release-rpm.py:
	removed release-rpm cruft
	[c88b918ae4ab]

2008-06-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/config-rpm.py:
	Bumped 'config-rpm' event version.
	[b32be8efc1db]

	* spin/modules/core/rpms/config-rpm.py:
	fixed 'gpgkey' entry in repo files that config RPM creates.

	The 'gpgkey' option in the repo file we create didn't have the
	'file://' prefix. Also, it was installing the GPG key to '/etc/pkg
	/rpm-gpg' instead of '/etc/pki/rpm-gpg'.
	[aeaedf2918ab]

2008-06-21  uday  <uday@demo.renditionsoftware.com>

	* spin.spec:
	The /usr/bin/spin file was being listed twice in the Spin RPM.

	Once added by distutils, and then added explicitly in the %files
	section of the spec file.
	[f05578d47be1]

	* Makefile, spin.spec:
	using %exclude directives instead of adding files to INSTALLED_FILES

	The eula.py file that gets installed to /usr/share/spin/release; but
	the eula.pyc and eula.pyo files are created for it, which are not
	needed. Using the %exclude directive to exclude those files.
	[dfadbf29bcdd]

2008-06-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/logos.py:
	logos: creates product-image-content cvar if needed

	* e.g. if the product-image event is disabled
	[691c96539a2c]

2008-06-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: bumped event version
	[c7f57f7df4c3]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: Not using the CommonFilesHandler anymore.
	[c13d6d6c9624]

	* spin/locals/logos_rpm.py:
	locals/logos-rpm: fixed triggers for fedora 9.

	Fedora 9's logos rpm needs to trigger on both desktop-backgrounds-
	compat and desktop-backgrounds-basic.
	[10a1bd5c0cbd]

	* merged with branch
	[3191a502447d]

	* docsrc/man/Makefile, docsrc/man/spin.conf.xml, docsrc/man/spin.xml,
	docsrc/man/spin/spin.conf.xml, docsrc/man/spin/spin.xml, spin.spec:
	Fixed Bug 194.

	Added BuildRequires for libxslt (provides xsltproc), docbook-style-
	xsl (provides the stylesheet used to translate the xml file to man
	page).
	[2f265f516a10]

2008-06-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/repos.py, spin/modules/extensions/sources.py,
	spin/modules/shared/repos.py:
	repos: added validation and improved error messages

	* repos/sources - validate that at least one <repo> or <repofile>
	element provided
	* shared repos - modified 'no enabled repos' error to include parent
	element name
	[93cecf4ec196]

	* docsrc/man/spin/spin.conf.xml, docsrc/man/spin/spin.rst,
	docsrc/man/spin/spin.xml:
	docsrc: updated spin man page; added spin.conf man page

	* removed prior spin man page in rst format
	* added new man pages for spin and spin.conf in xml format
	[7097f6f7147f]

	* spin/main.py:
	main: added element name to invalid character message
	[91a748a1f534]

	* spin/modules/shared/repos.py:
	repos: strip mirror syntax from url reported in error message
	[b40f5faf3a4d]

	* spin/modules/shared/repos.py:
	repos: tweaks to "no repodata found" error message
	[1113ce0ae8c6]

2008-06-13  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro.conf/release-rpm.rng:
	release-rpm: adding back obsoletes element
	[68fa4297969b]

	* share/spin/schemas/distro.conf/release-rpm.rng:
	release-rpm.rng: removed extraneous include

	oops, conflicting commits
	[121b77c31eda]

2008-06-13  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/spin/schemas/distro.conf/release-rpm.rng,
	spin/modules/core/rpms/release-rpm.py:
	merged with trunk
	[1bc42bd87e2a]

	* share/spin/schemas/distro.conf/diskboot-image.rng,
	share/spin/schemas/distro.conf/files.rng,
	share/spin/schemas/distro.conf/initrd-image.rng,
	share/spin/schemas/distro.conf/isolinux.rng,
	share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/product-image.rng,
	share/spin/schemas/distro.conf/release-rpm.rng,
	share/spin/schemas/distro.conf/updates-image.rng,
	spin/modules/core/rpms/release-rpm.py, spintest/modules/release-
	rpm.py:
	flattened release-rpm distro conf elements

	share/spin/schemas/distro.conf/lib.rng
	 * removed 'element-path' and 'element-path-with-dest'
	 * added 'content-path' and 'content-path-with-dest', which can be used
	in elements of arbitrary names to provide path-like schema to them
	share/spin/schemas/distro.conf/*.rng
	 * replaced <ref name="element-path"/> with <element
	name="path"><ref name="content-path"/></element>
	 * replaced <ref name="element-path-with-dest"/> with <element
	name="path"><ref name="content-path-with-dest"/></element>
	spin/modules/core/rpms/release-rpm.py
	 * flattened xpath expressions:
	    - eula/path => eula
	    - release-notes/omf/path => omf
	    - release-notes/html/path => html
	    - release-notes/doc/path => doc
	    - release-files/path => file
	 * include-in-firstboot is now an attribute on eula elements instead of
	a child element spintest/modules/release-rpm.py
	 * updated test suites to match the above changes
	[23030667fe05]

2008-06-13  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro.conf/logos-rpm.rng:
	logos-rpm.rng: added include for lib.rng
	[4da74416ccad]

	* share/spin/schemas/distro.conf/release-rpm.rng:
	release-rpm.rng: including lib.rng
	[eddfddc34966]

	* spin/modules/core/rpms/release-rpm.py:
	release-rpm: bumped version
	[42c7d296e75e]

2008-06-13  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/rpms/config-rpm.py:
	fixed the relative pathing issue for the post/postun script
	generation
	[6841e18963f3]

	* spin/modules/core/rpms/config-rpm.py, spin/modules/extensions/rpms
	/config-rpm.py, spintest/modules/config-rpm.py:
	made config-rpm a core suite again
	[74e8e2aed9d5]

	* spin/main.py:
	name, version, and id are now validated against a filename-character
	validator
	[544a56a53d38]

	* spintest/modules/config-rpm.py, spintest/modules/release-rpm.py,
	spintest/rpms.py:
	updated rpm test cases to reflect changes to config-rpm and release-
	rpm

	spintest/modules/config-rpm.py
	 * ConfigRpmEventTestCase now extends RpmBuildMixinTestCase
	 * added some config to test out the new spec spintest/modules/release-
	rpm.py
	 * ReleaseRpmEventTestCase now extends RpmBuildMixinTestCase
	 * No release rpm test cases extend InputFilesMixinTestCase or
	ExtractMixin
	 * removed repo- and gpg-related file tests in Test_ReleaseRpmInputs
	spintest/rpms.py
	 * merged InputFilesMixinTestCase and ExtractMixinTestCase into
	RpmBuildMixinTestCase
	 * simplified property definitions
	[61b7957e266e]

	* spin/modules/core/rpms/release-rpm.py, spin/modules/extensions/rpms
	/config-rpm.py, spin/modules/shared/rpms.py:
	updated config-rpm spec, removed InputFilesMixin, removed repo
	processing from release-rpm

	spin/modules/core/rpms/release-rpm.py
	 * ReleaseRpmEvent no longer extends InputFilesMixin
	 * ReleaseRpmEvent no longer conditionally-requires 'web-path' or
	'gpgsign-public-key'
	 * fixed a potential bug in provides processing
	 * ReleaseRpmEvent no longer does any processing on repofiles or
	gpgkeys; these are now handled by config-rpm
	spin/modules/extensions/rpms/config-rpm.py
	 * config-rpm now handles repofile inclusion and gpgkeys
	 * config-rpm can now include arbitrary rpm scripts and triggers via
	the <script> and <trigger> element, respectively. See the spec
	for more details
	 * ConfigRpmEvent no longer extends InputFilesMixin
	 * ConfigRpmEvent now requires 'input-repos'
	 * ConfigRpmEvent now conditionally-requires 'web-path' and
	'gpgsign-public-key'
	 * added ConfigRpmEvent.validate(), which raises an InvalidConfigError
	if any <file> element has its 'content' type set to 'raw' without
	providing a 'filename' attribute
	 * removed ConfigRpmEvent._get_download_id() and ._handle_attributes()
	 * added ConfigRpmEvent._generate_repofile(), which handles creating
	the yum .repo file to include in the rpm
	 * added ConfigRpmEvent.get_pre(), .get_post(), .get_preun(),
	.get_postun(), .get_verifyscript(), and .get_triggers(), which
	are responsible for handling the various supported script types
	 * added ConfigRpmEvent._mk_post(), which creates the post scriptlet
	responsible for installing the files specified in <file> elements
	 * added ConfigRpmEvent._mk_postun(), which creates the postun
	scriptlet responsible for removing the files specified in <file>
	elements
	 * both ._mk_post() and ._mk_postun() create scriptlets that use for
	loops instead of endlessly catting together the same code block
	with different file names
	 * due to repofile handling changes, this event needs to be made core
	(will happen in subsequent commit) spin/modules/shared/rpms.py
	 * removed InputFilesMixin; it really didn't do anything useful anymore
	 * RpmBuildMixin.run() no longer cleans event cache indiscriminantly;
	instead, it does normal cleaning (which respects output files
	that don't change)
	 * RpmBuildMixin.data_files now ignores files in a 'files' or 'scripts'
	subdirectory; a better idea would be to have the nglob configurable
	by the *RpmEvent itself
	 * TriggerContainer now raises a TypeError when trying to append a non
	trigger, rather than an Exception
	[b9571a9846fc]

	* spin/modules/core/publish.py:
	fixed a bug where self.cvars['web-path'] could be a string instead
	of a Path
	[91679c6119d7]

	* spin/modules/shared/repos.py:
	bug 191 - now provides more useful (and earlier) message when a
	valid repo URL doesn't contain repos
	[246dff431021]

	* spin/event/fileio.py:
	added extra kwarg support to IOObject.add_xpath

	spin/event/fileio.py
	 * IOObject.add_xpath() (and .add_xpaths()) now supports 'relpath' and
	'force_relative' kwargs
	 * IOObject._process_path_xml no longer accepts 'absolute'; instead it
	accepts 'force_relative', which has the exact opposite meaning (this
	change was made to make it clearer what is happening in the back
	end)
	[e83df107724a]

	* share/spin/schemas/distro.conf/config-rpm.rng,
	share/spin/schemas/distro.conf/rpms.rng:
	updated schemas to new config-rpm changes
	[8e55fad8fb49]

2008-06-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* merged with trunk
	[e7faefcb6e1c]

	* spin/modules/core/installer/bootiso.py:
	bootiso: Not writing stage2.img to boot.iso image.

	This will keep the boot.iso image consistent across all the
	distributions we create.
	[171c403894d7]

2008-06-12  Kay Williams  <kwilliams@renditionsoftware.com>

	* branch merge
	[f1b783013e21]

	* spin/main.py:
	main: changed default cache suffix from GiB to GB

	* to avoid documenting gibibytes
	[349d34097bb7]

2008-06-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* merged with trunk
	[e3d1749ea5e8]

	* spin/modules/core/installer/bootiso.py,
	spin/modules/core/installer/isolinux.py:
	isolinux: if custom splash image found, add it to 'isolinux-files'.

	Also, bumped bootiso event's version.
	[7f1877f0e0c6]

2008-06-12  Kay Williams  <kwilliams@renditionsoftware.com>

	* bin/spin:
	changed default location of spin.conf, for future flexiblity

	* was /etc/spin.conf
	* now /etc/spin/spin.conf
	[d21e3d7fdc7f]

2008-06-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py:
	logos-rpm: not specifying font colors for syslinux-vesa-splash.jpg
	[6a64babfe253]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/extensions/rpms/config-rpm.py:
	bumped RPM events' version number.
	[c5eea7693770]

2008-06-11  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/shared/rpms.py:
	Not converting trigger*_text to trigger*_script tags.

	With the changes in `rendition.mkrpm', trigger*_script[1] tags are
	no longer supported. Made changes in the logos-rpm event to pass
	trigger*_scripts[1] parameters.

	Also, removing the conversion of trigger*_text to trigger*_script,
	now that trigger*_script doesn't exist (replaced by
	trigger*_scripts), because:

	1. It is difficult to know which script file out of the list of
	trigger*_scripts, the text should be added to.

	2. If a dummy trigger*_script file is created and added to
	trigger*_scripts, it is difficult to compute a unique name. Even if
	it were easy, it is difficult to compute the index where this dummy
	trigger*_script file should be inserted.

	Therefore, it is left to the client to figure all this out.

	 [1] triggerin_script(s), triggerun_script(s),
	triggerpostun_script(s)
	[cae8713a1dcb]

	* spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/shared/rpms.py:
	rpms: added the concept of Trigger and TriggerContainer objects.

	TriggerContainer objects contain Trigger objects, that make is
	really easy to write out trigger config files (which are now
	supported by `rendition.mkrpm').

	RpmBuildObject.write_spec() makes sure that if a Trigger object has
	a "triggerin_text", "triggerun_text", or "triggerpostun_text", it is
	removed and its contents appended to the "triggerin_script",
	"triggerun_script", or "triggerpostun_script" file respectively. The
	*_script files get created if they don't already exist.

	Made relevant changes in the logos-rpm event to use TriggerContainer
	and Trigger objects.
	[7e735716c724]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm: removed get_trigger{in,un}(), added to get_triggers().

	Removed the get_triggerin() and get_triggerun() methods and added
	their contents to get_triggers().
	[05fbee95b66b]

2008-06-11  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py:
	misc text wrapping cleanup
	[ea368d70304a]

	* branch merge
	[34f3ff9dde38]

	* spin/main.py:
	log-file: added friendly error if log-file points to a directory
	[75226d425c15]

2008-06-11  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/core.py, spintest/rpms.py:
	test case updates from rpm changes from yesterday
	[f6e1fad67d0b]

	* spin/modules/shared/rpms.py:
	bug fixes related to rpm changes from yesterday
	[be80cdc6f2e4]

2008-06-11  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/centos.distro, share/doc/examples/fedora.distro:
	examples: added name elements for centos and fedora repos

	* in example/centos.distro and example/fedora.distro
	[d5738f6ebab2]

2008-06-10  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py:
	shared/rpms: making data_files look pretty in setup.cfg
	[cb436bcf30db]

	* spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/shared/rpms.py:
	rpms: made changes to reflect modification of trigger support

	The rendition-common package now supports a much "cleaner" triggers
	support. Changes have been made in all the RPM-related modules to
	reflect this.

	RpmBuildMixin.get_trigger[in,un,postun]() removed in favor of
	RpmBuildMixin.get_triggers(). The get_triggers() method should
	return a dictionary of the form:

	{trigger1: {trigger: <id> (defaults to trigger1),
	triggerin_script: /path/to/script (optional),
	triggerun_script: /path/to/script (optional),
	triggerpostun_script: /path/to/script (optional), flags:
	<flags> (optional) } }
	[00c2157a9328]

2008-06-10  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* merged with trunk
	[ff6301faf7b4]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/handlers.py, spin/modules/core/rpms/release-rpm.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/rpms.py:
	optimizations and cleanup to rpm generation

	Primarily moved most rpm build mixin stuff into a .rpm container to
	avoid namespace issues. Most of the methods got renamed because of
	this move, removing the leading '_'. Many variables similarly had
	'rpm_' removed from their prefix.

	spin/modules/core/rpms/logos-rpm/__init__.py
	 * removed ._get_distro_info; replaced with .distro_info property
	spin/modules/shared/rpms.py
	 * Events that extend RpmBuildMixin now have a .rpm property that
	contains most of the rpm-related variables and methods
	 * rpm_desc, rpm_name, rpm_summary, rpm_license are now accessible in
	the rpm object as desc, name, summary, and license, respectively
	 * optimized the calculation of obsoletes, provides, and requires
	 * renamed ._generate to .generate
	 * renamed several api methods: _get_build_script =>
	get_build _get_clean_script => get_clean
	_get_install_script => get_install
	_get_post_install_script => get_post
	_get_post_uninstall_script => get_postun
	_get_pre_install_script => get_pre _get_prep_script
	=> get_prep _get_pre_uninstall_script => get_preun
	_get_verify_script => get_verifyscript _get_triggerin
	=> get_triggerin _get_triggerpostun =>
	get_triggerpostun _get_triggerun => get_triggerun
	This way, method names directly correspond to the script they
	return. I also decided to remove _script from the ends because it
	makes the names shorter, but we can add those back in if we want.
	 * removed ._get_rpm_path; replaced with rpm_path property
	 * removed ._get_srpm_path; replaced with srpm_path property
	 * removed ._get_data_files; replaced with data_files property
	 * moved RpmBuildMixin._setup_build to RpmBuildMixin.rpm.setup_build
	 * moved RpmBuildMixin._save_release to RpmBuildMixin.rpm.save_release
	 * moved RpmBuildMixin._check_release to
	RpmBuildMixin.rpm.check_release
	 * moved RpmBuildMixin._write_spec to RpmBuildMixin.rpm.write_spec
	 * moved RpmBuildMixin._add_data_files to
	RpmBuildMixin.rpm.add_data_files
	 * moved RpmBuildMixin._add_config_files to
	RpmBuildMixin.rpm.add_config_files
	 * moved RpmBuildMixin._add_doc_files to
	RpmBuildMixin.rpm.add_doc_files
	[43785cb93586]

2008-06-10  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/installer/logos.py:
	logos: if no splash image, found don't do anything

	If no splash image is found in the logos RPM, don't raise an
	exception. Instead, let the isolinux event download the default
	splash image and get done with it.
	[68e62a520de7]

	* spin/modules/shared/idepsolver.py,
	spintest/modules/download/__init__.py:
	idepsolver: the "indentation error" fix a few days ago broke things.

	The indentation error that I was seeing a few days ago was happening
	because the package to be removed was not there in the list of
	cached items; I incorrectly assumed it to be an indentation error,
	and "fixed" it. This commit makes the necessary changes to that the
	removal of packages has the desired effect.
	[0aa3fad215fa]

	* spin/modules/core/software/comps.py:
	comps: always creating the core group

	The "core" group wasn't being created if there were no packages
	listed in the <comps/> section of the config file and all the custom
	RPM events were turned off.
	[91f382ca0da9]

2008-06-09  Uday Prakash  <uprakash@renditionsoftware.com>

	* branch merge
	[1c51b20d460f]

2008-06-06  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin.spec:
	spin.spec: the %files section looks at INSTALLED_FILES as well.
	[c79432f89133]

	* Makefile, docsrc/man/distro/main.rst:
	updated RPM-building related items

	The spec file now uses the optional dist tag, if provided. The
	Makefile's `packages' target has been removed in favor of `srpm'
	target. Also, `make srpm' takes an optional `BUILDARGS' parameter
	which is passed on to `rpmbuild'.
	[956465fda0bf]

2008-06-09  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* merged with trunk again
	[b5b32cbfe9de]

	* merged with trunk
	[6d8174ee0bea]

	* spin/modules/core/repos.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/software/comps.py, spin/modules/shared/repos.py:
	fixed multiple issues with SpinReposGroup

	spin/modules/core/software/comps.py
	 * removed debug code related to the comps 'packagereq' invalid key
	error - haven't seen the error in a while
	spin/modules/shared/repos.py
	 * added SpinReposGroup.subrepos property, which automatically
	populates and returns SpinReposGroup._repos if necessary
	 * added a fix to .lines() so that subrepo baseurls are correctly
	modified when updated via kwargs['baseurl']
	[013bb7790312]

2008-06-06  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py, spin/modules/core/publish.py,
	spin/modules/shared/repos.py:
	fixes to SpinRepoGroup that allow mirrorlists to be used without an
	accompanying baseurl

	spin/modules/shared/repos.py
	 * when creating sub repos, populate the list of baseurls with all
	baseurls/ mirrors of the main repo joined with the relative path
	- this allows us to simulate a mirrorgroup for subrepos even when
	it doesn't really make sense (note - there are currently no
	mirrorlists that point to a repo that will have subrepos, so this
	is largely academic (and untested))
	 * for repos that do not have subrepos, repositories that use a
	mirrorlist should still work even without a baseurl
	[c7940f9d6f10]

2008-06-09  Kay Williams  <kwilliams@renditionsoftware.com>

	* bin/spin:
	help: DISTROFILE -> DISTRODEF, for consistency with man pages
	[c9eeabe9e06f]

2008-06-07  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/idepsolver.py:
	fixed indentation error idepsolver.py
	[3f1e415ebbc6]

	* spin/callback.py:
	Fixed typo in callback.RpmSignCallback.__init__() call.
	[daf510918b5d]

	* spin/callback.py, spin/modules/core/software/gpgcheck.py,
	spin/modules/extensions/software/gpgsign.py:
	comparing with https://www.renditionsoftware.com/hg/public/spin
	searching for changes changeset: 1176:e5ce09ce2e7c branch:
	trunk user: uday@uday-prakashs-macbook.local date: Sat
	Jun 07 16:48:19 2008 -0700 summary: gpgcheck/gpgsign:
	incorporating changes in mkrpm.rpmsign.
	[9304a40c8bfb]

2008-06-06  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL, share/doc/examples/centos.distro,
	share/doc/examples/example.distro, share/doc/examples/fedora.distro,
	share/doc/examples/minimal.distro:
	documentation: updated INSTALL and share/doc/examples

	* removed minimal.distro, replaced with separate centos.distro and
	fedora.distro files
	* removed references to <base> element in example.distro
	* modified INSTALL to reference centos/fedora.distro files
	[194057eabb8b]

	* spin/main.py:
	main.py: minor change to cache_max_size calculation
	[67327d5e45c5]

2008-06-06  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py, spin/modules/core/rpms/logos-rpm/__init__.py,
	spintest/core.py:
	fixed up share path so that it includes the default correctly

	spin/main.py
	 * share path is now correctly computed to include the default value
	even when other values are given via --share-path or the <share-
	path> element spin/modules/core/rpms/logos-rpm/__init__.py
	 * share path RuntimeError message cleaned up to be less crazy looking
	spintest/core.py
	 * removed unnecessary imports
	[6a3d7fc9a587]

2008-06-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/spin/schemas/distro.conf/base.rng,
	share/spin/schemas/distro.conf/installer.rng:
	removed unrequired schema files: base.rng and installer.rng
	[0417965fdbcb]

	* share/spin/schemas/distro.conf/logos-rpm.rng, spin/modules/core/rpms
	/logos-rpm/__init__.py:
	Not writing text to user-specified images.

	Also, removed the <write-text/> element from <logos-rpm/> section in
	distro definition file.
	[552576d810d3]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	removed debug printe statement.
	[95ead1e83a35]

	* merged with trunk
	[039f6e818334]

	* INSTALL, spin.spec, spin/modules/core/rpms/logos-rpm/__init__.py,
	spin/modules/core/rpms/logos-rpm/handlers.py:
	Added requirement for 'spin-logos-rpm'.

	We remove a requirement, we add another one instead!

	Not creating any fallback images, if none found in the shared
	directories. Makes things a lot easier to manage.
	[1877b3fc6d6b]

2008-06-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/main.py, spintest/__init__.py:
	branch merge
	[c8d0f01362f5]

	* spintest/__init__.py:
	spintest: removed references to base-* config element

	* replaced with 'version' and 'arch'
	[e6f49bf6d8c2]

	* docsrc/man/distro/main.rst:
	main.rst: documentation cleanup

	* removed references to 'base-*'
	* moved version from optional to required
	* changed distroid to id
	[de6edf19929c]

	* share/spin/schemas/distro.conf/main.rng:
	main.rng: removed base-* elements, renamed distroid....

	* removed 'base-name', 'base-version', and 'base-arch' elements
	* added 'arch' element to replace 'base-arch'
	* moved 'version' element from optional to required
	* renamed 'distroid' to 'id'
	[c8210a573ca5]

	* spin/main.py:
	main.py: config and documentation related changes

	* ensure all user-provided paths for log-path, config-path, share-
	path, lib-path and cache-path are expanded and resolved relative to
	the current directory
	* decreased log level for 'validating config' from 1 to 2
	* removed additional validation logic for the main config section
	* removed 'base-name', 'base-version' and 'base-arch' config elements
	* added 'arch' element to replace 'base-arch'
	* renamed 'distroid' config element to 'id'
	[6b8a4d9ad474]

2008-06-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/event/__init__.py, spin/event/diff.py, spin/event/fileio.py,
	spin/main.py, spin/modules/core/autoclean.py,
	spin/modules/core/installer/product-image.py,
	spin/modules/core/software/comps.py, spin/modules/shared/bootcfg.py,
	spin/modules/shared/repos.py, spin/modules/shared/rpms.py,
	spin/splittree.py, spin/validate.py, spintest/__init__.py,
	spintest/mixins.py, spintest/modules/comps/__init__.py,
	spintest/modules/createrepo/__init__.py,
	spintest/modules/download/__init__.py, spintest/modules/gpgcheck.py,
	spintest/modules/installer.py, spintest/modules/iso.py,
	spintest/modules/logos.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/sources.py:
	xmllib --> rxml
	[881149197039]

	* share/spin/release/eula.py:
	eula.py: whitespace cleanup
	[691bc8c2c803]

	* INSTALL, spin.spec, spin/locals/logos_rpm.py, spin/modules/core/rpms
	/logos-rpm/__init__.py, spin/modules/core/rpms/logos-
	rpm/handlers.py:
	Gotten rid of the 'ImageMagick' dependency!

	The only place we were using something from the "ImageMagick"
	package was in the logos-rpm event to convert a png file to an xpm
	file. GRUB uses this xpm file as the background of the screen when
	the GRUB menu is displayed.

	Before, converting the image to an xpm, we were writing some text to
	it. We don't write any text to the GRUB background image anymore, so
	we can have a static xpm file in the spin-logos-rpm RPM. If the
	spin-logos-rpm is not installed on the machine running Spin, then
	the GRUB menu has no background (i.e. a black background).

	Made all the necessary changes in the sources to remove references
	to ImageMagick.
	[72a81cc1d790]

2008-06-04  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py:
	logos-rpm: fixed name of grub splash image

	The grub splash image was being installed as "/boot/grub/grub-
	splash.xpm.gz" instead of "/boot/grub/splash.xpm.gz."
	[49bdf86ae0b7]

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm: defaulting to white as font color
	[5b632dddf01b]

	* spin/locals/logos_rpm.py:
	logos-rpm: added a trigger{in,un} for kdebase

	KDE sets the splash image (seen after logging in) in
	/usr/share/config/ksplashrc file. The trigger{in,un} scripts
	overwrite those to make the theme "Spin."

	Also, made grub-splash.png a 16-color image.
	[63f773766104]

2008-06-04  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/modules/gpgcheck.py:
	whoops, removed accidental leftover print
	[d62e2087cdd3]

	* merged with trunk
	[2e10e9e777e1]

	* spin/modules/shared/repos.py:
	initial work to get repodata stuff working for rhel paths Not done
	yet because redhat's updates servers are retarded

	spin/modules/shared/repos.py
	 * if the mtime of a repodata file is -1, use the checksum to compute
	whether the file has changed or not. We never actually compute
	the checksum; instead, look at the value in repomd.xml
	 * the above approach doesn't work for repomd.xml itself, because it
	doesn't contain a checksum for itself; instead, in this case
	compare the checksum values for each repomd.xml; if they have
	changed, then the repomd.xml is different and must be
	redownloaded
	 * (not implemented yet) mtimes of downloaded repomd files (except
	repomd.xml) are set to those in the repomd.xml
	 * mtime of repomd.xml is set to now (though perhaps we could set it to
	be the same as the other repomd files, since they all seem to
	have the same mtime...)
	 * this whole system isn't completely working, but it should have no
	effect on repos that don't return -1 as their mtime (centos,
	fedora, pretty much everybody except for stupid redhat)
	[bfcacbba38b7]

	* spintest/__init__.py, spintest/modules/base.py,
	spintest/modules/gpgcheck.py, spintest/modules/installer.py,
	spintest/modules/pkglist/__init__.py, spintest/modules/sources.py:
	updated test suites to work with changes to <repos>

	spintest/__init__.py
	 * removed ._make_base_config(), ._make_installer_config(); unnecessary
	 * since Spin no longer uses repo.getDefault*(), spintest now has to
	populate each repo fully on its own; adjusted
	._make_repos_config() to compensate spintest/modules/base.py
	 * removed BaseDistroEventTestCase, as 'base-distro' event no longer
	exists spintest/modules/gpgcheck.py
	 * adjusted ._make_repos_config(), as above
	spintest/modules/installer.py
	 * removed Test_NoBase, Test_BaseDefaults, Test_InstallerDefaults, as
	the <base> element no longer exists
	spintest/modules/pkglist/__init__.py
	 * adjusted ._make_repos_config(), as above spintest/modules/sources.py
	 * adjusted ._make_source_repos_config, as above()
	 * removed Test_NoBase, as the <base> element no longer exists
	[4dbb81130a7b]

2008-06-03  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/diff.py, spin/modules/core/repos.py,
	spin/modules/core/software/download.py,
	spin/modules/extensions/iso.py, spin/modules/extensions/sources.py,
	spin/modules/shared/repos.py:
	various changes to take advantage of difftest updates to DiffTuple

	spin/event/diff.py
	 * since difftest doesn't explicitly call .read_metadata() when adding
	handlers anymore, call it inside of .test_diffs()
	spin/modules/core/software/download.py
	 * don't call ._update_stat() anymore, as it doesn't exist; instead,
	use .stat(populate=False).update(**kwargs)
	spin/modules/extensions/iso.py
	 * adjusted log levels for pkgorder spin/modules/extensions/sources.py
	 * don't call ._update_stat() anymore, as it doesn't exist; instead,
	use .stat(populate=False).update(**kwargs)
	spin/modules/shared/repos.py
	 * removed the RepodataHandler and associated data structures;
	approaching this problem totally differently
	 * added ReposDiffTuple, a subclass of DiffTuple that uses checksumming
	to compare files if the mtime returned by the server is ambiguous
	(-1)
	[6234b0b6ded4]

	* merged with trunk
	[88f6a246b417]

2008-06-02  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/repos.rng, spin/event/__init__.py,
	spin/event/fileio.py, spin/event/verify.py,
	spin/modules/core/autoclean.py, spin/modules/core/base.py,
	spin/modules/core/compose.py,
	spin/modules/core/installer/__init__.py, spin/modules/core/installer
	/release-files.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/software/comps.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/installer.py, spin/modules/shared/repos.py,
	spin/splittree.py, spin/verify.py:
	commit.tmp
	[111fcf4a4e01]

2008-06-03  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py:
	logos-rpm: fixed typo in locals

	removed extraneous ",".
	[45b9f5b21d56]

	* merged with trunk
	[cec0d3d73c55]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: bumped event version
	[722e43b3744d]

	* spin/locals/logos_rpm.py:
	logos-rpm: locals update

	Fedora 8 logos RPM creates the correct list of default images in
	/usr/share/backgrounds/images.

	Fedora 9 does not have a trigger{in,un} on desktop-backgrounds-
	basic; instead if trigger{in,un}s on desktop-backgrounds-compat.
	[df38a9645411]

2008-06-03  Kay Williams  <kwilliams@renditionsoftware.com>

	* branch merge
	[75801625f40b]

	* spin/main.py:
	main: if no suffix is provided for CACHE_MAX_SIZE, assume 'GiB'
	[dba4220d1b81]

2008-06-02  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/handlers.py:
	logos-rpm: computing the index of the "white" color programmatically

	Previously, it was a requirement of the logos-rpm event to have a
	white color (in a limited color palette image) to be at the same
	index. Now, we figure out the index of the white color automagically
	and use it. This way, the requirement is reduced to just having the
	color white in the palette. Much nicer this way.
	[328cba789ecb]

	* merged with trunk
	[1dc1d304c59e]

	* spin/locals/logos_rpm.py:
	locals/logos_rpm: changed the dimensions for syslinux-splash.png >=
	f7
	[9e81183357b6]

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/handlers.py:
	logos-rpm: miscellaneous changes

	* Updated position of text strings in a subset of images; this will
	go on for awhile as we get more and more images from Eddie.
	* Added triggerin-triggerun scriptlets to logos RPMs being generated
	that symlink 'large-computer.png' to 'main-logo.png'. On CentOS 5
	and Red Hat 5 machines, the 'large-computer.png' file is used during
	RHGB and on Fedora machines, 'main-logo.png' file is used.
	* Added a per-distro 'limited_palette_font_color' locals entry that
	sets the font color to be used on an image with a limited palette.
	[f54312ae16fb]

2008-05-30  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm: code cleanup
	[d5f4ff5d37ae]

2008-06-02  Kay Williams  <kwilliams@renditionsoftware.com>

	* bin/spin, share/doc/examples/spin.conf, share/spin/schemas/spin.rng,
	spin/main.py:
	misc documentation-related changes to spin command line and
	spin.conf

	* disabled all output a log level 0
	* set enable-module, disable-module, and list-event command line
	options to hidden status
	* changed 'library-path' to 'lib-path' in spin.conf
	[3b85f81d09ed]

2008-05-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/installer/release-files.py:
	fixed transposed diff.setup and io.add_xpath in release-files.py
	[74116ce1c82d]

2008-05-28  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals/logos_rpm.py:
	logos-rpm: Not supporting Fedoras 6, 7, and 8 officially.

	Also, made the CentOS 5 colors and images the default.
	[c7ade40876c3]

	* spintest/modules/diskboot-image.py:
	spintest/diskboot-image: fixed 'installer-splash' control variable
	location
	[6a8a32a7d16d]

	* spin/locals/logos_rpm.py:
	logos-rpm: Fixed L_LOGOS_RPM_FILES locals to have 'image_format' key

	The DistroFilesHandler looks for an 'image_format' key in the
	L_LOGOS_RPM_FILES locals to figure out the format of the file being
	created (This will only happen if there are no logos-rpm related
	files in the shared folders). This key used to be called 'format'
	before. Fixed.
	[315f21cf5b1b]

	* spin/locals/logos_rpm.py:
	logos-rpm: Fedora Core 6 not officially supported anymore.

	If the input repository is a Fedora Core 6 distribution, then the
	Red Hat colors are used.
	[f0538b2e3006]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	removed debug statements
	[030a6dbaafb7]

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py, spin/modules/core/rpms/logos-rpm/handlers.py:
	spin-logos-rpm RPM installs binary files to /usr/share/spin/logos-
	rpm

	Also, the distros folder has 'redhat5', 'centos5', 'fedora7',
	'fedora8', and 'fedora9' subdirectories, instead of 'r5', 'c5',
	'f7', 'f8', and 'f9'.

	This required some changes to the locals dictionary and
	LogosRpmEvent._get_handler_paths().
	[8d751054ef49]

	* spin/locals/files.py, spin/modules/core/installer/isolinux.py:
	locals/files.py: fixed 'isolinux' files in locals dictionary

	The locals dictionary was incorrect because for anaconda version
	11.2.0.66-1, the isolinux folder has a file called 'splash.jpg' and
	not 'syslinux-vesa-splash.jpg'.
	[938d33937f84]

2008-05-27  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/installer/diskboot-image.py:
	diskboot-image: conditionally requiring 'installer-splash'
	[4864c3529ae8]

	* spin/modules/core/installer/release-files.py:
	release-files: don't require existence of release RPM

	If no release RPMs or release-notes RPMs are found, continue without
	raising an exception because it might be the case that the user has
	specified input files using <path/> elements in the <release-files/>
	section of the distro definition file.
	[98c3ecffea26]

	* spin/locals/files.py, spin/modules/core/installer/diskboot-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py:
	'logos' event does the "right" thing in the case of missing logos
	RPM

	If the logos-rpm event is disabled, and there are no logos RPMs in
	the list of downloaded packages, then the expected behavior is that
	the splash image from the input repository is downloaded to
	repository composed by Spin.

	To accomplish this, the 'isolinux' event downloads the splash image
	from the input repository unless the 'installer-splash' control
	variable is set by the 'logos' event. If 'installer-splash' is set,
	then that file is downloaded instead of the input repository's
	splash image.

	The diskboot image had to be modified because the 'isolinux-files
	/installer-splash' control variable doesn't exist anymore.
	[5c723ba025f2]

	* merged with trunk (again)
	[d56c7df7022c]

	* merged with head
	[a022b4182c60]

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py, spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm: creating default images if no images found in shared
	paths

	The FallbackHandler and DistroSpecificFileHandler have been combined
	to form the DistroFilesHandler class. The DistroSpecificHandler's
	generate() method first copies all the images from the shared paths
	to the build folder. Once that is done, it checks to make sure that
	all the images that are supposed to be there are in fact present,
	and if not an image is created.

	The locals dictionary L_LOGOS_RPM_FILES has been updated to now have
	the 'xwindow_type', 'image_width', 'image_height', and (optionally)
	'image_format' keys.
	[24cc648abbad]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: fixed bug with getting L_LOGOS_RPM_INFO value

	If retrieving 'self.locals.L_LOGOS_RPM_INFO' raises a KeyError --
	which will happen if the fullname and version of the distribution is
	not supported by default -- we need to check the L_LOGOS_RPM_INFO
	variable (in spin/locals/logos_rpm.py) to see if the version and
	fullname of the distribution is a bugfix release.
	[70b0f833b502]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/constants.py, spin/modules/core/rpms/logos-
	rpm/gradient.py, spin/modules/core/rpms/logos-rpm/handlers.py,
	spin/modules/extensions/rpms/logos-rpm/__init__.py,
	spin/modules/extensions/rpms/logos-rpm/constants.py,
	spin/modules/extensions/rpms/logos-rpm/gradient.py,
	spin/modules/extensions/rpms/logos-rpm/handlers.py:
	logos-rpm: made core event
	[7d4071bd55b9]

2008-05-27  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL:
	INSTALL: modified hg clone instructions to include dest folder

	* doesn't hurt to include the dest folder, and some hg clients seem
	to require it.
	[73d2550ca049]

2008-05-27  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/extensions/iso.py, spin/splittree.py:
	fixed major bugs in splittree.py so that tree splitting actually
	works (whoa!)

	spin/modules/extensions/iso.py
	 * sets splitter.product_path to cvars['distro-info']['packgepath']
	spin/splittree.py
	 * added Timber.product_path, the path to RPMs relative to
	Timber.u_tree
	 * adjusted the nregex in .split_trees() so that it a) doesn't include
	any dotfiles; and b) correctly excludes the product path from the
	initial linking
	 * fixed up .split_rpms() so that it actually adds rpms to the tree
	 * modified so that Timber uses sync.link.sync() instead of defining a
	custom link method; now that linking supports direct xdev link
	handling, there is no more need for this method
	[899dd49d3fac]

	* spin/main.py:
	validation and distro-info cvar setup adjustments

	spin/main.py
	 * changed a few calls in ._validate_configs() to use the Build
	pointers instead of Event (self.logger.log() instead of
	Event.logger.log, for example)
	 * validation of <main> now occurs in ._validate_configs(), rather than
	in ._seed_event_defaults()
	 * simplified selinux checking
	[3d45e8f398b3]

	* spin/validate.py:
	made type checking in InvalidXmlError less silly
	[a49cea0f91cb]

	* spin/modules/shared/repos.py:
	added $yumvar support to all repos instead of just the default repos
	[f0dcfa5840ed]

	* merged with trunk
	[9d0708d37e83]

	* spintest/modules/diskboot-image.py:
	hackish fix to not test diskboot-image on fedora 9 (since it doesn't
	make one)
	[39c8eadb77c7]

2008-05-24  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/man/distro/main.rst, share/spin/schemas/distro.conf/main.rng,
	spin/main.py:
	main: allow <distroid> in addition to <base-...> elements

	Previously main.rng did not allow <distroid> to be specified in
	addition to <base-name>, <base-version>, and <base-arch>. With this
	commit, all four elements are optional. At runtime, however, we
	requre <distroid> if neither <base-name> nor <base-version> are
	provided.
	[7f2181327c17]

	* INSTALL, docsrc/man/distro/main.rst,
	share/doc/examples/example.distro,
	share/doc/examples/minimal.distro,
	share/spin/schemas/distro.conf/main.rng, spin/locals/buildstamp.py,
	spin/locals/discinfo.py, spin/locals/files.py,
	spin/locals/treeinfo.py, spin/main.py,
	spin/modules/core/installer/bootiso.py,
	spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/release-files.py, spin/modules/core/publish.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/extensions/iso.py, spin/modules/extensions/rpms/config-
	rpm.py, spin/modules/extensions/rpms/logos-rpm/__init__.py,
	spin/modules/shared/rpms.py, spin/splittree.py,
	spintest/__init__.py, spintest/modules/iso.py, spintest/modules
	/release-files.py:
	IMPORTANT: This commit changes default config element and folder
	names

	This commit changes the names of several distrofile elements in the
	main section. It also changes the default distro folder naming
	scheme. We will improve these, if needed, after living with them for
	a bit.

	Changes to <main> element:
	* renamed <product> to <name>; name of the distribution to be composed
	* added <base-name>; name of the base distribution, e.g. 'centos'
	* added <base-version>: version of the base distribution, e.g. '5'
	* added <base-arch>; arch of the base distribution, defaults to 'i386'
	* added <distroid>; id for the distribution, defaults to '<name
	>-<base-name>-<base-version>-<base-arch>', e.g. 'mydistro-
	centos-5-i386'. If <base-name>, <base-version> and <base-arch> are
	not specified, <distroid> is required.
	* made <version> optional; a runtime error is raised if neither <base-
	version> or <version> are specified
	* renamed <product-path> to <package-path>; defaults to 'Packages'
	* a future commit will make use of <base-name>, <base-version> and
	<base-arch> for determining default repos.

	Changes to distro folder naming scheme:
	* was <name>-<version>-<arch>, e.g. 'example-5-i386'
	* now <distroid>, e.g. 'example-centos-5-i386' or user-specified value
	[63883c0d092f]

	* spin/modules/shared/repos.py:
	repos: added try:except around rhn specific call

	* since rhn-client-tools and rhnlib rpms may not be installed
	[55f4cd694dfe]

2008-05-23  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/installer/diskboot-image.py,
	spin/modules/core/installer/logos.py, spintest/modules/sources.py:
	fixes to sources test cases to get it working with r5 and logos-rpm
	extension module

	spin/modules/core/installer/diskboot-image.py
	 * diskboot-image now only uses installer-logos cvar if it has been set
	spin/modules/core/installer/logos.py
	 * installer logos no longer runs if it can't find a logos rpm in the
	package set (as opposed to raising an exception like it used to)
	 * had to comment out verify methods for now because they aren't
	designed to handle the possibility of not running
	spintest/modules/sources.py
	 * added the necessary code to generate correct source repos config for
	both r5 and all other distros
	[345771dd3442]

	* spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/comps.py, spin/verify.py,
	spintest/__init__.py, spintest/modules/download/Makefile,
	spintest/modules/download/__init__.py, spintest/modules/gpgcheck.py,
	spintest/modules/pkglist/__init__.py:
	modified test cases to work with redhat 5; added a few fixes from
	mis-transplantation

	spin/modules/core/rpms/release-rpm.py
	 * mis-transplant fix spintest/__init__.py
	 * _make_base_config() now returns None for redhat 5 tests (we don't
	use any default repos for r5)
	 * _make_repos_config() now returns different values depending on
	whether it is testing r5 or not
	 * _make_repos_config() doesn't include 'updates' repo anymore by
	default
	 * _make_installer_config() now returns a baseurl for redhat 5 tests
	spintest/modules/download/Makefile
	 * mis-transplant fix spintest/modules/download/__init__.py
	 * DownloadEventTestCase._make_repos_config() now uses the default
	_make_repos_config() as a basis for its modifications instead of
	starting from scratch spintest/modules/gpgcheck.py
	 * GpgcheckEventTestCase._make_repos_config() now uses the default
	_make_repos_config() as a basis for its modifications instead of
	starting from scratch spintest/modules/pkglist/__init__.py
	 * various changes to _make_repos_config() so that pkglist event test
	cases work for all distros, including r5
	[1a4795001192]

2008-05-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/constants.py, spin/modules/core/rpms/logos-
	rpm/gradient.py, spin/modules/core/rpms/logos-rpm/handlers.py,
	spin/modules/extensions/rpms/logos-rpm/__init__.py,
	spin/modules/extensions/rpms/logos-rpm/constants.py,
	spin/modules/extensions/rpms/logos-rpm/gradient.py,
	spin/modules/extensions/rpms/logos-rpm/handlers.py:
	logos-rpm: making an extension module for now
	[4e5cd15eae2d]

	* share/doc/examples/dimsbuild.conf, share/spin/release/eula.py,
	spin/modules/core/rpms/theme-rpm.py:
	added eula.py to share/release; removed old files
	[5904cc54e475]

	* bin/dimsbuild, dbtest/Makefile, dbtest/__init__.py,
	dbtest/config.py, dbtest/core.py, dbtest/mixins.py,
	dbtest/modules/ALL.py, dbtest/modules/__init__.py,
	dbtest/modules/autoclean.py, dbtest/modules/bootiso.py,
	dbtest/modules/compose.py, dbtest/modules/comps/__init__.py,
	dbtest/modules/comps/comps.xml, dbtest/modules/config-rpm.py,
	dbtest/modules/createrepo/RPM-GPG-KEY-test,
	dbtest/modules/createrepo/RPM-GPG-SEC-KEY-test,
	dbtest/modules/createrepo/__init__.py, dbtest/modules/custom-
	repo.py, dbtest/modules/diskboot-image.py,
	dbtest/modules/download/Makefile,
	dbtest/modules/download/__init__.py, dbtest/modules/download
	/download-test-repos.xml, dbtest/modules/download/f8.conf,
	dbtest/modules/download/f8.repo, dbtest/modules/files.py,
	dbtest/modules/gpgcheck.py, dbtest/modules/gpgsign/RPM-GPG-KEY-test,
	dbtest/modules/gpgsign/RPM-GPG-SEC-KEY-test,
	dbtest/modules/gpgsign/__init__.py, dbtest/modules/infofiles.py,
	dbtest/modules/init.py, dbtest/modules/initrd-image.py,
	dbtest/modules/installer.py, dbtest/modules/iso.py,
	dbtest/modules/isolinux.py, dbtest/modules/logos-rpm.py,
	dbtest/modules/logos.py, dbtest/modules/pkglist/Makefile,
	dbtest/modules/pkglist/__init__.py, dbtest/modules/pkglist/pkglist,
	dbtest/modules/pkglist/pkglist-test-repos1.xml,
	dbtest/modules/pkglist/pkglist-test-repos2.xml,
	dbtest/modules/pkglist/pkglist-test-repos3.xml,
	dbtest/modules/pkglist/pkglist.conf,
	dbtest/modules/pkglist/supplied.conf, dbtest/modules/product-
	image.py, dbtest/modules/publish.py, dbtest/modules/pxeboot-
	images.py, dbtest/modules/release-files.py, dbtest/modules/release-
	rpm.py, dbtest/modules/repos.py, dbtest/modules/rpms.py,
	dbtest/modules/software.py, dbtest/modules/sources.py,
	dbtest/modules/sourcevars.py, dbtest/modules/stage2-images.py,
	dbtest/modules/theme-rpm.py, dbtest/modules/updates-image.py,
	dbtest/rpms.py, dbtest/runtest.py, dimsbuild/__init__.py,
	dimsbuild/callback.py, dimsbuild/constants.py,
	dimsbuild/event/__init__.py, dimsbuild/event/diff.py,
	dimsbuild/event/fileio.py, dimsbuild/event/loader.py,
	dimsbuild/event/locals.py, dimsbuild/event/verify.py,
	dimsbuild/locals.py, dimsbuild/logging.py, dimsbuild/main.py,
	dimsbuild/modules/__init__.py, dimsbuild/modules/core/__init__.py,
	dimsbuild/modules/core/autoclean.py,
	dimsbuild/modules/core/compose.py, dimsbuild/modules/core/init.py,
	dimsbuild/modules/core/installer/__init__.py,
	dimsbuild/modules/core/installer/bootiso.py,
	dimsbuild/modules/core/installer/diskboot-image.py,
	dimsbuild/modules/core/installer/infofiles.py,
	dimsbuild/modules/core/installer/initrd-image.py,
	dimsbuild/modules/core/installer/isolinux.py,
	dimsbuild/modules/core/installer/logos.py,
	dimsbuild/modules/core/installer/product-image.py,
	dimsbuild/modules/core/installer/pxeboot-images.py,
	dimsbuild/modules/core/installer/release-files.py,
	dimsbuild/modules/core/installer/stage2-images.py,
	dimsbuild/modules/core/installer/updates-image.py,
	dimsbuild/modules/core/installer/xen-images.py,
	dimsbuild/modules/core/publish.py, dimsbuild/modules/core/repos.py,
	dimsbuild/modules/core/rpms/__init__.py, dimsbuild/modules/core/rpms
	/custom-repo.py, dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/core/rpms/theme-rpm.py,
	dimsbuild/modules/core/software/__init__.py,
	dimsbuild/modules/core/software/comps.py,
	dimsbuild/modules/core/software/createrepo.py,
	dimsbuild/modules/core/software/download.py,
	dimsbuild/modules/core/software/gpgcheck.py,
	dimsbuild/modules/core/software/pkglist.py,
	dimsbuild/modules/core/sourcevars.py,
	dimsbuild/modules/extensions/__init__.py,
	dimsbuild/modules/extensions/files.py,
	dimsbuild/modules/extensions/installer/__init__.py,
	dimsbuild/modules/extensions/installer/kickstart.py,
	dimsbuild/modules/extensions/iso.py,
	dimsbuild/modules/extensions/rpms/__init__.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/software/__init__.py,
	dimsbuild/modules/extensions/software/gpgsign.py,
	dimsbuild/modules/extensions/sources.py,
	dimsbuild/modules/shared/__init__.py,
	dimsbuild/modules/shared/bootcfg.py,
	dimsbuild/modules/shared/createrepo.py,
	dimsbuild/modules/shared/installer.py,
	dimsbuild/modules/shared/repos.py, dimsbuild/modules/shared/rpms.py,
	dimsbuild/repo.py, dimsbuild/splittree.py, dimsbuild/validate.py,
	dimsbuild/verify.py, etc/logrotate.d/dimsbuild,
	etc/logrotate.d/spin, lib/dimsbuild/callback.py,
	lib/modules/logos.py, share/dimsbuild/release/eula.py,
	share/dimsbuild/schemas/dimsbuild.rng,
	share/dimsbuild/schemas/distro.conf/bootiso.rng,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/createrepo.rng,
	share/dimsbuild/schemas/distro.conf/diskboot-image.rng,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/gpgsign.rng,
	share/dimsbuild/schemas/distro.conf/initrd-image.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/isolinux.rng,
	share/dimsbuild/schemas/distro.conf/kickstart.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/product-image.rng,
	share/dimsbuild/schemas/distro.conf/publish.rng,
	share/dimsbuild/schemas/distro.conf/release-files.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/updates-image.rng,
	spintest/Makefile, spintest/modules/comps/comps.xml,
	spintest/modules/createrepo/RPM-GPG-KEY-test,
	spintest/modules/createrepo/RPM-GPG-SEC-KEY-test,
	spintest/modules/download/Makefile, spintest/modules/download
	/download-test-repos.xml, spintest/modules/gpgsign/RPM-GPG-KEY-test,
	spintest/modules/gpgsign/RPM-GPG-SEC-KEY-test,
	spintest/modules/pkglist/Makefile, spintest/modules/pkglist/pkglist,
	spintest/modules/pkglist/pkglist-test-repos1.xml,
	spintest/modules/pkglist/pkglist-test-repos2.xml,
	spintest/modules/pkglist/pkglist-test-repos3.xml:
	edited history to remove (most of the) binary files.
	[3e8ca0b1067f]

2008-05-22  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/spin/schemas/distro.conf/lib.rng, spin/modules/core/base.py,
	spin/modules/core/repos.py, spin/modules/core/software/comps.py,
	spin/modules/core/software/download.py,
	spin/modules/extensions/sources.py, spin/modules/shared/repos.py:
	made spin RhnPath ready; we can now handle RedHat updates repos!
	 * repos are specified by using 'rhn://' or 'rhns://' as the scheme
	 * if no hostname is used, 'xmlrpc.rhn.redhat.com' is assumed
	 * paths must contain the name of the channel to use
	 * an example of valid rhn paths: rhns:///rhel-i386-server-5/
	rhn://xmlrpc.example.com/rhel-i386-client-5/

	share/spin/schemas/distro.conf/lib.rng
	 * added mirrorlist and systemid as optional children of <repo>
	elements spin/modules/core/software/download.py
	 * .setup() now prepopulates st_atime along with the other stat values
	so that updating the mtime via utime doesn't require another stat
	call to the server spin/modules/extensions/sources.py
	 * .setup() now prepopulates st_atime along with the other stat values
	so that updating the mtime via utime doesn't require another stat
	call to the server spin/modules/shared/repos.py
	 * SpinRepos now filter out the 'systemid' value, if present, when
	creating string representations of themselves
	 * SpinRepo._xform_uri() now automatically sets the ._systemid
	attribute for RhnPaths it returns
	 * RepoEventMixin.setup_repos() now warns the user if it detects
	multiple repos using the same mirrorlist with different baseurls
	- since mirror groups are cached by mirrorlist, two repos with
	the same mirrorlist and different urls will conflict and likely
	produce undesired results
	[301ba4dad370]

2008-05-21  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/validate.py:
	spin/validate: passing the xincluder parameter to xmllib.tree.read()

	xmllib.tree.read() now takes an 'xincluder' parameter that takes
	care of expanding macros and XInclude processing.
	[043575e8bcb1]

2008-05-20  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/event/__init__.py, spin/main.py,
	spin/modules/shared/bootcfg.py, spin/validate.py:
	Updated references to classes that are in xmllib.{macros,errors}

	The xmllib.errors modules contains xmllib-related errors. Most of
	the items in this module used to be in xmllib.tree. All the files
	using classes and functions in xmllib.errors have been updated.

	The shared/bootcfg.py file uses the Macro class which used to be in
	xmllib.config but is now in xmllib.macros.
	[33d5f4d48d81]

2008-05-20  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/minimal.distro:
	examples: added core group to comps element in minimal.distro
	[0d37a90ff938]

	* INSTALL:
	INSTALL: fixed typo
	[1f35a6a1a07c]

	* spin/modules/core/repos.py:
	repos: removed function to validate repo or repofile element

	* repos can now be set by the base-distro element
	[7a0c21f47662]

	* spin/modules/extensions/sources.py:
	sources: removed function to validate repo or repofile element

	* repos can now be set by the base-distro element
	[62e069a4e63e]

2008-05-20  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/repos.py:
	core/repos: in the setup() stage, make sure all repos have repodata/

	In the setup() stage of the event, make sure that all the
	repositories listed as input to this event have repodata/ folders.
	If not raise a RuntimeError.
	[d9bbe489af99]

	* spin/modules/shared/repos.py:
	shared/repos: raising an exception if repository doesn't exist.
	[086a4e628c05]

	* spin/modules/core/software/gpgcheck.py:
	gpgcheck: print the list of invalid tags for invalid RPM signature

	The RpmSignatureInvalidError exception that gets raised now has an
	'invalid_tags' variable that is used when printing out the error
	message.
	[08ee7c049217]

2008-05-19  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/doc/examples/example.distro,
	share/spin/schemas/distro.conf/bootiso.rng,
	share/spin/schemas/distro.conf/comps.rng,
	share/spin/schemas/distro.conf/diskboot-image.rng,
	share/spin/schemas/distro.conf/gpgsign.rng,
	share/spin/schemas/distro.conf/initrd-image.rng,
	share/spin/schemas/distro.conf/installer.rng,
	share/spin/schemas/distro.conf/iso.rng,
	share/spin/schemas/distro.conf/isolinux.rng,
	share/spin/schemas/distro.conf/kickstart.rng,
	share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/logos.rng,
	share/spin/schemas/distro.conf/pkglist.rng,
	share/spin/schemas/distro.conf/product-image.rng,
	share/spin/schemas/distro.conf/publish.rng,
	share/spin/schemas/distro.conf/release-files.rng,
	share/spin/schemas/distro.conf/repos.rng,
	share/spin/schemas/distro.conf/updates-image.rng:
	whitespace cleanup in schema files
	[f9648c31950e]

2008-05-20  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/__init__.py:
	disabled the everything repo for test suites; seems to make fedora
	go faster
	[74b2db42c178]

2008-05-19  Kay Williams  <kwilliams@renditionsoftware.com>

	* bin/spin:
	cleanup - removed xmllib import from bin/spin
	[c6b42df06187]

2008-05-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro.conf/lib.rng:
	repos schema: make baseurl an optional element
	[7b3d9a045599]

	* spin/modules/core/rpms/custom-repo.py:
	custom-repo: bumped version number
	[84c9f4a47aac]

2008-05-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* INSTALL, spintest/modules/pkglist/Makefile,
	spintest/modules/pkglist/__init__.py, spintest/modules/pkglist
	/pkglist-test-repos4.xml:
	Fixed Bug 185.

	Creating a custom test repository to test out the case that was
	previously tested by using Fedora 8 and Fedora 9 test repositories
	at the same time.
	[a948a1d38fd5]

	* spintest/modules/sources.py:
	Fixed bug 183.

	Reenabled the 'sources' test cases.
	[10fe62fa93de]

	* spin/modules/extensions/sources.py, spin/modules/shared/repos.py:
	Fixed bug 173.

	In RepoEventMixin.read_repodata(), when Repo.read_repomd() is called
	a pps.path.error.PathError exception is raised if the repomd.xml
	file is missing. If this happens, it means that the repodata/ folder
	is missing and we move on. In the case of the 'sources' event, it is
	completely valid for the repodata/ folder to be missing. In the case
	of 'repos' event, there is a verify_repodata_exists() method that
	makes sure that the repodata/ folder exists. So, it is fine to move
	on in the RepoEventMixin.read_repodata() method. Moving on also
	causes the Repo.datafiles attribute to not get populated.

	If the repodata/ folder is missing, the Repo.datafiles attribute is
	not set (as explained above), so when we try to get the
	primary.xml.gz file's location a KeyError is expected and is passed.
	This results in the Repo.pkgsfile not being created.
	[0bde427a0a7e]

	* spin/repo.py:
	Removed spin/repo.py; not needed anymore.
	[ca7670d9915a]

	* share/spin/schemas/distro.conf/lib.rng:
	Made the <name/> element inside <repos/> element optional.
	[a4d752553309]

2008-05-16  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/base.py, spin/modules/core/installer/__init__.py,
	spin/modules/core/repos.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/extensions/sources.py, spin/modules/shared/repos.py:
	base-distro: updated cvar names, misc RepoEventMixin cleanup

	BaseDistroEvent
	* changed provides to 'base-distro'
	* created new 'base-distro' cvar

	InstallerSetupEvent/SourceReposEvent
	* changed conditionally requires to 'base-distro'

	ReposEvent
	* ditto
	* removed base-distro cvars from diff variables (now handled by
	RepoEventMixin)

	CustomRepoEvent
	* no longer uses RepoEventMixin

	RepoEventMixin
	* removed custom-repo specific code
	* updated cvar names
	[a8779786f159]

	* INSTALL, share/doc/examples/minimal.distro,
	share/doc/examples/repos:
	examples: modified INSTALL documentation and example files

	* to reflect new <base> element
	[700430bb3e3a]

2008-05-16  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/doc/examples/example.distro:
	accidentally used <name> elements instead of <distro> elements;
	corrected
	[1bc10d0ac54b]

	* share/doc/examples/example.distro:
	updated the example.distro file to reflect recent changes to spin
	[ac2e19cb68a7]

	* spintest/runtest.py:
	changed --basearch option to --arch, for consistency
	[1a9b4a39e308]

2008-05-15  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro.conf/base.rng:
	schemas: bug fixes to base.rng
	[eda677b72801]

2008-05-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* README:
	test commit
	[1214a02afcda]

2008-05-15  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py:
	added enable-module to spin.conf for command-line parity
	[357587486cd8]

	* share/spin/schemas/distro.conf/base.rng,
	share/spin/schemas/distro.conf/installer.rng, spin/modules/core
	/base-info.py, spin/modules/core/base.py,
	spin/modules/core/installer/__init__.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/custom-repo.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/installer.py, spin/modules/shared/repos.py,
	spin/modules/shared/rpms.py, spintest/__init__.py,
	spintest/config.py, spintest/core.py, spintest/mixins.py,
	spintest/modules/all.py, spintest/modules/autoclean.py,
	spintest/modules/base-info.py, spintest/modules/base.py,
	spintest/modules/bootiso.py, spintest/modules/compose.py,
	spintest/modules/comps/__init__.py, spintest/modules/config-rpm.py,
	spintest/modules/createrepo/__init__.py, spintest/modules/custom-
	repo.py, spintest/modules/diskboot-image.py,
	spintest/modules/download/__init__.py, spintest/modules/files.py,
	spintest/modules/gpgcheck.py, spintest/modules/gpgsign/__init__.py,
	spintest/modules/infofiles.py, spintest/modules/init.py,
	spintest/modules/initrd-image.py, spintest/modules/installer.py,
	spintest/modules/iso.py, spintest/modules/isolinux.py,
	spintest/modules/kickstart.py, spintest/modules/logos-rpm.py,
	spintest/modules/logos.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/product-image.py, spintest/modules/publish.py,
	spintest/modules/pxeboot-images.py, spintest/modules/release-
	files.py, spintest/modules/release-rpm.py,
	spintest/modules/repos.py, spintest/modules/rpms.py,
	spintest/modules/software.py, spintest/modules/sources.py,
	spintest/modules/stage2-images.py, spintest/modules/updates-
	image.py, spintest/runtest.py:
	rolled in all pps changes and improved repo object handling
	 * MirrorPaths are much better behaved
	 * pps reorganized to be more sensical
	 * repo object API generalized and clarified
	 * support for default repos added - by choosing from one of the
	predefined base distributions, you can avoid having to explicitly
	list out the repos, source repos, and installer repos for your
	distro
	 * difftest objects are easier to use now

	share/spin/schemas/distro.conf/base.rng
	 * added a schema for the <base> section
	share/spin/schemas/distro.conf/installer.rng
	 * added a schema for the <installer> section spin/modules/core/base.py
	 * renamed from base-info.py
	 * new event, base-repo, which accepts a name/version pair for a
	distribution to use as the default for seeding package, source,
	and installer repos
	 * base-repo also accepts baseurl-prefix and mirrorlist-prefix, which
	allow the location of the various repositories to be customized
	 * base-repo stores this information in cvars['base-info']
	 * the provision for the above is 'base-info-distro'
	 * base-info now raises a RuntimeError if it cannot read the buildstamp
	file for any reason spin/modules/core/installer/__init__.py
	 * installer-setup now provides 'anaconda-version-supplied'
	 * installer-setup no longer conditionally requires 'base-distro-name',
	'base-distro-version', 'base-distro-baseurl', or 'base-distro-
	mirrorlist'
	 * installer-setup now conditoinally requires 'base-info-distro'
	 * adjusted and streamlined the code for generating installer repos -
	if either baseurl or mirrorlist are provided as elements in
	<installer>, create a repo with <baseurl> and <mirrorlist>
	defined; otherwise, use the default
	 * if provided, the <anaconda-version> in <installer> will be used as
	the anaconda-version cvar for the distro; otherwise, the default
	process of scanning all normal repos for the version will be used
	spin/modules/core/repos.py
	 * repos no longer conditionally requires 'base-distro-name' or 'base-
	distro- version'
	 * repos now conditionally requires 'base-info-distro'
	 * repos now explicitly lists all 4 'base-info' cvars it depends on
	 * adjusted and streamlined the code for generating package repos
	 * created RPMDATA to store the 'logos-versions' and 'release-versions'
	rpm information that is checked in ReposEvent.apply()
	 * slightly clarified the error message when the anaconda version
	cannot be computed
	 * if cvars['anaconda-version-supplied'] is present, repos uses this
	value instead of the computed version of anaconda
	spin/modules/core/rpms/custom-repo.py
	 * custom-repo now conditionally requires 'base-info-distro'
	 * updated repo handling to new format
	 * if unable to read repocontent for any repo, raises a RuntimeError
	instead of passing spin/modules/extensions/sources.py
	 * source-repos now conditionally requires 'base-info-distro'
	 * updated repo handling to new format
	 * if unable to read repocontent for any repo, raises a RuntimeError
	instead of passing spin/modules/shared/repos.py
	 * .setup_repos() no longer accepts read_md; it now accepts defaults,
	which controls whether to use the defaults for the given
	distro/version pair; and distro and version both default to None
	 * .setup_repos() now explicitly sets default values for distro,
	version, baseurl_prefix, and mirrorlist_prefix based on values
	from cvars
	 * default distro repos are only included if defaults=True (which is
	the default behavior)
	 * .setup_repos() raises a RuntimeError if the final RepoContainer it
	creates has no repositories in it for any reason
	 * added .read_repodata(), which reads repository metadata and
	populates the necessary data structures for io.* methods
	spintest/__init__.py
	 * no longer uses weird config.py to do config related stuff
	 * added EventTestCase._make_default_config(), which creates the
	default distro definition to use for test distros; by default
	this calles a number of other _make_*_config() methods to
	populate various top level elements with some sensible set of
	defaults. These methods return None if no configuration is
	desired; otherwise, they return a config.Element instance
	 * added EventTestCase._make_main_config(), which makes and populates
	the <main> element
	 * added EventTestCase._make_base_config(), which makes and populates
	the <base> element. One optimization for test cases is setting
	baseurl-prefix to the Rendition Software local mirrors so that
	the defaults returned by getDefaultRepos are modified to work
	more quickly
	 * added EventTestCase._make_repos_config(), which makes and populates
	the <repos> element. By default, mirrorlists, gpgkeys, and
	gpgchecking is turned off for all repos
	 * added EventTestCase._make_installer_config(), which makes and
	populates the <installer> element. By default, this returns None
	 * added EventTestCase._add_config(); this is the rough equivalent to
	the former config.add_config_section()
	 * make_suite() (and all make_suite()s for all test cases) now accepts
	distro, version, arch instead of basedistro, arch spintest/core.py
	 * CoreEventTestCase00 now checks for either AssertionError or
	RuntimeError (to help catch all those additional RuntimeErrors
	we're now generating) spintest/modules/*
	 * all make_suite()s changed to new distro, version, arch signature
	 * all EventTestCase subclasses changed to new distro, version, arch
	signature
	 * all modules no longer use the old config.* methods; instead, they
	use the EventTestCase._make_*_config() methods spintest/modules
	/base-info.py
	 * renamed to base.py to conform with master module rename
	spintest/modules/custom-repo.py
	 * added a test case for failure if default repos are included in the
	list of custom repos spintest/modules/pkglist/__init__.py
	 * cleaned up and simplifed code generation for most test cases
	spintest/modules/repos.py
	 * added a test case for failure if <repos> and <base> elements are not
	defined
	 * added a test case for testing that defaults are used when both
	<repos> and <base> elements are defined
	spintest/modules/sources.py
	 * added a test case for failure if <sources> and <base> elements are
	not defined
	 * disabled sources tests until we figure out how to address source
	repos that don't have repodata folders
	 * removed default source definitions; these are included in rendition-
	common/ repos spintest/runtest.py
	 * default for -d, --distro option is now 'fedora'
	 * added -f, --version, default is '8' spintest/config.py
	 * removed, rolled into __init__
	[e577e5e4ef56]

	* spin/modules/core/software/download.py:
	dict formatting in download module
	[dddea89810eb]

	* spin/modules/extensions/iso.py:
	updated to new difftest implementation
	[2a4d26689047]

	* spin/modules/core/autoclean.py, spin/modules/core/installer/product-
	image.py, spin/modules/core/publish.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/software/comps.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py:
	updated to more convenient diffest implementation; updated to raise
	RuntimeErrors where appropriate

	spin/modules/core/autoclean.py
	 * EventHandler now extends DiffHandler spin/modules/core/publish.py
	 * removed some unnecessary logic around old file removal
	spin/modules/core/rpms/release-rpm.py
	 * fixed bug where gpgkeys were being accessed via repo.gpgkeys, not
	repo.gpgkey spin/modules/core/software/comps.py
	 * comps now raises a RuntimeError when it can't read its comps file
	instead of passing
	 * comps now creates the 'core' group if adding packages in the config
	file when the 'core' group isn't specified
	spin/modules/core/software/pkglist.py
	 * pkglist now raises a RuntimeError when it can't read its pkglis file
	instead of passing
	[f07a0f0d047e]

	* spin/event/diff.py, spin/event/fileio.py:
	greatly eased dealing with difftest handlers and diffdicts

	spin/event/diff.py
	 * all Events now have .input, .output, .variables, and .config
	attributes in their .diff objects; these attributes are None by
	default and are initialized if a diff handler is created for
	them; they are the equivalent of Event.diff.handlers[name]
	spin/event/fileio.py
	 * now utilizes the new diff.X convenience attributes along with the
	.difference() method for diff handlers
	[54db968db443]

	* spin/callback.py:
	callback messages now only attept to call relpath() on paths that
	are not already relative
	[eb2dc7d7474d]

	* bin/spin, share/spin/schemas/distro.conf/main.rng,
	share/spin/schemas/spin.rng, spin/main.py:
	consistency pass on config/command line options

	bin/spin
	 * changed default for --log-file to None
	share/spin/schemas/distro.conf/main.rng
	 * added <log-file> element to <main> section
	share/spin/schemas/spin.rng
	 * added <enable-module> and <log-file> elements spin/main.py
	 * spin now searches for its log file in the following order: command-
	line argument to --log-file, distro definition /distro/main/log-
	file/text(), spin configuration /spin/log-file/text(), and
	finally the default, /var/log/spin.log
	 * spin has to set up a logger prior to figuring out where the logfile
	is because getting config prints logging messages; thus, config-
	related log messages are not logged to the log file specified in
	the config file
	[9db2ce187fbc]

2008-05-13  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py,
	spin/modules/extensions/sources.py, spin/modules/shared/repos.py:
	updated repo import message, bug fixes
	[f74aa74f6147]

	* share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/repos.rng, spin/logging.py,
	spin/modules/core/base-info.py,
	spin/modules/core/installer/__init__.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/product-image.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/repos.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/installer/updates-image.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/installer.py, spin/modules/shared/repos.py:
	various mirrorlist fixes and repo improvements
	 * removed the concept of a 'base-repo'; all repos are now treated
	equally
	 * added an installer repo, which is the location from which installer
	images are pulled
	 * consolidated, simplified, and performed a consistency pass on repo
	related code. It is still ugly and needs quite a bit of work

	share/spin/schemas/distro.conf/lib.rng
	 * included <baseurl> in interleave for <repo> elements
	 * added missing <name> element to <repo> elements
	share/spin/schemas/distro.conf/repos.rng
	 * made <repos> element optional
	 * removed <base-repo> element spin/logging.py
	 * added .error(message) for compatability with yum (since we pass our
	logger to yum). This is somewhat of a hack spin/modules/core
	/base-info.py
	 * added BaseDistroEvent, an event that parses the <base-info> section
	and sets up some default values that Events subclassing
	RepoEventMixin can use to create useful default values
	 * this module will likely undergo a name change in the near future
	 * BaseInfoEvent no longer requires 'base-repoid', it now requires
	'installer- repo' spin/modules/core/installer/__init__.py
	 * Added new event, InstallerSetupEvent, which computes the value of
	cvars['installer-repo']; this is used by most installer modules in
	place of the former 'base-repo' spin/modules/core/installer/*
	 * all events that used to require 'base-repoid' now require
	'installer-repo' spin/modules/core/repos.py
	 * removed 'base-repo' validation in .validate()
	 * added code to .setup() to properly compute the default repositories
	in combination with any repos defined in the distro definition
	 * adjusted the logic used for computing RPM versions, including
	anaconda
	 * removed get_package_version(); this is included in the YumRepo class
	spin/modules/core/rpms/custom-repo.py
	 * CustomRepoEvent now extends RepoEventMixin
	 * adjusted code to use new RepoEventMixin and Repo code
	 * custom-repo may be the source of further changes for Repo code as it
	uses things in a nonstandard, clunky way
	spin/modules/core/software/comps.py
	 * remove requirement on 'base-repoid'
	 * no longer automatically includes 'core' group from the base repo
	spin/modules/core/software/pkglist.py
	 * adjusted repo stringification spin/modules/extensions/sources.py
	 * adjusted repo code to use the new changes
	spin/modules/shared/installer.py
	 * adjusted to use cvars['installer-repo'] instead of cvars['base-
	repoid'] spin/modules/shared/repos.py
	 * added SpinRepo, a subclass of YumRepo
	 * SpinRepo adds .localurl, .pkgsfile, and .get_rpm_version(names)
	 * removed RepoEventMixin.read_config()
	 * added RepoEventMixin.setup_repos(...), which allows both user-
	specified and default repositories to be combined together in a
	somewhat sensible way; this method needs to be changed as it
	cannot be used effectively by both the Repos/SourceRepos events
	and CustomRepos
	 * renamed RepoEventMixin.read_new_packages() to
	RepoEventMixin.read_packages(); reworked behavior slightly to be
	more efficient
	[549cb954347a]

2008-05-12  root  <root@localhost.localdomain>

	* spintest/__init__.py, spintest/mixins.py,
	spintest/modules/comps/__init__.py, spintest/modules/config-rpm.py,
	spintest/modules/createrepo/__init__.py,
	spintest/modules/download/__init__.py,
	spintest/modules/gpgsign/__init__.py, spintest/modules/initrd-
	image.py, spintest/modules/pkglist/__init__.py, spintest/rpms.py,
	spintest/runtest.py:
	fixed a bunch of pps.Path -> pps.path
	[48c0f54ec866]

2008-05-12  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/runtest.py:
	changed splitall()[1] back to splitall()[0] now that .splitall() has
	been fixed
	[dc3f785917db]

2008-05-09  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/fileio.py, spin/event/loader.py, spin/event/verify.py,
	spin/locals/__init__.py, spin/main.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/logos.py,
	spin/modules/core/installer/product-image.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/publish.py, spin/modules/core/rpms/logos-
	rpm/__init__.py, spin/modules/core/rpms/logos-rpm/handlers.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py, spin/modules/shared/bootcfg.py,
	spin/modules/shared/idepsolver.py, spin/modules/shared/installer.py,
	spin/modules/shared/rpms.py, spin/repo.py, spin/splittree.py,
	spintest/runtest.py:
	various minor fixes to work with API changes in pps

	specifically:
	 * pps.Path -> pps.path
	 * pps.path -> pps.Path
	 * pps.BasePath.tokens -> pps.BasePath.splitall()

	spin/repo.py
	 * modified repo mirrorgroup creation to use new and improved
	MirrorPath objects
	 * mirrors are created using the pps.path factory function with the
	'mirror:' prefix
	 * in the case when a baseurl is specified without an accompanying
	mirrorlist, we fool the mirrorlist into thinking it has already
	read its contents by prepopulating the mirrorgroup cache with the
	baseurls we've already read
	[03e01736ab82]

2008-05-13  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL, spin.spec:
	removed anaconda-runtime from list of Spin dependencies

	* pkgorder previously required it, but no longer...
	[d37df2ffff47]

2008-05-08  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py, spintest/modules/sources.py:
	selinux check now has try/except around it; fixed source repo name
	for testing
	[11572124ebf0]

	* spintest/config.py, spintest/modules/sources.py:
	added fedora-devel repos and source repos to test cases
	[0619f8260ae9]

2008-05-07  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/repos.py:
	bumped version of repos module so that existing builds dont fail
	[73f34fbdfd28]

2008-05-06  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/fileio.py, spin/modules/core/software/comps.py,
	spin/modules/core/software/download.py,
	spin/modules/extensions/sources.py, spin/modules/shared/repos.py,
	spin/modules/shared/rpms.py, spin/repo.py:
	mirrorlist support added, hooray!

	Probably a litte buggy still, and definitely a hack job. Will be
	making improvements little by little (mostly in pps, rather than in
	spin)

	Finally took care of all the dumb path type checks for the various
	joins; since HttpPaths are all absolute, it is ok to join them onto
	config.path, as config.path will just get wiped away by the absolute
	path.

	spin/modules/core/software/comps.py
	 * removed another debugging tree printout to save my email inbox from
	being overflowed by useless information
	spin/modules/core/software/download.py
	 * updated rpminfo stuff to join rpm file name onto repo.remoteurl
	 * fixed dumb path type check, as described above
	spin/modules/extensions/sources.py
	 * updated rpminfo stuff to join rpm file name onto repo.remoteurl
	 * fixed dumb path type check, as described above
	spin/modules/shared/rpms.py
	 * fixed dumb path type check, as described above spin/repo.py
	 * fixed dumb path type check, as described above
	 * added support for mirrorlists and baseurl elements of more than one
	item
	 * repoinfo objects now contain relative paths to rpms instead of
	absolute paths; thus, they need to be joined onto repo.remoteurl
	before being used
	 * property definition improvements
	[a423759682b0]

2008-05-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/repos:
	fixed syntax error in last commit
	[ec606794de36]

	* share/doc/examples/repos:
	examples: excluding nautilus-sendto from centos base repo

	* short term fix until new rpm available in RHEL 5.3
	[870c268c75aa]

2008-05-05  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: bumped event version.
	[01fe9d499954]

	* spin/modules/core/rpms/logos-rpm/__init__.py, spin/modules/core/rpms
	/logos-rpm/constants.py:
	logos-rpm: uses the L_LOGOS_RPM_INFO property now.
	[e688cc20edc0]

	* spin/event/locals.py:
	event/locals.py: added locals property for L_LOGOS_RPM_INFO
	[2fa4729bba31]

	* spin/locals/__init__.py:
	locals: Fixed a bug with the creation of the __all__ attribute

	If a module in the locals/ directory had multiple attributes, only
	the last one was being added to __all__. Now all of the attributes
	get added to __all__.
	[6c232536522c]

	* spin/locals/logos_rpm.py:
	locals/logos_rpm: added distro-specific locals dictionary

	The L_LOGOS_RPM_INFO locals dictionary contains distro-specific
	information: the scriptlets to be installed for that distro, the
	shared folder to look in for the files to be installed by the RPM,
	the colors to use for the images we create etc.

	Now that this information is in a locals dictionary, we can get rid
	of all the conditional logic in the logos RPM event.
	[f119b60410ad]

2008-05-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/repos:
	examples: added full complement of gpgkeys for all fedora repos

	* beta, fedora, fedora-rawhide, fedora-test, rawhide
	[aa82c23c92d6]

	* share/doc/examples/repos:
	examples: updated repos file

	* included f7 repo definitions
	* included development repo definitions
	* included gpgkeys for all repos
	* modified repo ids to remove distro/version/arch specific text. For
	example, the id 'f8-everything-i386' is now 'everything'. This makes
	it easier to reuse distrofiles across distro/version combinations,
	i.e. for specifying repoids in comps elements.
	[7fd7090a0080]

	* INSTALL:
	INSTALL: Added list of installed distributions that Spin has been
	tested on
	[e7cbc3a03939]

	* spin/modules/shared/rpms.py:
	rpm: if version doesn't contain an int, use the version string

	For determining custom rpm release-versions, we attempt to use an
	integer found in the user-specified version string for interop with
	3rd party repofiles that use the $releasever macro. Previously, if
	the string contained no integer, we raised an exception. Now we just
	use the string. This allows specifying a version of 'development'
	when creating distros based off the fedora development repository,
	for example.
	[28607c6ed2a8]

2008-05-05  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py:
	removed tree printouts for comps failures since they don't seem to
	help much
	[44c021f502b4]

2008-04-30  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/repos:
	examples: removed extraneous main element from repos file
	[1e50956fad98]

2008-04-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/updates-image.py, spin/modules/extensions/installer/updates-
	image.py:
	updates-image is now finally an extension module instead of a core
	module
	[d98d467fee65]

	* spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/extensions/iso.py:
	bootiso contains stage2.img for fedora 9, boot arg handler
	improvements

	spin/modules/core/installer/bootiso.py
	 * 'bootiso' event now requires 'stage2-images'
	 * added include_ks=True to BootIsoEvent.bootconfig.setup() call
	 * all isolinux files except isolinux.cfg are linked into the bootiso
	directory; isolinux.cfg is copied and modified by BootConfigMixin
	 * HACK - in anaconda version 11.4.0.40 and above, stage2.img is also
	copied into distribution spin/modules/core/installer/isolinux.py
	 * IsolinuxEvent no longer extends BootConfigMixin
	 * IsolinuxEvent no longer modifies the default isolinux.cfg file at
	all; each module using BootConfigMixin is now responsible for
	handling all its args itself
	spin/modules/core/installer/stage2-images.py
	 * HACK - 'stage2-images' event now provides 'stage2-images'
	 * added Stage2ImagesEvent.apply(), which sets up the stage2-images
	cvar
	[b0da360fd031]

2008-04-29  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/release-rpm.py:
	release-rpm: The .repo file generated has the remote URL for input
	repos

	With changes to the Repo class, the Repo.__str__() method always
	returns the local (cached) URL as the baseurl. This is not what the
	baseurl value should be in the .repo file installed on the end-user
	machine. The baseurl in that case should be the remote (input) URL.

	Therefore, when the input repos are being written to the .repo file,
	the Repo.tostring() method is called directly with the 'remote'
	parameter set to True.
	[ab8bfc5c98e8]

	* spin/repo.py:
	The Repo.__str__() method writes local URLs to 'baseurl' key.

	The Repo.__str__() method was (incorrectly) writing the remote URL
	as the value of the 'baseurl' option. This was causing the 'pkglist'
	event's setup() step to download the repodata folder from the remote
	location which is (usually) time-consuming.

	To get around this problem, the Repo class now has a tostring()
	method that accepts an optional 'remote' parameter. If 'remote' is
	set to True, the 'baseurl' option's value is the remote URL; if
	'remote' is set to False, the 'baseurl' option's value is the local
	URL. The Repo.__str__() method makes use of the Repo.tostring()
	method and sets 'remote' to be False. This speeds up the pkglist's
	setup() step by some.
	[553308b37027]

2008-04-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/shared/createrepo.py:
	forgot to replace '%%{version}' with '%{version}' since we're no
	longer using % replacement
	[8f3aac751090]

	* spin/modules/shared/createrepo.py:
	Removed old createrepo version check code
	[a769f24182cd]

	* spin/event/locals.py, spin/locals/__init__.py,
	spin/locals/buildstamp.py, spin/locals/createrepo.py,
	spin/locals/discinfo.py, spin/locals/files.py,
	spin/locals/gdm_theme.py, spin/locals/installclass.py,
	spin/locals/logos.py, spin/locals/logos_rpm.py,
	spin/locals/release_html.py, spin/locals/treeinfo.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/createrepo.py:
	fairly extensive changes to locals handling
	 * all locals entries should now be prefixed by the name of the version
	that they're checking (eg 'anaconda-11.0.1.5', 'createrepo-0.9.4',
	etc)
	 * CreaterepoMixin local-ized based on createrepo version

	spin/event/locals.py
	 * removed Event.locals.ver
	 * added Event.locals.anaconda_ver, Event.locals.createrepo_ver
	 * L_* locals properties now pass an index including the name of what
	they're checking ('anaconda-X' and 'createrepo-X')
	spin/locals/__init__.py
	 * removed LocalsDict.__init__
	 * greatly simplified import code
	spin/modules/core/software/createrepo.py
	 *
	spin/modules/extensions/sources.py spin/modules/shared/createrepo.py
	 * renamed CreateRepoMixin to CreaterepoMixin
	 * local-ized this file using Event.locals.L_CREATEREPO
	 * fixed a bug in createrepo error processing that would never allow
	createrepo to run multiple times on EAGAIN or EWOULDBLOCK errors;
	also fixed a separate bug where execlib would run createrepo
	CREATEREPO_ATTEMPTS-1 times instead of CREATEREPO_ATTEMPTS times
	[ccddbd5a2dcf]

	* spin/modules/core/rpms/release-rpm.py:
	fixed a bug where you couldn't 'inclue-distro' and 'include-input'
	simultaneously
	[bed10ed2fa18]

	* spin/modules/extensions/installer/kickstart.py:
	changed API_VERSION from a string to a float
	[ebb6612298de]

	* spin/logging.py:
	slight clarification/improvement to logging L*() functions
	[cfc93bc3355e]

	* spin/event/loader.py, spin/main.py:
	improved module enable/distable handling by adding pseudo modules

	spin/event/loader.py
	 * Loader now checks all elements in a module path (each element
	between '.' characters) to see if any one of them is disabled -
	if any are disabled, no submodule is loaded. This allows you to
	do something like '--disable installer' to disable all installer
	modules at once. spin/main.py
	 * changed hack for '--force all' into a feature - all meta events are
	now pseudo modules for the purpose described above in loader.py
	(that is, you can now --disable any module that has children,
	currently os, setup, installer, software, rpms, and all).
	[a4d464a6f24d]

2008-04-24  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/diff.py:
	modified versort serializer import
	[1b387980366a]

2008-04-29  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/minimal.distro:
	examples: revived minimal.distro

	Keeping minimal.distro since it is easier to refer to for simple
	"getting started" exercises.
	[ed63bad39f16]

	* share/doc/examples/example.distro:
	examples: minor edits to example.distro
	[9fa1236aff90]

	* INSTALL:
	documentation: INSTALL file mentions that spin and yum must be run
	as root
	[7d7b1d295c50]

2008-04-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/doc/examples/example.distro,
	share/doc/examples/minimal.distro:
	committing example.distro, commented distro file for beginners (to
	spin)
	[52344bda3bda]

2008-04-28  Kay Williams  <kwilliams@renditionsoftware.com>

	* INSTALL, README:
	Modified INSTALL and README files. These will change later...
	[c98fdcf02550]

2008-04-28  Uday Prakash  <uprakash@renditionsoftware.com>

	* spintest/__init__.py:
	EventTestCase._runEvent() now calls <event>.postrun() when needed.

	EventTestCase._runEvent() needs to be kept in sync with
	Event.execute(). This will get fixed in a future version.
	[a747b3b4ae88]

	* spintest/modules/pkglist/__init__.py:
	spintest/pkglist: changed '9-Alpha' to '9-Preview'
	[746f78c45dff]

2008-04-26  "Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/bootiso.py:
	bootiso: bumped version
	[2abab8244813]

2008-04-26  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/isolinux.py,
	spin/modules/extensions/iso.py, spin/modules/shared/bootcfg.py:
	bootcfg: fixes to ensure ks and other methods correct on changes

	* shared/bootcfg.py - automatically adds diff data for ks-path and
	web-path cvars
	* bootiso.py - no longer appends ks=, this is handled by isolinux
	* diskboot-image - no longer adds ks-path to diff variables
	* isolinux - adds ks= to shared isolinux.cfg, cleans event cache at
	begininning of run method (hack)
	* iso.py - no longer adds ks-path to diff variables
	[857a6c393e66]

2008-04-25  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/event/__init__.py:
	event/: added FIXME tag to Event.postrun()
	[c5eec2467ee9]

	* spin/modules/core/autoclean.py, spin/modules/core/base-info.py,
	spin/modules/core/compose.py,
	spin/modules/core/installer/bootiso.py,
	spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/isolinux.py, spin/modules/core/installer
	/pxeboot-images.py, spin/modules/core/installer/stage2-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/installer.py, spin/modules/shared/rpms.py:
	Not calling self.diff.write_metadata() in any Event class.

	Calling self.diff.write_metadata() in an Event class is redundant as
	this is already taken care of by the super-Event class.
	[5df028d66414]

	* spin/modules/core/installer/diskboot-image.py:
	diskboot-image: added check() method

	DiskbootImageEvent.check() returns False if the anaconda version is
	greater than or equal to the anaconda version of Fedora 9. If we
	don't have this check(), the diskboot-image event runs for Fedora 9
	builds all the time.
	[49bdc8db9d56]

	* spin/event/__init__.py:
	event/__init__.py: calling DiffMixin.postrun() after Event.run()
	[23777dc4b5ab]

	* spin/event/diff.py:
	event/diff.py: added DiffMixin.postrun()

	The DiffMixin.postrun() methods writes out the metadata file.
	[45dc227dcce1]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: raise exception if empty logos RPM being built
	[119f24d076f5]

	* spin.spec:
	spin.spec: updated spec file to have all requirements.
	[20641605f29a]

	* INSTALL:
	INSTALL: added requirement for "netpbm-progs"
	[6541251cbe0e]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: overridding the Fedora 9 Theme ("waves")
	[ac4bc31e3117]

2008-04-24  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/installer/diskboot-image.py:
	diskboot-image: skipping verify_image() call for >= Fedora 9
	[2575989213ba]

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm: not re-creating images of the same size

	If there are multiple images that need to be created that have the
	same dimensions, then the image is created only once and copied from
	there after that.
	[80768c025eb8]

	* spintest/__init__.py, spintest/core.py:
	spintest: added a core test case that checks the verify_*() results

	CoreEventTestCase05 makes sure that all the verify_*() tests are
	passing.
	[cd012e2b51e8]

2008-04-24  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/spin.conf:
	examples: modified library-path elements in example spin.conf
	[3fe292a643ec]

2008-04-24  Uday Prakash  <uprakash@renditionsoftware.com>

	* README:
	README: fixed typo
	[e2e8c9ba8950]

	* README:
	README: removed references to nautilus-open-terminal in example
	[9c7b1ed296d9]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: bumped event version
	[9691ac5e3b8f]

	* spin/locals/logos_rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py:
	logos-rpm: Fixed background image fiasco

	The background images for Fedora >=8 use an XML file that define the
	files and the times of the day during which the files should be
	displayed. Spin, was creating these files before, but now those
	files just symlink to default.jpg. Fewer files to create!
	[b15794bfbdef]

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm: the "common" files don't have entries in locals

	The "common" files were being copied from the share/ directory to
	the build directory iff the file had a locals entry. None of the
	"common" files have locals entries so no file was being copied.
	Skipping this check.
	[96d5bfc25309]

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: code cleanup

	Broke down LogosRpmEvent._setup_handlers() into smaller, more
	readable methods.
	[952fb7fc1762]

2008-04-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* INSTALL:
	INSTALL: added python-devel as required package.
	[c11fa5dcfb79]

	* INSTALL:
	INSTALL: added rpm-build to dependency list.
	[ef0880cb1b0f]

	* README:
	README: updated README to contain corrent PYTHONPATH info
	[34fbaa754abc]

	* README:
	README: completed example use case of Spin
	[02b2586a6922]

2008-04-22  Uday Prakash  <uprakash@renditionsoftware.com>

	* README:
	Added information about running spin to README file.
	[410e0ca547fe]

	* INSTALL:
	INSTALL: added installation instructions for Spin.
	[e5f0ff393b44]

	* NEWS:
	NEWS: added a cheesy newsitem.
	[3634770f095b]

	* Makefile:
	Makfile: added `clean' and `.PHONY' targets
	[cf9faaf45a21]

2008-04-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/software/comps.py:
	comps: added support for display_order in comps group elements

	New in Fedora 9-Preview comps file
	[ae396487d2c9]

	* share/doc/examples/repos:
	examples: better macro path for centos mirror
	[4e3e4df2cad2]

	* share/doc/examples/minimal.distro:
	examples: disabled sources event in minimal.distro
	[040d44af25b2]

2008-04-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/event/loader.py:
	loader: ignoring *.pyc and *.pyo files
	[20cb72f9e729]

2008-04-22  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/minimal.distro:
	examples: minor change to minimal distro

	* changed default version to f9
	[145354c1f44d]

	* share/doc/examples/example-centos-5.distro, share/doc/examples
	/example-centos-base-5/distro.conf, share/doc/examples/example-
	fedora-6.distro, share/doc/examples/example-fedora-7.distro,
	share/doc/examples/example-fedora-8.distro, share/doc/examples
	/example-fedora-base-6/distro.conf, share/doc/examples/example-
	fedora-base-7/distro.conf, share/doc/examples/example-redhat-
	base-5/distro.conf, share/doc/examples/example-rhel-5.distro,
	share/doc/examples/minimal.distro, share/doc/examples/repos:
	examples: updated example .distro files

	* removed base distro-specific files
	* grouped all repo definitions into a single repos include file
	* added minimal.distro which be used for any base distro by modifying
	xinclude statements
	[d784d7d72d55]

2008-04-21  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/__init__.py:
	logos-rpm: bumped event version.
	[c30576123c82]

	* spin/locals/logos_rpm.py:
	locals/logos_rpm: added file information for background images.
	[08c08a5479d8]

	* spin/modules/core/rpms/logos-rpm/gradient.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm/{gradient,handlers}.py: removed API_VERSION
	[bf47047620f9]

	* spin/modules/core/rpms/logos-rpm/constants.py:
	logos-rpm/constants: removed API_VERSION, fixed Redhat 5 colors
	[a22d384ec31e]

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm: all user-specified files used

	If a user specifies a folder to use as input to the logos-rpm event,
	use all the files in that folder. If, for any reason, the files in
	the shared/distros, shared/fallback, and shared/common directories
	are used, then the file is used only if it is present in the logos-
	rpm event's locals dictionary. This allows us to have files based on
	anaconda versions.
	[f6e9ca92437b]

	* spin/locals/logos_rpm.py:
	locals/logos-rpm: updated locals to reflect changed in event

	The locals dictionary for the logos-rpm mapped a file to its XWindow
	type. For example, if a file is required by GNOME only, the file's
	locals entry would have a key: mapping pair of "/path/to/file":
	'gnome'. With changes to the logos-rpm and its shared/ folder, we
	don't need to store the XWindow type in the locals anymore.
	[619480f4e587]

	* spin/modules/core/rpms/logos-rpm/constants.py,
	spin/modules/core/rpms/logos-rpm/gradient.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm: added license text to new modules.
	[32dffd6d4fc1]

2008-04-18  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	logos-rpm/handlers.py: fixed bug with pasting of image

	When the transparent image is pasted on the the gradient image, we
	have to pass the transparent image as a mask to get the desired
	effect.
	[ab1b712d2ea1]

	* spin/modules/core/rpms/logos-rpm/gradient.py:
	logos-rpm/gradient.py: added missing imports
	[200ea9618ba3]

	* spin/modules/core/rpms/logos-rpm/constants.py:
	logos-rpm/constants: added color information
	[c1181722d37a]

	* spin/modules/core/rpms/logos-rpm/handlers.py:
	not overriding user-specified files.

	A file is not created if a user-specified file gets installed at the
	same location.
	[87953a67983a]

	* spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms/logos-
	rpm/__init__.py, spin/modules/core/rpms/logos-rpm/constants.py,
	spin/modules/core/rpms/logos-rpm/gradient.py, spin/modules/core/rpms
	/logos-rpm/handlers.py:
	logos-rpm: broke module into smaller files.

	Created a logos-rpm folder; the module was getting too big to
	manage.
	[bc150e29f819]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: copying license to build folder
	[447b94987dc5]

	* spin/modules/core/rpms/logos-rpm.py:
	Added support for images with gradients.

	The ImageGradient class has support for creating horizontal
	gradients on images. It has, currently, one method of interest:
	draw_gradient(), which takes in two parameters: the start_color and
	the end_color. Based on these two colors, a gradient is drawn on the
	image with the start_color on the "left side" of the image, and the
	end_color on the "right side" of the image.

	Modified the LogosHandler class to first look in the distro-specific
	folder for an image. If the image is found there, copy it to the
	build folder. If the image is not found there, use the fallback
	image (found in the currently empty fallback/ folder) and an
	ImageGradient object to create an image and save it in the build
	folder.
	[16f3687032e4]

2008-04-04  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/extensions/rpms/config-rpm.py:
	(config-rpm) auto script now appended after files are copied
	[893b1648e1bb]

	* spin/event/diff.py, spin/locals/__init__.py,
	spin/modules/core/installer/diskboot-image.py,
	spin/modules/core/installer/product-image.py,
	spin/modules/core/repos.py, spin/modules/core/software/comps.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/createrepo.py:
	integrated new versort, replacing sortlib

	spin/event/diff.py
	 * added support for serialization of Versions so that we correctly
	serialize Event.cvars['anaconda-version'] spin/locals/__init__.py
	 * now uses versort instead of sortlib for sorting index and keys when
	getting items out of a LocalsDict spin/modules/core/installer
	/diskboot-image.py
	 * now uses versort instead of sortlib for comparing anaconda versions
	spin/modules/core/installer/product-image.py
	 * removed erroneous sortlib import spin/modules/core/repos.py
	 * Event.cvars['anaconda-version'] is now set to a Version object
	instead of just a string; this allows it to be compared later on
	via standard comparison operators (<, ==, etc).
	spin/modules/core/software/comps.py
	 * now uses versort instead of sortlib for comparing anaconda versions
	spin/modules/extensions/rpms/config-rpm.py
	 * writing of the auto script no longer clobbers the CFGRPM_* variables
	that have just been written to the file (added append=True to the
	write_lines call)
	 * made the post install script generation less silly (Note - this will
	have to be looked at in the future as the current implementation
	does not support the spec in that relative paths do not work)
	spin/modules/shared/createrepo.py
	 * RpmPackageVersion and CommandLineVersion now return versort.Versions
	instead of strings
	 * now uses versort instead of sortlib for comparing rpm versions
	[61214044aafd]

2008-04-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py:
	Updated InputFilesMixin._handle_attributes() signature.

	The _handle_attributes() method used to take 3 parameters, but now
	it takes only 2. Updated in all the places.
	[6ed782a7aa8e]

2008-04-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/rpms.py:
	Fixed bug 171.

	If the 'dest' attribute is relative, don't move it from the folder
	the file has been installed in. If the 'dest' attribute is absolute,
	the file is moved to the value of 'dest' attribute in the post-
	install script.
	[1b7beeb694a3]

2008-04-04  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py:
	isolinux: modified isolinux-files providers to initialize cvar using
	setdefault
	[827f243580a2]

2008-04-03  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/logos.py,
	spintest/modules/diskboot-image.py:
	logos: cvars['installer-splash'] -> cvars['isolinux-files']

	This commit fixes a bug where boot.iso did not include the installer
	splash logo. At the same time it cleans up and consolides some
	cvars.

	* bootiso.py - now includes the installer-splash logo along with all
	other files listed in the isolinux-files cvar
	* diskboot-image - now obtains the path to the installer-splash file
	from cvars['isolinux-files']['installer-splash']
	* logos - now includes installer-splash path in the isolinux-files
	cvar
	* diskboot-image testcase looks for the installer-splash path in the
	isolinux-files cvar.
	[2a14cf98867b]

2008-04-01  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/locals.py, spin/locals/__init__.py:
	fixed an issue where locals files were clobbering modules during
	dispatch
	[ed6d95b1d093]

2008-03-31  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/locals.py, spin/modules/core/base-info.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/updates-image.py,
	spin/modules/core/installer/xen-images.py, spin/modules/core/rpms
	/logos-rpm.py, spin/modules/core/rpms/release-rpm.py,
	spin/modules/extensions/iso.py:
	renamed Event.locals.* to Event.locals.L_* to more transparently
	expose locals to events
	[3762c261ed2f]

	* spin/modules/shared/idepsolver.py:
	hopefully fixes the TypeError (unicode and int) error we have been
	seeing recently
	[da37360d83b3]

	* spin/__init__.py, spin/event/locals.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/extensions/iso.py, spin/modules/shared/bootcfg.py:
	improvements to BootConfigMixin

	spin/event/locals.py
	 * updated all locals names; no longer end in _LOCALS, all start with
	L_ spin/modules/core/installer/bootiso.py
	 * updated to new bootconfig changes (see below)
	spin/modules/core/installer/diskboot-image.py
	 * updated to new bootconfig changes (see below)
	spin/modules/core/installer/infofiles.py
	 * treeinfo file no longer statically generated
	 * treeinfo.run() now creates a file based on anaconda version (from
	data in locals.L_TREEINFO_FORMAT) spin/modules/extensions/iso.py
	 * updated to new bootconfig changes (see below)
	spin/modules/shared/bootcfg.py
	 * modules that use BootConfigMixin no longer have to explicitly modify
	their default arg list to include boot method or kicstart.
	Instead, to include these in the kernel arg list, pass
	include_method=True and/or include_ks=True to
	Event.bootconfig.setup.
	[dfdebfc3f54d]

	* spin/locals.py, spin/locals/__init__.py, spin/locals/buildstamp.py,
	spin/locals/discinfo.py, spin/locals/files.py,
	spin/locals/gdm_theme.py, spin/locals/installclass.py,
	spin/locals/logos.py, spin/locals/logos_rpm.py,
	spin/locals/release_html.py, spin/locals/treeinfo.py:
	broke 'locals.py' into pieces for ease of organization and editing
	[e6cbbd58346e]

2008-03-28  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/publish.py:
	publish: deleting changed output files prior to sync

	Sync doesn't currently support overwriting existing files if they
	have a newer timestamp. Spin needs this, however, to support the
	user replacing a newer file with an older one. As a workaround, the
	publish event notices any changed input files and deletes the
	corresponding file from the output folder prior to calling sync.
	[373d60617c92]

2008-03-28  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/extensions/rpms/config-rpm.py,
	spintest/modules/sources.py:
	corrected '5server' to '5Server'
	[cadb658b51e3]

2008-03-27  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/extensions/rpms/config-rpm.py:
	auto.sh updated to include helper path variables
	 * CFGRPM_FILES, which points to the directory containing files
	installed by the config rpm (/usr/share/<product>/files by
	default)
	 * CFGRPM_SCRIPTS, which points to the directory containing scripst
	installed by the config rpm (/usr/lib/<product> by default)
	[4285c85ef1d7]

	* spintest/modules/sources.py:
	updated location of redhat SRPMS
	[44411a9f22ae]

2008-03-27  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: setting f9 to use logos from f8 share folder (for now)

	Later, if needed, we will create a separate folder for f9 logos
	[733d5a6d4dca]

	* spin/modules/core/installer/infofiles.py:
	discinfo: set default value for 'discs' entry to be 'ALL'

	Aligning with anaconda buildinstall script. Previously we were
	setting the default value to '1'.
	[9e9a49210de3]

	* spin/locals.py:
	locals: modified discinfo format for anaconda 11.4.0.55 (fedora 9)

	removed base, rpms, and pixmaps folder entries
	[dc930f1e8e1a]

2008-03-26  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/locals.py:
	locals: updated buildstamp format for anaconda 11.4.0.99 (fedora 9
	Beta)
	[55ba1b900f96]

	* spin/modules/core/installer/initrd-image.py:
	initrd-image: added buildstamp-file as diff input
	[afb9b7dea13a]

2008-03-25  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py:
	pkglist: bumped version
	[95e2d34cf6c9]

2008-03-14  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/updates-image.py:
	updates-image: removed unnecessary requires on buildstamp-file

	The updates.img file does not include .buildstamp (product.img does,
	tho)
	[899df7e89e81]

2008-03-26  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/config.py:
	updated test config for redhat 5 to new server location
	[f1b39f79c3ee]

2008-03-21  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/config.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/sources.py:
	updated spintest with new server layout
	[92ba349fdfb9]

2008-03-13  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/idepsolver.py:
	pkglist: removed DEBUG statements
	[3cbd44eb9630]

2008-03-12  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals.py:
	locals: Also need to set IncludeAll to true in /etc/gdm/custom.conf.
	[72e5b045c51c]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: copying distro-specific images before common images.

	By copying distro-specific images before common images, we can
	override some of the common images in the distro-specific folders
	because the common images are copied only if there isn't already one
	image in the build folder.
	[4d1ef55d31b7]

	* spin/locals.py:
	locals/logos-rpm: enabling Face Browser in login screen.
	[7b6f7eecd214]

	* spin/modules/shared/idepsolver.py:
	removed DEBUG statements.
	[76970f158924]

	* spin/modules/shared/idepsolver.py:
	Fixed Bug 165.

	If there is an update available for a package, a series of checks
	are performed. Before this commit these checks were as follows: 1.
	Check all the packages that require the package with the available
	update and keep a record of what exactly it is about the package
	that it requires. 2. Then make sure that the update package provides
	everything the older package did. 3. If these checks are passed,
	replace the old package with the new one.

	There was one issue with this which is, there were some packages
	that required (<package name>, None, (None, None, None)), i.e. any
	package that provides <package name>. The aforementioned series of
	checks didn't always catch this because there were some packages,
	e.g. 'syslinux' that only provided a specific version of itself. To
	get around this, some more checks have been added.

	In the following lines, package A refers to a package that requires
	package B, and package B has an update available called package C.

	1. If package A doesn't require an explicit version of package B,
	replace package B with package C. 2. If package A requires a version
	{<=,<,==,>,>=} that of package B and package C also satisfies
	this requirement, replace package B with package C.
	[bdedfefdd197]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: bumped event version.
	[4ed53fb366b5]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: fixed bug in triggerin scriptlet for desktop-backgrounds-
	basic

	If, in the /usr/share/backgrounds/images folder, no images starting
	with 'default', are found, fallback on using 'default.jpg'. However,
	there was a bug in the triggerin scriptlet which was falling back on
	'default.jpg' instead of
	'/usr/share/backgrounds/images/default.jpg'.
	[3490f9d4f6c7]

	* share/spin/static/baseimage.png,
	share/spin/static/innerbackground.png:
	removed share/staticx
	[eb6c196209d4]

	* spintest/modules/theme-rpm.py:
	removed theme-rpm test cases.
	[b3d5032ee960]

2008-03-11  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: bumped version.
	[1d91144644e9]

	* spin/event/__init__.py, spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: require 'coreutils'; fixed bug in copy_common_images()
	[e544b8ad267c]

	* spin/main.py, spin/modules/core/publish.py:
	added a cvar for 'selinux-enabled'

	* spin/main.py:
	- added a default control variable, 'selinux-enabled', which is set to
	True if '/usr/sbin/getenforce' doesn't print 'Disabled'

	* spin/modules/core/publish.py:
	- the selinux checks moved to main.py
	[6dd96c8548cf]

	* share/spin/schemas/distro.conf/logos-rpm.rng, spin/locals.py,
	spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: added support for <include-xwindows-art/>
	[c11e17db3ff5]

	* share/spin/schemas/distro.conf/logos-rpm.rng:
	schemas/logos-rpm: added <write-text/> and <logos-path/>
	[84adfd504616]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: converting logos-path/text() to pps.Path object.
	[c718b0c65f14]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: copying instead of linking files
	[223f495b4c6d]

	* share/spin/schemas/distro.conf/theme-rpm.rng:
	removed theme-rpm.rng
	[03f30890f858]

	* spin/modules/core/publish.py:
	publish: running 'chcon' only if selinux is installed and enabled.

	* spin/modules/core/publish.py:
	- running '/usr/sbin/getenforce' prints 'Disabled' if selinux is
	disabled.
	- if the executable doesn't exist, selinux isn't installed.
	[d7f43e0559f3]

2008-03-11  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/man/distro/comps.rst:
	docsrc: fixed typo in comps schema documentation

	* changed </exclude> to </exclude-package>
	[3667a580e2f3]

2008-02-26  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/validate.py:
	Fixed bug 164.

	* spin/validate.py:
	- the argument to InvalidConfigError could be of type 'str',
	'unicode', or 'lxml.etree._ListLogEntry'. Allowing them all.
	[6e437daa486b]

2008-02-26  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/callback.py, spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolver.py:
	pkglist: callback and log text changes

	This commit includes several tweaks to the log output for the
	pkglist event:

	* Modified callback.py to include startSetup and endSetup functions
	in BuildDepsolveCallback. As a result, a log message now appears
	during settup that reads "reading package metadata" and displays a
	timer
	* Collapsed 4 individual idepsolve log lines into a single line that
	reads "checking for package changes" and displays a timer
	* Changed the log message text that prints prior to processing
	depsolve loops from "creating new package list" to "resolving
	package dependencies", which makes more sense now that additional
	messages display prior to loop processing.
	[006ef93b8ddc]

	* spin/event/__init__.py, spin/event/fileio.py,
	spin/modules/core/software/download.py,
	spin/modules/extensions/files.py:
	misc: debug folder changes

	This commit moves the location of the event debug folder as follows:

	was: <event_name>/debug now: <event_name>.debug

	This makes it easier to move the folder back to the original folder
	when debugging.
	[e552884fc9d6]

2008-02-25  Uday Prakash  <uprakash@renditionsoftware.com>

	* docsrc/Makefile, docsrc/man/Makefile:
	docsrc/Makefile: added top-level Makefile for docs
	[65e197ee5255]

2008-02-22  Uday Prakash  <uprakash@renditionsoftware.com>

	* docsrc/man/distro/comps.rst, docsrc/man/distro/gpgsign.rst,
	docsrc/man/distro/iso.rst, docsrc/man/distro/lib.rst,
	docsrc/man/distro/main.rst, docsrc/man/distro/publish.rst,
	docsrc/man/distro/repos.rst, docsrc/man/distro/sources.rst,
	docsrc/man/tools/writers/manpage.py:
	the man page looks like it did if it were generated using docbook

	* docsrc/man/tools/writers/manpage.py:
	- had to make some changes in the state machine that creates the man
	page so that the output is pretty

	* docsrs/man/distro/*.rst:
	- fixed some of the subtitles, they were emphasized when they should
	have been underlined.
	[7b8142257e85]

	* spin.spec, tools/docgen:
	added a BuildRequires for python-docutils and removed tools/docgen
	[284f3daad843]

	* docsrc/man/Makefile, docsrc/man/comps.rng,
	docsrc/man/distro/comps.rst, docsrc/man/distro/gpgsign.rst,
	docsrc/man/distro/installer.rst, docsrc/man/distro/iso.rst,
	docsrc/man/distro/isolinux.rst, docsrc/man/distro/lib.rst,
	docsrc/man/distro/main.rst, docsrc/man/distro/product.rst,
	docsrc/man/distro/publish.rst, docsrc/man/distro/repos.rst,
	docsrc/man/distro/sources.rst, docsrc/man/distro/updates.rst,
	docsrc/man/gpgsign.rng, docsrc/man/installer.rng,
	docsrc/man/iso.rng, docsrc/man/isolinux.rng, docsrc/man/lib.rng,
	docsrc/man/main.rng, docsrc/man/product.rng, docsrc/man/publish.rng,
	docsrc/man/repos.rng, docsrc/man/sources.rng, docsrc/man/spin.rng,
	docsrc/man/spin/spin.rst, docsrc/man/tools/rst2man.py,
	docsrc/man/tools/writers/__init__.py,
	docsrc/man/tools/writers/manpage.py, docsrc/man/updates.rng:
	creating man pages using rst2man.py instead of docgen

	We have moved our documentation files from docbook format to
	reStructured Text format. With this change, we don't need the *.rng
	files anymore because they were in docbook-format. I have converted
	all of them to reST using "similar" directives. I still have to give
	the .rst files a once over to make sure they are what we would
	expect it to be.

	I have also restructured the docsrc/ folder. The docsrc folder has a
	man/ folder (in preparation for an html/ folder parallel to it). The
	man/ folder has three folders: distro/, spin/, and tools/. The
	distro/ folder has the reST files related to the distro man page.
	The spin/ folder has the reST files related to the spin.conf man
	page. The tools/ folder has the tools needed to convert reST files
	to man files.
	[8d3483530cc4]

	* docsrc/man/release-rpm:
	removed docsrc/man/release-rpm; empty filex
	[0536cd286787]

	* docsrc/Makefile, docsrc/comps.rng, docsrc/gpgsign.rng,
	docsrc/installer.rng, docsrc/iso.rng, docsrc/isolinux.rng,
	docsrc/lib.rng, docsrc/main.rng, docsrc/man/Makefile,
	docsrc/man/comps.rng, docsrc/man/gpgsign.rng,
	docsrc/man/installer.rng, docsrc/man/iso.rng,
	docsrc/man/isolinux.rng, docsrc/man/lib.rng, docsrc/man/main.rng,
	docsrc/man/product.rng, docsrc/man/publish.rng, docsrc/man/release-
	rpm, docsrc/man/repos.rng, docsrc/man/sources.rng,
	docsrc/man/spin.rng, docsrc/man/updates.rng, docsrc/product.rng,
	docsrc/publish.rng, docsrc/release-rpm, docsrc/repos.rng,
	docsrc/sources.rng, docsrc/spin.rng, docsrc/updates.rng:
	moved files to man/ folder
	[41c9c5133e91]

	* docsrc/config-rpm, docsrc/default-theme-rpm, docsrc/installer-logos,
	docsrc/installer-release-files, docsrc/logos-rpm, docsrc/pkglist,
	docsrc/rpms, docsrc/xen:
	spin/docsrc: removed empty files
	[c8df8af8cfed]

2008-02-22  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py:
	more comps modifications to track down that annoying bug
	[cc2b391f1a70]

2008-02-22  Uday Prakash  <uprakash@renditionsoftware.com>

	* tools/docgen:
	toold/docgen: changed mode to be +x
	[9c0b58620187]

	* spintest/runtest.py:
	spintest/runtest.py: changed mode to be +x
	[d9171c595fd0]

	* bin/spin:
	bin/spin: changed mode to be executable.

	* bin/spin:
	- with my changes yesterday (adding the license header), the mode of
	the file got changed. Reverting the mode to be +x.
	[86d8c928ceba]

2008-02-21  Uday Prakash  <uprakash@renditionsoftware.com>

	* bin/spin, setup.py, spin/__init__.py, spin/callback.py,
	spin/constants.py, spin/event/__init__.py, spin/event/diff.py,
	spin/event/fileio.py, spin/event/loader.py, spin/event/locals.py,
	spin/event/verify.py, spin/locals.py, spin/logging.py, spin/main.py,
	spin/modules/__init__.py, spin/modules/core/__init__.py,
	spin/modules/core/autoclean.py, spin/modules/core/base-info.py,
	spin/modules/core/compose.py, spin/modules/core/init.py,
	spin/modules/core/installer/__init__.py,
	spin/modules/core/installer/bootiso.py, spin/modules/core/installer
	/diskboot-image.py, spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/logos.py, spin/modules/core/installer
	/product-image.py, spin/modules/core/installer/pxeboot-images.py,
	spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/stage2-images.py,
	spin/modules/core/installer/updates-image.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/repos.py,
	spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/custom-
	repo.py, spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/rpms/theme-rpm.py,
	spin/modules/core/software/__init__.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/extensions/__init__.py,
	spin/modules/extensions/files.py,
	spin/modules/extensions/installer/__init__.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/iso.py,
	spin/modules/extensions/rpms/__init__.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/extensions/software/__init__.py,
	spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py, spin/modules/shared/__init__.py,
	spin/modules/shared/bootcfg.py, spin/modules/shared/createrepo.py,
	spin/modules/shared/idepsolver.py, spin/modules/shared/installer.py,
	spin/modules/shared/repos.py, spin/modules/shared/rpms.py,
	spin/repo.py, spin/splittree.py, spin/validate.py, spin/verify.py,
	spintest/__init__.py, spintest/config.py, spintest/core.py,
	spintest/mixins.py, spintest/modules/__init__.py,
	spintest/modules/all.py, spintest/modules/autoclean.py,
	spintest/modules/base-info.py, spintest/modules/bootiso.py,
	spintest/modules/compose.py, spintest/modules/comps/__init__.py,
	spintest/modules/config-rpm.py,
	spintest/modules/createrepo/__init__.py, spintest/modules/custom-
	repo.py, spintest/modules/diskboot-image.py,
	spintest/modules/download/__init__.py, spintest/modules/files.py,
	spintest/modules/gpgcheck.py, spintest/modules/gpgsign/__init__.py,
	spintest/modules/infofiles.py, spintest/modules/init.py,
	spintest/modules/initrd-image.py, spintest/modules/installer.py,
	spintest/modules/iso.py, spintest/modules/isolinux.py,
	spintest/modules/kickstart.py, spintest/modules/logos-rpm.py,
	spintest/modules/logos.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/product-image.py, spintest/modules/publish.py,
	spintest/modules/pxeboot-images.py, spintest/modules/release-
	files.py, spintest/modules/release-rpm.py,
	spintest/modules/repos.py, spintest/modules/rpms.py,
	spintest/modules/software.py, spintest/modules/sources.py,
	spintest/modules/stage2-images.py, spintest/modules/theme-rpm.py,
	spintest/modules/updates-image.py, spintest/rpms.py,
	spintest/runtest.py, tools/docgen:
	added license information in all the source files
	[14809d132506]

2008-02-20  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py:
	pkglist: bumped event version number.
	[6ff5a5febcd1]

2008-02-18  Uday Prakash  <uprakash@renditionsoftware.com>

	* Makefile, docsrc/Makefile, spin.spec:
	installing man pages
	[9909b9d9c571]

	* Makefile, docsrc/Makefile:
	Creating man pages during RPM build
	[676b62b20f78]

	* docsrc/main.rng, docsrc/spin.rng:
	docsrc: fixed <refpurpose> elements' text value
	[2940f7483977]

	* tools/docgen:
	tools/docgen: made changes to reflect changes in rendition.docbook
	[d2bb2d10f5b0]

	* docsrc/spin.rng:
	docsrc/spin.rng: added missing semicolon
	[ed31b76b7c60]

	* docsrc/publish.rng:
	docsrc/publish.rng: fixed ending tag mismatch
	[c04be80b662b]

	* setup.py, spin.spec:
	reset version in spec file and setup.py to 0.0
	[37dd550cf388]

	* Makefile:
	Makefile: made changes to reflect changes in devtools
	[a9385418cb5c]

	* spin/main.py:
	improved locking mechanism

	* spin/main.py:
	- if the lock file exists and the pid in the file matches the current
	pid, then unlock and continue
	- if the lock file exists and the pid in the file doesn't exist, then
	unlock and continue
	- if the lock file exists and the pid in the file also exists, then
	raise an exception as before
	[1c0dfeb7e35f]

	* spin/modules/shared/idepsolver.py:
	idepsolver: fixed bug 163

	* spin/modules/shared/idepsolver.py:
	- previously, if there was a newer package available for a package
	previously in the pkglist, the old package was removed and replaced
	by the new one without performing any checks. This is really bad in
	the case when the new package doesn't provide something the old
	package did. Now, before replacing the old package with the new
	package, a check is performed to make sure that the new package
	provides everything the old package did (at least the things
	required by other packages).
	[6dc78078e092]

	* spintest/modules/pkglist/__init__.py:
	spintest/pkglist: added test cases for bug 163
	[5ea5afa370bb]

2008-02-14  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py:
	pkglist: Fixed bug 161.

	* spin/modules/core/software/pkglist.py:
	- there was a bug in PkglistEvent which was causing all the cached yum
	folders to get deleted even if only one of the input repositories
	change. This commit fixes this issue which results in the speeding
	up of the pkglist setup.
	[3296704f30e7]

	* setup.py:
	setup.py: removed unnecessary 'glob' module import
	[9d1b5b3e0c62]

	* AUTHORS:
	AUTHORS: added authors' name and email address
	[058c604e9608]

	* spin.spec:
	spin.spec: added Requires, BuildRequires and %doc files
	[5773e87879cf]

	* AUTHORS, COPYING, ChangeLog, INSTALL, Makefile, NEWS, README,
	setup.py, spin.spec:
	added initial files that need to be in package created.

	* AUTHORS:
	- list of authors

	* COPYING:
	- license information

	* ChangeLog:
	- contains ChangeLog

	* INSTALL:
	- information about how to install spin

	* Makefile:
	- used to build packages, and update versions

	* NEWS:
	- news about spin

	* README:
	- information about spin

	* setup.py:
	- used to install packages

	* spin.spec:
	- information about the RPM and SRPM generated
	[62ecbb1a43fe]

	* build/MANIFEST.in, build/setup.cfg, build/setup.py,
	runfromsource.cfg:
	removed runfromsource.cfg and build/ folder
	[704253d374c8]

2008-02-11  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py:
	more debug code to find the packagereq comps error
	[0f1ee9ddb87b]

2008-02-07  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: bumped event version
	[56c2bf01e376]

	* share/spin/static/baseimage.png, spin/locals.py,
	spin/modules/shared/rpms.py:
	logos-rpm: improved quality of text on images created

	* share/spin/static/baseimage.png:
	- added transparent border to images

	* spin/locals.py:
	- changed minimum font size to 9; anything less than that doesn't look
	too good.
	- changed the font color for copyright text to '#9d9d9d' from white.

	* spin/modules/shared/rpms.py:
	- checking to see whether the font fits in the allotted space iff both
	the font_size and font_min_size attributes are specified in the
	locals definition for that image.
	[25e51ac001f0]

2008-02-06  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py:
	rpms: improved image resizing in ImagesGenerator

	* spin/modules/shared/rpms.py:
	- the static images are resized with anti-aliasing turned on.
	[0a37408de0a5]

2008-02-05  Kay Williams  <kwilliams@renditionsoftware.com>

	* spintest/modules/comps/__init__.py:
	comps: fixed variable name in test case

	included-packages -> comps-included-packages
	[9fbb538fd894]

2008-02-05  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py:
	debug commit to attempt to figure out 'packagereq' TypeError
	[543998c01178]

2008-02-04  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/repos.rng, share/spin/schemas/distro.conf/repos.rng,
	spin/modules/core/repos.py, spin/modules/core/software/pkglist.py:
	repos: added support for exclude-package in the repos element

	Previously we supported exclude-package in the repo and comps
	elements. This commit adds support in the repos element as well.
	Packages listed in this element are excluded both during comps file
	creation and from pkglist dependency solving. We had discussed
	postponing this feature. Since it turned out to be handy for
	troubleshooting broken package dependencies in a repository, I went
	ahead. Changes include:

	* added documentation for exclude-package in the repos container
	* uncommented schema for exclude-package in the repos schema
	* modified repos.py to add items from exclude-package elements to the
	comps-excluded-packages and pkglist-excluded-packages cvars
	* modified pkglist.py to include items from pkglist-excluded-packages
	in the yumconf that is created prior to depsolving. Eventually we
	may need to generalize the solution to allow for other yum global
	variables to be passed from the repos event to the pkglist event.
	We'll cross that bridge when we come to it.
	[b22e04f00762]

	* spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/software/comps.py,
	spintest/modules/comps/__init__.py:
	comps: prepended 'comps-' to 'included-packages'/'excluded-packages'
	cvars

	Made these changes to distinguish between comps-excluded-packages
	and pkglist-excluded-packages (see next commit)
	[ba8949bd6aaa]

2008-02-01  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/idepsolver.py:
	idepsolver: made some more speed improvements

	If a package that is in the package list created the last time
	'pkglist' was run but is no longer there, that package and all the
	packages it required were getting re-depsolved (if the package was
	required this time). So in the case when a package was updated and
	the older package was deleted from the repository that package and
	all its dependencies were depsolved.

	This has been changed now so that the deps are re-depsolved iff the
	requires of the updated package has changed.
	[3b42df5b427d]

2008-02-01  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/base-info.py,
	spin/modules/core/installer/infofiles.py,
	spin/modules/core/installer/isolinux.py,
	spin/modules/core/installer/stage2-images.py, spin/modules/core/rpms
	/logos-rpm.py, spin/modules/core/sourcevars.py,
	spin/modules/shared/installer.py, spin/modules/shared/rpms.py,
	spintest/modules/base-info.py, spintest/modules/sourcevars.py:
	cleanup: source-vars -> base-info

	* renamed module sourcevars -> base-info
	* renamed event source-vars -> base-info
	* renamed cvar source-vars -> base-info
	* renamed spintest module sourcevars -> base-info
	* patched up the code everywhere else to refer to the new name
	* ran 'runtest.py base-info' to ensure tests pass
	[931e0d46a926]

	* spin/main.py, spin/modules/core/installer/infofiles.py,
	spin/modules/shared/installer.py, spin/modules/shared/rpms.py:
	cleanup: base-vars -> distro-info

	In preparation for renaming source-vars -> base-info, given that we
	refer to the base repository and base distribuiton as 'base' rather
	than 'source' everywhere else.
	[c11699594a68]

2008-02-01  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: improved triggers on gdm and desktop-backgrounds-basic

	* spin/modules/core/rpms/theme-rpm.py:
	- the trigger on 'desktop-backgrounds-basic' works on all 'default*'
	images in the /usr/share/backgrounds/images instead of a static list
	of images. The uninstallation works in similar fashion.
	- removed ThemeRpmEvent.custom_theme instance variable because it
	doesn't need to be an instance variable; likewise for
	ThemeRpmEvent.themename
	[537fe4eb1555]

	* spintest/__init__.py, spintest/modules/config-rpm.py,
	spintest/modules/logos-rpm.py, spintest/modules/release-rpm.py,
	spintest/modules/theme-rpm.py, spintest/rpms.py:
	spintest/rpms: fixed cvars test cases for rpm events

	* removed RpmEventTestCase because it's not needed anymore now that
	RpmBuildMixin has the 'rpm_path' and 'srpm_path' properties. With
	this change removed RpmEventTestCase from the parents list of
	objects extending it.
	* updated RpmCvarsTestCase.check_cvars() method to verify the value of
	all the cvars in 'custom-rpms-data' for the event. Objects extending
	RpmCvarsTestCase don't verify the 'custom-rpms-info' cvar's contents
	anymore.
	[67bc2c68e76a]

2008-02-01  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* docsrc/comps.rng, docsrc/iso.rng, docsrc/lib.rng, docsrc/main.rng,
	docsrc/product.rng, docsrc/updates.rng,
	share/spin/schemas/distro.conf/repos.rng:
	bug 157: repos: exclude-package element ignored at the repos level

	After discussion yesterday, we're cutting this feature for now, as
	its implementation would imply general yum global option support for
	repos elements. This and other global options will be supported in
	the future.

	This commit also includes quite a few documentation updates; it has
	clearly been quite a while since many of these files have been
	examined.

	docsrc/comps.rng
	 * renamed 'exclude' to 'exclude-package' docsrc/iso.rng
	 * fixed up iso short-form schema docsrc/lib.rng
	 * renamed 'exclude' to 'exclude-package'
	 * renamed 'includepkg' to 'include-package'
	 * added documentation for 'mode' and 'filename' attributes on 'path'
	elements docsrc/main.rng
	 * added documentation for 'copyright' elements
	 * removed 'publishpath' and 'modules' elements docsrc/product.rng
	 * renamed 'product.img' to 'product-image' docsrc/updates.rng
	 * renamed 'updates.img' to 'updates-image'
	share/spin/schemas/distro.conf/repos.rng
	 * commented out schema information for 'exclude' element in 'repos'
	section spin/repo.py
	 * updated exclude and include xpaths to new locations
	[c6ae9cdbecb4]

2008-01-31  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolver.py:
	idepsolver: fixed bugs in IDepsolver.iupdate() and
	IDepsolver.iremove()

	* spin/modules/shared/idepsolver.py:
	- the IDepsolver.iremove() method wasn't deleting about packages no
	longer there -- this was being seen when an 'updates' repository was
	added, and then removed.
	- if one package required another one and there was an update for the
	first package that didn't require the second package anymore, the
	second package was being left around by IDepsolver.iupdate().

	* spin/modules/core/software/pkglist.py:
	- changed some variable names
	[12c17a6df852]

	* spin/modules/shared/idepsolver.py:
	idepsolver: added comments
	[681b25c4fa83]

2008-01-30  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/idepsolver.py:
	idepsolver: smarter about packaged being removed

	In IDespolver.setup(), the data from pkglist's previous run is read
	in
	-- for each of the package tuples in the previous package list, the
	package objects are found and saved for future use. If a package
	object cannot be found for a package tuple, then the package is
	removed. If a package object cannot be found for one of the deps of
	that package, that dep is removed.

	In effect, removing a package causes it and everything that requires
	it to be depsolved. Removing just the dep and not the package
	requiring it, in the case that the dep is missing, the other deps of
	the package are not "lost." This makes depsolving to go faster.
	[c5ae694d0147]

	* spin/modules/shared/idepsolver.py:
	idepsolver: cleaned up method signatures
	[53313a4fd8fb]

	* spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolver.py:
	Not checking for packages to remove in IDepsolver.iupdate().

	* spin/modules/shared/idepsolver.py:
	- the removal of packages is completely taken care of in
	IDepsolver.iremove(). I was doing a search for packages that are not
	required anymore in IDepsolver.iupdate() just to be sure but that's
	not needed looks like :).
	[728f70e99648]

	* spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/custom-
	repo.py, spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/rpms/theme-rpm.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/rpms.py:
	rpms: fixed miscellaneous bugs that came up due to recent changes

	The custom RPM event classes were extending Event first and then
	RpmBuildMixin. Now that RpmBuildMixin implements the run() and
	apply() methods it needs to be first in the parent's list.

	There were a bunch of typos in the 'custom-repo' and 'rpms' events.
	Fixed them.
	[8ea85af3d89f]

	* spin/modules/core/software/pkglist.py:
	pkglist: not calling clean_eventcache() in run()
	[df31553bc1c9]

	* spin/modules/core/rpms/__init__.py, spin/modules/core/rpms/custom-
	repo.py, spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms
	/release-rpm.py, spin/modules/core/rpms/theme-rpm.py,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/rpms.py:
	rpms: cleaned up control vars and RpmBuildMixin

	* spin/modules/core/rpms/__init__.py:
	- the custom RPM events used to set three different control variables:
	'custom-rpms', 'custom-srpms', and 'custom-rpms-info'. Now they set
	just one control variable 'custom-rpms-data'. This variable is
	initialized to an empty dictionary in the parent 'rpms' event.

	* spin/modules/shared/rpms.py:
	- added properties for 'rpm_path' and 'srpm_path'
	- added RpmBuildMixin.apply() and RpmBuildMixin.run(); the child class
	doesn't have to implement these anymore. These methods were the same
	for all the children.
	- RpmBuildMixin.__init__() takes in three more parameters:
	'packagereq_type', 'packagereq_default', and 'packagereq_requires',
	which default to 'mandatory', None and None, respectively.
	- merged common methods as needed.

	* spin/modules/{core,extensions}/rpms:
	- made changes in custom RPM event classes to reflect the changes in
	RpmBuildMixin.
	[03189d1b9575]

2008-01-31  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/lib.rng, docsrc/repos.rng,
	share/spin/schemas/distro.conf/comps.rng,
	share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/repos.rng, spin/repo.py:
	repos: flattened exclude and includepkgs in repo schema

	* flattened repo/exclude/package to repo/exclude-package
	* flattened repo/includepkgs/package to repo/include-package
	* moved exclude-package element to lib.rng
	* modified comps and repos schemas to reference shared exclude-package
	element
	* modified spin/repo.py to read new flattened docsrc
	* modified lib and repos docsrc files per above
	* verified that no changes are needed to the repos test module
	[7d59cc4ff03f]

2008-01-31  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/modules/comps/__init__.py,
	spintest/modules/download/__init__.py,
	spintest/modules/pkglist/__init__.py:
	updated comps, download, pkglist test cases to new comps schema
	[2f23b7a0a843]

2008-01-31  Kay Williams  <kwilliams@renditionsoftware.com>

	* spintest/modules/comps/__init__.py:
	test: flattened exclude packages config in comps test module
	[806c659f7f72]

	* docsrc/comps.rng, share/spin/schemas/distro.conf/comps.rng,
	spin/modules/core/software/comps.py:
	comps: flattened 'exclude/package' schema to 'exclude-package'

	* removed the exclude element which contained package elements from
	the comps schema
	* added a new 'exclude-package' element to the comps schema as a
	replacement for the above
	* updated comps.py module per the above
	* modified docsrc/comps.rng to reflect comps schema flattening in this
	changeset as well as changeset 962 which flattened core and groups
	containers
	[d62568c1bb32]

2008-01-30  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/spin/schemas/distro.conf/comps.rng,
	spin/modules/core/software/comps.py:
	bug 156: comps cleanup/simplification

	Removed support for 'core/group'. Flattened 'groups/group' and
	'packages/package' to 'group' and 'package', respectively, each of
	which can be repeated multiple times if desired.

	share/spin/schemas/distro.conf/comps.rng
	 * updated schema to match the above
	spin/modules/core/software/comps.py
	 * updated code to match the above
	 * removed _groupmap dict; no longer necessary
	[932596333364]

2008-01-30  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/doc/examples/example-centos-5.distro, share/doc/examples
	/example-fedora-6.distro, share/doc/examples/example-
	fedora-7.distro, share/doc/examples/example-fedora-8.distro,
	share/doc/examples/example-rhel-5.distro,
	share/doc/examples/spin.conf:
	examples: updated spin.conf and distro files

	* updated spin.conf to new schema
	* flattened folder structure to distro configuration files
	[9145155d2a0d]

2008-01-30  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/modules/core/software/comps.py:
	fixed key error when <comps> element was no groups were listed in
	<comps> element.

	spin/modules/core/software/comps.py
	 * added mapping for group 'core' to _groupmappings; since it is
	assumed by default
	[97ee06198ad5]

	* spin/modules/core/software/comps.py:
	accidentally commited some test code in previous comps fix
	[dd57754009d2]

	* spin/modules/core/software/comps.py:
	bug 154: comps group misbehavior

	Fixed a bug that caused invalid groups listed in the <core> section
	to be ignored. Now any invalid group will be caught, whether in
	<core> or <groups>.
	[b41cdce95488]

	* spintest/__init__.py:
	added some test code to track down lock error
	[dc784f809475]

2008-01-30  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/main.rng, docsrc/spin.rng, share/spin/schemas/spin.rng,
	spin/__init__.py, spin/main.py:
	mainconfig: schema naming and doc tweaks for globally disabling
	modules

	* flattened schema, removing outer /spin/modules element
	* renamed module element to disable-module since it only controls
	disabling
	* modified spin.rng schema
	* modified main.py
	* added a new spin.rng file in the docsrc folder
	* moved disable-module documentation to docsrc/spin.rng from main.rng
	* deleted documentation for obsolete plugin element from
	docsrc/main.rng
	* deleted references to obsolete plugin feature from __init__.py and
	main.py
	[f6f25029422f]

2008-01-30  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/modules/diskboot-image.py, spintest/modules/product-
	image.py, spintest/modules/updates-image.py:
	fixed ordering of teardown methods for disk images
	[b3ec7bee3e91]

	* spintest/modules/diskboot-image.py, spintest/modules/product-
	image.py, spintest/modules/updates-image.py:
	added missing teardown methods in attempt to fix lock issues in
	testing
	[c38d53ae39b6]

2008-01-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py:
	fixed spin locking

	spin/main.py
	 * for some reason we were excepting the RuntimeError we were raising
	when the lock condition wasn't met; this is no longer the case.
	Attempting to run two instances of spin at the same time now
	results in a RuntimeError being raised.
	[0c9ce9a81042]

	* share/spin/schemas/spin.rng, spin/main.py:
	collapsed elements in spin config

	The 'librarypaths' and 'sharepaths' container elements have been
	collapsed; instead of containers of path elements, these have merely
	become individual elements that can be listed multiple times (a la
	config-rpm 'script' and 'file' elements). The inner elements have
	been renamed from 'path' to 'library-path' and 'share-path',
	respectively.

	share/spin/schemas/spin.rng
	 * changed schema to match above spin/main.py
	 * changed xpath queries to match above
	[4a80f4e56250]

	* spin/event/loader.py, spin/main.py:
	bug 150 - allow module disables from config

	The specfile and documentation allow for modules to be disabled from
	spin's config file as well as from the distribution definition.
	However, the actual code hasn't supported this for some time. This
	commit addresses this issue by allowing modules to be disabled in
	the modules section of the spin config file.

	spin/event/loader.py
	 * changed module loading behavior slightly: Old behavior:
	    - do not load disabled default-on modules
	    - load enabled default-off modules New behavior:
	    - do not load disabled modules, default-on and default-off
	    - load enabled default-off modules This means that being disabled
	has priority over being enabled. spin/main.py
	 * added code to support disabling modules from spin config file
	[0c363152d63b]

2008-01-28  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/extensions/rpms/config-rpm.py:
	config-rpm: running 'restorecon' on the files after moving them.

	* spin/modules/extensions/rpms/config-rpm.py:
	- in the post-install step of the RPM install files are moved from
	/usr/share/<product>/files to the dest attribute specified in the
	config file. Now, in addition to that, 'restorecon' is run on those
	files to make sure that they have the right contexts.
	[40646285ae0b]

	* spin/modules/shared/idepsolver.py:
	idepsolver: moved IDepsolver.getBestAvailablePackage() to rendition
	[01578aef0cf8]

	* spin/modules/core/software/comps.py:
	comps: if required group not available in comps.xml then continue
	[f16da6506d85]

2008-01-25  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/callback.py, spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolver.py:
	Fixed bug 151 and improved idepsolve process.

	* spin/callback.py:
	- added IDepsolverCallback which is used to print out remove, install,
	and update information

	* spin/modules/core/software/pkglist.py:
	- passing logger object to idepsolver.resolve()

	* spin/modules/shared/idepsolver.py:
	- printing messages as packages are being removed, added and checked
	for updates.
	- not depsolving packages who have their deps already in the
	transaction set.
	[7b08eab9947b]

	* spin/modules/shared/installer.py:
	shared/installer: moved definition of working_dir outside try-block

	* spin/modules/shared/installer.py:
	- I just saw this exception saying that 'working_dir' was being
	referenced before assignment; I am not able to reproduce it anymore
	but moving the assignment of working_dir outside the try-block just
	to be safe.
	[d23b8f439ee7]

	* spin/verify.py:
	verify: step 2 of moving verification messages to log level 5
	[18cbe2ad4fc8]

	* spin/event/verify.py:
	verify: printing verification messages at log level 5
	[5061189cc343]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: backing out background images iff they exist
	[3b50bf812453]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: cleaned up triggerin and triggerun scriptlets

	* spin/modules/core/rpms/theme-rpm.py:
	- cleaned up the scriptlets to run if either the target of the
	triggered packages is being uninstalled.
	[817ddea9dba0]

2008-01-25  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/main.py, spintest/runtest.py:
	changed default cache clearing behavior to default removal

	spin/main.py
	 * changed default log level for cache clearing message to 1
	spintest/runtest.py
	 * removed --clear-cache
	 * added --no-clear-cache, which will cause the build root to not be
	deleted when finished
	[a8227845ad07]

2008-01-24  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms/release-
	rpm.py, spin/modules/core/rpms/theme-rpm.py,
	spin/modules/extensions/rpms/config-rpm.py:
	rpms: bumped versions of RPM Events
	[581e2cbf7f11]

	* spin/modules/core/rpms/theme-rpm.py, spin/modules/extensions/rpms
	/config-rpm.py:
	config-rpm, theme-rpm: making extensions of backups .rpmsave

	Running cron jobs, and I bet other applications, ignore files with
	extension .rpmsave. Therefore, all the RPMs backed up by the theme
	RPM and config RPM now have the extension .rpmsave instead of
	.theme-save and .config-save respectively.
	[e35c529cfc8d]

	* spin/modules/extensions/rpms/config-rpm.py:
	config-rpm: running post-uninstall script iff config RPM is being
	removed

	* spin/modules/extensions/rpms/config-rpm.py:
	- the post-uninstall script of the RPM being removed is run after the
	post-install script of the RPM replacing it has run. This causes all
	the changes made in the post-install script to be undone. Now, just
	running the post-uninstall script iff the config RPM is being
	removed for good.
	[e1ab28166635]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: running triggers iff theme-rpm is being uninstalled
	[532262175d90]

	* spin/locals.py, spin/modules/core/installer/logos.py:
	creating dummy release notes image to be used during install

	* spin/locals.py:
	- creating /usr/share/anaconda/pixmaps/welcome.png

	* spin/modules/core/installer/logos.py:
	- improved LogosEvent._copy_pixmaps() to copy images from (currently)
	/usr/share/anaconda/pixmaps in the logos RPM to <logos-
	mddir>/pixmaps
	[9448ed1d7c48]

	* spin/modules/extensions/rpms/config-rpm.py:
	config-rpm: the config RPM built requires 'coreutils'

	* spin/modules/extensions/rpms/config-rpm.py:
	- the config RPM does some file renaming (/bin/mv) and file deletion
	(/bin/rm) in the post install section; these binaries are installed
	by the 'coreutils' package, which is now required by the config RPM.
	[563912928a0e]

2008-01-24  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* share/spin/schemas/distro.conf/main.rng, spin/event/__init__.py,
	spin/main.py, spin/modules/core/software/pkglist.py,
	spintest/runtest.py:
	unified arch/basearch handling

	Arch support has been clarified and standardized throughout spin.
	We now support two base archs, 'i386' and 'x86_64'; if no arch is
	given, 'i386' is assumed. In the background, when an arch is
	specified, spin remaps the given arch to the highest arch in that
	arch's 'class'; 'athlon' for 'i386' and 'x86_64' for 'x86_64'. This
	is primarily for yum's benefit so that it considers all packages
	that potentially can match for a given arch when performing
	depsolving. (That is to say, any time there are multiple archs
	available for a given arch, spin will include all of them in the
	final output; this is primarily an issue with the 'kernel' and
	'glibc' packages.)

	share/spin/schemas/distro.conf/main.rng
	 * removed extra arch choices spin/event/__init__.py
	 * added ARCH_MAP, a simple dictionary mapping the supported base archs
	to the highest arch in the same arch class
	 * Event.arch is now set by mapping the arch specified in the config
	file via ARCH_MAP, above. Base arch is still computed the same
	way as before. spin/modules/core/software/pkglist.py
	 * removed special processing of arch; handled via standard Event.arch
	 * simplified PkglistEvent.verify_kernel_arch; should now be much more
	easily extensible to any other arch we may choose to support.
	spintest/runtest.py
	 * added --clear-cache option
	 * adjusted build root preservation to also respect the value of the
	   --clear-cache option
	[46059081067e]

2008-01-22  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/fileio.py:
	add_(x|f)paths now raise type errors if passed a noniterable or
	string
	[7f490eb96b04]

2008-01-23  Uday Prakash  <uprakash@renditionsoftware.com>

	* share/spin/schemas/distro.conf/sources.rng,
	spin/modules/extensions/sources.py:
	fixed a couple of bugs in the 'sources' event.

	* share/spin/schemas/distro.conf/schemas/sources.rng:
	- made the <repo/> elements <zeroOrMore/> because they can be
	specified using <repofile/> elements only.
	- SourceReposEvent.validate() makes sure that at least one <repo/>
	element or at least one <repofile/> element is there.

	* spin/modules/extensions/sources.py:
	- reading <repofile/> element and not <repofiles/> element.
	[58154c6356d4]

2008-01-23  Kay Williams  <kwilliams@renditionsoftware.com>

	* docsrc/gpgsign.rng, share/spin/schemas/distro.conf/gpgsign.rng,
	spin/modules/extensions/software/gpgsign.py,
	spintest/modules/createrepo/__init__.py,
	spintest/modules/gpgsign/__init__.py:
	gpgsign: removed 'gpg-' prefix from element names

	This commit shortens gpgsign schema element names by removing the
	'gpg-' prefix. The gpg context can be inferred from the parent
	element name 'gpgsign'. The affected elements are as follows:

	gpg-public-key -> public-key gpg-secret-key -> secret-key gpg-
	passphrase -> passphrase

	Element names were updated in five files: gpgsign module, gpgsign
	and createrepo test modules, gpgsign schema, and gpgsign schema
	documentation. The changes were tested by running a distribution
	with gpgsign elements specified and also by running runtest.py
	against both gpgsign and createrepo modules.
	[b8cc778a0ea7]

	* spin/modules/extensions/rpms/config-rpm.py:
	config-rpm: cleanup - renamed variables to match schema elements

	To make the code in config-rpm easier to follow/maintain, this
	commit changes the following variable names to match config-rpm
	schema.

	* changed 'config-files' to 'scripts'
	* changed 'supporting-files' to 'files'
	* changed 'config_count' to 'script_count'
	* changed 'support_count' to 'files_count'

	Following the changes 'runtest.py --config-rpm' completed
	successfully.
	[358507f13399]

2008-01-22  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/fileio.py, spin/modules/shared/rpms.py:
	further fix to relative path issues in fileio

	Python's os library is somewhat limited in terms of the types of
	paths it supports. Specifically, use of os.PARDIR (..) causes
	issues with functions such as os.path.exists, causing them to report
	back that the given item does not exist even when performing the
	same call on the normalized path clearly indicates that it does.
	One solution would be to automatically normalize paths as a part of
	most pps class methods; however, normpath can take a significant
	amount of time, especially when called repeatedly in the process of
	such tasks as findpaths and the like. Thus, for now at least, it is
	up to the user to ensure that all paths are normalized when
	necessary

	spin/event/fileio.py
	 * normalizes path before processing it in IOObject.add_item
	spin/modules/shared/rpms.py
	 * backed out changes of previous commit; superceded by above change
	[8c45cafef4d8]

	* spin/modules/extensions/software/gpgsign.py,
	spin/modules/shared/rpms.py:
	bug fixes to gpgsign and InputFilesMixin

	spin/modules/extensions/software/gpgsign.py
	 * fixed bug where I was trying to add each character of gpgsign-
	public-key cvar as an fpath instead of the entire fpath
	spin/modules/shared/rpms.py
	 * apparently something in our sync process doesn't like relative paths
	that contain os.PARDIR ('..'); thus, call normpath() after
	joining
	[f92fbf32e96a]

	* share/spin/schemas/distro.conf/config-rpm.rng,
	spin/event/__init__.py, spin/event/fileio.py, spin/main.py,
	spin/modules/core/compose.py, spin/modules/core/installer/pxeboot-
	images.py, spin/modules/core/installer/release-files.py,
	spin/modules/core/installer/xen-images.py,
	spin/modules/core/publish.py, spin/modules/core/rpms/custom-repo.py,
	spin/modules/core/rpms/release-rpm.py,
	spin/modules/core/software/comps.py,
	spin/modules/core/software/createrepo.py,
	spin/modules/core/software/download.py,
	spin/modules/core/software/gpgcheck.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/core/sourcevars.py, spin/modules/extensions/files.py,
	spin/modules/extensions/installer/kickstart.py,
	spin/modules/extensions/iso.py, spin/modules/extensions/rpms/config-
	rpm.py, spin/modules/extensions/software/gpgsign.py,
	spin/modules/extensions/sources.py,
	spin/modules/shared/installer.py, spin/modules/shared/repos.py,
	spin/modules/shared/rpms.py:
	bug 147: allow file renaming using path elements

	Added the ability to rename files using <path> style elements and
	their derivatives. Such elements now support a 'filename'
	attribute, which is combined with the 'dest' attribut to form the
	full file name of the destination file.

	event.fileio was essentially rewritten in a large part in an attempt
	to make things a little bit cleaner and simpler. The API is mostly
	the same; the only difference comes in adding files to by synced.
	Instead of the single method setup_sync, there are now two methods,
	add_xpath and add_fpath, the first corresponding to xpath queries in
	the config file and the second to paths on disk or on the web.
	(There are also two convenience methods, add_xpaths and add_fpaths,
	which can be used to add a list of xpaths or fpaths one at a time).
	These are in turn front ends for the 'real' method, add_item, which
	takes a source and destination file ad adds it to the list of
	potential sync targets.

	share/spin/schemas/distro.conf/config-rpm.rng
	 * added optional filename attribute to 'script' elements (this stuff
	should really be handled via a lib item now that it is somewhat
	prevalent) spin/event/__init__.py
	 * added dummy link arguments to Event.copy and Event.link; these don't
	actually do anything, but they make the signature for cache, copy,
	and link identical (helpful in fileio.py, below)
	spin/event/fileio.py
	 * major rewrite, see summary above for overview
	 * removed IOObject.setup_sync
	 * added IOObject.add_xpath, IOObject.add_xpaths for adding <path>
	elements by specifying an xpath query to them in the config file
	 * added IOObject.add_fpath, IOObject.add_fpaths for adding existing
	files on the local filesytem or in a remote web location (any
	path supported by pps)
	 * added IOObject.add_item, the back end to each of the above methods.
	Takes a single src, dst pair, along with an optional id, mode,
	and/or prefix, and adds the information to the list of potential
	sync targets
	 * cleaned up IOObject.sync_input significantly; sync method and
	callback are determined in the same place; actual sync logic is
	greatly simplified
	 * removed IOObject.sync_items, IOObject.chmod_items
	 * cleaned up IOObject.clean_eventcache somewhat; used to be performing
	findpaths on all listed outputs, which not only took significant
	amounts of time, but also allowed unexpected outputs to remain; I
	would like to fix this up even more, but can't afford the time at
	the moment
	 * added IOObject._filter_data, a common method for processing 'what'
	arguments
	 * added IOObject._process_path_xml, a common method for processing
	<path> elements and their derivatives
	 * added TransactionData, a simple struct to keep track of source,
	destination, and mode for a transaction item (file)
	spin/modules/*
	 * all former calls to Event.io.setup_sync are now transformed to their
	appropriate counterpart, whether it be Event.io.add_fpath(s) or
	Event.io.add_xpath(s)
	 * several modules had these sections optimized somewhat
	spin/modules/core/rpms/custom-repo.py
	 * added a mkdir on Event.auto_script.dirname prior to attempting to
	write script lines to it spin/modules/shared/rpms.py
	 * now makes use of Event.io._process_path_xml instead of separately
	handling <path> elements
	[8dfec138883c]

2008-01-21  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/release-rpm.py:
	release-rpm: raising exception if eula.py is not found
	[79a76aea576f]

2008-01-21  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/software/comps.py:
	comps: correctly handling conditional variables

	The comps event has a conditional requirement on 'included-packages'
	and 'excluded-packages' cvars which are provided by the custom-repo
	module. This commit modifies the comps event to create the variables
	if they do not exist (i.e. the custom-repo module is disabled),
	initializing them to empty lists.
	[ad9deac2aa54]

2008-01-21  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/idepsolver.py:
	pkglist: returnNewestByName() returns list of lists for some yum
	versions

	* spin/modules/shared/idepsolver.py:
	- ListPackageSack.returnNewestByName() returns a list of lists of
	package objects for yum versions <= 3.0.1 (around there). Made
	changes to flatten this into a single list and use that.
	[e63f971f6752]

2008-01-18  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py, spintest/modules/config-rpm.py,
	spintest/modules/release-rpm.py:
	rpms: not creating README files; fixed rpms test cases

	* spin/modules/shared/rpms.py:
	- now that the rendition-common rpmbuild module doesn't delete the
	RPM_BUILD_ROOT folder before building the RPM, the README file is
	not needed anymore. Therefore, it's not being created.

	* spintest/modules/{config-rpm,release-rpm}.py:
	- fixed test cases for input files
	[542726bd0831]

	* spintest/modules/config-rpm.py:
	config-rpm test: uncommented all test cases
	[bc1b2f51676e]

	* spintest/modules/config-rpm.py, spintest/rpms.py:
	config-rpm test: fixed InputFilesMixinTestCase

	* spintest/modules/config-rpm.py:
	- creating temporary input files and scripts that are to be used as
	input by the config-rpm event

	* spintest/rpms.py:
	- the InputFilesMixinTestCase.check_inputs() method looks to see if
	the input file is correctly sync'd to the expected location and that
	the RPM installs the file to the correct location.
	[19e2bf5043f2]

	* spin/modules/shared/rpms.py, spintest/rpms.py:
	InputFilesMixin maintains a list of IDs that is used during testing

	* spin/modules/shared/rpms.py:
	- InputFilesMixin.ids is a set of IDs assigned to the various input
	files

	* spintest/rpms.py:
	- the InputFilesMixinTestCase iterates over Event.ids (which is
	present iff the Event class extends InputFilesMixin) to check for
	the existence of the input files.
	[8ec79d8f3ef0]

	* spintest/rpms.py:
	LocalFilesMixinTestCase not required anymore
	[107aaa41e02c]

	* spin/modules/shared/idepsolver.py:
	idepsolver: fixed pretty major bug in IDepsolver.whatRequires

	* spin/modules/shared/idepsolver.py:
	- the goal of IDepsolver.whatRequires() was to take in a package tuple
	and return a list of package tuples that require the input package
	tuple. What was happening was that for all package tuples that
	require the input package tuple, the input package tuple was being
	inserted into the list to be returned by this method call. In
	effect, this was causing most of the packages to be removed from the
	data structure.
	- IDepsolver.whatRequires(), IDepsolver.removePackages() and
	IDepsolver.getDeps() were taking in a list of package tuples or a
	list of package objects. Following the KISS methodology, changing it
	to be either *exactly one* package tuple or *exactly one* package
	object.
	[e36fff3da9e3]

	* spin/modules/shared/rpms.py:
	rpms: setting ImagesCreator.base_image to None
	[6b48a89a2643]

	* spin/modules/shared/__init__.py:
	importing idepsolver in shared/__init__.py
	[6bec7d605fcc]

	* spin/modules/shared/idepsolver.py:
	idepsolver: IDepsolver.getPackageObjects() returns stuff

	* spin/modules/shared/idepsolver.py:
	- the IDepsolver.getPackageObjects() method call was populating
	IDepsolver.polist but not returning anything, now it returns
	IDepsolver.polist
	- the idepsolver.resolve() function uses the returned value from
	IDepsolver.getPackageObjects() to compute the list of package tuples
	to return.
	[4377a02fa084]

	* spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolve.py, spin/modules/shared/idepsolver.py:
	renamed idepsolve.py to idepsolver.py
	[5bdeb2245269]

	* spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolve.py:
	pkglist: added INCREMENTAL_DEPSOLVE global flag

	* spin/modules/shared/idepsolve.py:
	- if INCREMENTAL_DEPSOLVE is True, run depsolver.resolve() to resolve
	deps
	- else if it is False, run idepsolve.resolve() to resolve deps

	* spin/modules/shared/idepsolve.py:
	- will get renamed to idepsolver.py in the next commit
	- added resolve() function that takes in a list of package to add, a
	list of required packages, a list of packages to remove, the .repo
	file, the root dir, the arch, and callback and then incrementally
	depsolves the packages removing the ones no longer needed.
	[38b51ca106a3]

2008-01-18  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spin/event/fileio.py:
	added a missing conversion from string to Path object
	[a0033a711364]

	* share/spin/schemas/distro.conf/config-rpm.rng,
	share/spin/schemas/distro.conf/lib.rng, spin/event/__init__.py,
	spin/event/fileio.py, spin/modules/core/publish.py,
	spin/modules/shared/rpms.py, spintest/rpms.py:
	added 'filename' attribute to paths, allowing files to be renamed

	Occasionally, the user may have some sort of hidden file (.bashrc,
	for example) they wish to install in their custom distribution.
	However, since most shells hide dot files, it is desirable that they
	be named something different in the source tree. With this change,
	source files can be renamed upon copying with spin, meaning that a
	file named 'bashrc' can become '.bashrc' in the distribution.

	share/spin/schemas/distro.conf/config-rpm.rng
	 * added optional 'filename' attribute to 'file'
	share/spin/schemas/distro.conf/lib.rng
	 * added optional 'filename' attribute to 'element-path-with-dest'
	spin/event/__init__.py
	 * adjusted behavior of Event.copy and Event.link; instead of assuming
	that dst is a directory, dst can now be a directory or file.
	spin/event/fileio.py
	 * path elements are now examined for a 'filename' attribute, which
	controls the basename of the file after copying. If this
	attribute is not provided, it defaults to the basename of the
	source file
	 * changed signature of IOObject._setup_sync to (sourcefile, dstdir,
	filename, id, defmode) spin/modules/core/publish.py
	 * publish was erroneously calling Event.link(src, dst) when dst did
	not exist, causing published files to end up in the wrong place
	and ultimately to be removed. Publish now creates dst before
	linking files spin/modules/shared/rpms.py
	 * implemented a similar processing for 'file' elements in
	InputFilesMixin to the changes above in fileio.py
	spintest/rpms.py
	 * fixed two bugs in InputFilesMixinTestCase
	[b606f605535e]

2008-01-18  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py:
	logos-rpm,theme-rpm: creating in-memory image in run() and not
	setup()

	* spin/modules/shared/rpms.py:
	- the base image is created only if run() is called and therefore in
	cases where the event doesn't need to be run, time is not spent
	creating the base image.
	[80aa02e03763]

2008-01-18  Kay Williams  <kwilliams@renditionsoftware.com>

	* share/spin/schemas/distro.conf/release-rpm.rng,
	spin/modules/core/rpms/release-rpm.py:
	release-rpm: added 'include-input' feature to yum-repos

	This commit adds a new attribute, 'include-input' to the yum-repos
	element of release-rpm. This attribute takes a boolean value, and
	the default value is true. When true, the release-rpm event
	includes sections for each input repository (e.g. centos 5 base,
	centos 8 updates, etc) in the [product].repo it generates.

	share/spin/schemas/distro.conf/release-rpm.rng
	* added include-input attribute

	spin/modules/core/rpms/release-rpm.py
	* init: (misc cleanup) removed gpgsign-public-key from diff variables
	data. It is not needed since the actual public-key is included in
	input data
	* setup: (misc cleanup) don't include input repo gpgkeys if gpgsign
	key is available. Note the key will only be available if gpgsign is
	enabled.
	* setup: add cvar['repos'] to diff variable data if the yum-repos
	include-input attribute is true.
	* run: add content from cvars['repos'] to generated yum repo file if
	include-input attribute is true.
	[76d97d13ef41]

	* spin/modules/core/software/pkglist.py:
	pkglist: minor change to yumconf creation

	Using splitlines rather than split('/n') to prevent multiple blank
	lines between sections
	[c9bf41d681fb]

	* share/spin/schemas/distro.conf/release-rpm.rng,
	spin/modules/core/rpms/release-rpm.py:
	release-rpm: yum-repos attribute 'create-base' -> 'include-distro'

	Name change for parity with upcoming 'include-input' attribute.
	[eafea5f7abdc]

2008-01-17  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/main.py, spin/modules/core/software/pkglist.py:
	pkglist: moved yumarch from Build to PkglistEvent

	The Event.yumarch variable was being used by pkglist only; it didn't
	make sense for the variable to be defined in main.py. Therefore,
	moved it to be defined in pkglist.py.
	[019dd565054f]

	* spin/modules/core/software/pkglist.py:
	pkglist: added hack for 'i386' in verify_kernel_arch()

	* spin/modules/core/software/pkglist.py:
	- if arch in config file is 'i386', the kernel package can have any of
	the architectures supported by 'athlon'.
	[bfb047f119f3]

	* spin/main.py, spin/modules/core/software/pkglist.py:
	maintaining two different arch-related variables

	* spin/main.py:
	- if the user specifies 'i386' as the arch in the distro definition,
	the 'yumarch' base variable is 'athlon', else it is exactly what the
	user specified.
	- the 'arch' base variable is exactly what the user specified

	* spin/modules/core/software/pkglist.py:
	- to perform dependency-solving, the yumarch base variable is used as
	the desired architecture
	- the verify_kernel_arch() method if the kernel package's architecture
	doesn't match the desired architecture (specified in the 'arch' base
	variable) a warning is printed.
	[6ad3bd4ee766]

	* spin/main.py:
	if i386 specified as arch, translate it to athlon
	[7e04dd17551d]

	* share/spin/schemas/distro.conf/main.rng:
	main.rng: modified allowed architectures list

	* share/spin/schemas/distro.conf/main.rng:
	- allowed archs: i386, i486, i586, i686, athlon and x86_64
	- if i386 is specified, it will get mapped to athlon
	[6312b90c12fe]

	* spintest/modules/pkglist/__init__.py:
	spintest/pkglist: fixed pkglist test case for bug 108

	* spintest/modules/pkglist/__init__.py:
	- the centos-5 base repository used to have the 'gaim' package and the
	test suite for bug 108 used to assume that. This test suite has been
	changed so that the config file's comps section adds the 'gaim'
	package to the core group and the test case makes sure that either
	'pidgin' or 'libpurple' are brought down because of it.
	[6481756b82fd]

	* spin/modules/shared/idepsolve.py:
	idepsolve: fixed "gaim"-bug

	* spin/modules/shared/idepsolve.py:
	- if a package that's required is no longer there in the repository
	because it is obsoleted/replaced by another package (usually seen
	in the case of requiring "gaim" which has been replaced by "pidgin"
	due to various licensing issues), then idepsolve would fail saying
	the package is not provided by anything. Fixed.
	[bbcea81885be]

2008-01-17  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/event/__init__.py:
	event: clean now called before setup

	Previously event processing followed this general path: setup, clean
	(if forced), check, run, apply. This ordering caused trouble in
	cases where setup was attempting to read data from an invalid
	metadata file. This commit ensures that if an event is forced, clean
	will be called prior to setup.
	[09b24e3e3875]

	* spin/splittree.py:
	splittree: correctly handle text (ie. cd, dvd) set sizes

	This commit allows users to provide text ('cd', 'dvd') for iso-set
	sizes in any combination of upper and lower case. The fix is to
	convert the user provided string to upper case, and deal with it as
	such thereafter.
	[d846179a440f]

	* share/spin/static/baseimage.png, spin/main.py,
	spin/modules/core/autoclean.py, spin/modules/core/compose.py,
	spin/modules/core/init.py, spin/modules/core/installer/__init__.py,
	spin/modules/core/publish.py,
	spin/modules/core/software/__init__.py,
	spin/modules/extensions/files.py, spin/modules/extensions/iso.py,
	spin/modules/extensions/sources.py, spintest/modules/ALL.py,
	spintest/modules/all.py, spintest/modules/init.py,
	spintest/modules/iso.py:
	general: ALL and OS events are now lower case, removed ISO meta
	event

	This is a misc cleanup/consistency/usability commit. The main
	thinking is that since forcing all is somewhat common, to make it
	friendlier by not requiring uppercase.

	* Renamed the 'ALL' meta event to 'all'
	* Renamed the 'ALL' fake module to 'all'
	* Renamed the 'OS' meta event to 'os'
	* Removed the 'ISO' meta event; pkgorder and iso are now children of
	'all'
	* Made changes necessary to reflect these changes in misc spin and
	test modules.
	[02c03aaef8a1]

2008-01-17  Uday Prakash  <uprakash@renditionsoftware.com>

	* spintest/rpms.py:
	spintest/rpms: changed variable name to reflect changes in
	InputFilesMixin

	* spintest/rpms.py:
	- had renamed 'installinfo' to 'install_info' in InputFilesMixin and
	forgot to update the InputFilesMixinTestCase to reflect this change.
	[caff413f725d]

2008-01-17  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/config.py, spintest/modules/comps/__init__.py,
	spintest/modules/gpgcheck.py:
	fixed distro-specific gpgkey checking

	spintest/config.py
	 * added 'gpgkey' elements for each REPO definition
	spintest/modules/comps/__init__.py
	 * removed debug print statement spintest/modules/gpgcheck.py
	 * _make_conf now makes use of the new gpgkey information included in
	config.py. In the case when keys are not used, the 'gpgkey' field
	is set to '', which has the effect desired (specifically,
	providing no keys while gpgcheck is enabled)
	[367234a708b2]

2008-01-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/rpms/release-rpm.py, spin/modules/extensions/rpms
	/config-rpm.py, spin/modules/shared/rpms.py:
	rpms: code cleanup

	* spin/modules/shared/rpms.py:
	- InputFilesMixin's __init__() method takes in a required install_info
	parameter instead of assuming that its children classes will define
	it.

	* spin/modules/core/rpms/release-rpm.py:
	- passing install_info to InputFilesMixin

	* spin/modules/extensions/rpms/config-rpm.py:
	- likewise
	[68d9aae23f56]

	* spin/modules/core/rpms/release-rpm.py, spin/modules/extensions/rpms
	/config-rpm.py, spin/modules/shared/rpms.py:
	config-rpm, release-rpm: made Event.installinfo values 4-tuples

	* spin/modules/core/rpms/release-rpm.py:
	- the fourth element of installinfo values is always set to True

	* spin/modules/extensions/rpms/config-rpm.py:
	- the fourth element of installinfo values for scripts is set to True
	- the fourth element of installinfo values for files is set to False
	[852d350832d4]

	* share/spin/schemas/distro.conf/config-rpm.rng,
	spin/modules/extensions/rpms/config-rpm.py,
	spin/modules/shared/rpms.py:
	config-rpm: completed Bug 148.

	* share/spin/schemas/distro.conf/config-rpm.rng:
	- removed definition of 'noreplace' attribute from <files/> elements;
	they aren't needed anymore

	* spin/modules/extensions/rpms/config-rpm.py:
	- if a file element has a 'dest' attribute, then: o after the
	installation of the config RPM, the file is moved from
	/usr/share/<product>/files to the directory specified in
	'dest'. If there is a file in the destination directory of the
	same name as the file being installed, it is renamed with a
	'.config-save' suffix. o after the uninstallation of the config
	RPM, the <file>.config-save file is renamed to <file>
	- if a file element doesn't have a dest attribute, it is installed to
	/usr/share/<product>/files

	* spin/modules/shared/rpms.py:
	- added placeholder methods for specifying prep, build, pre-install,
	post-install, pre-uninstall, post-uninstall, clean, and verify
	scripts
	- The value of Event.installinfo (if extending InputFilesMixin) should
	be a 4-tuple with the fourth element being a boolean. If False, the
	value specified in the 'dest' attribute of the element is always
	treated as a relative path, i.e. if it has a leading slash, that is
	removed.
	[35e2725f261c]

2008-01-16  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/__init__.py, spintest/config.py, spintest/core.py,
	spintest/mixins.py, spintest/modules/ALL.py,
	spintest/modules/autoclean.py, spintest/modules/bootiso.py,
	spintest/modules/compose.py, spintest/modules/comps/__init__.py,
	spintest/modules/config-rpm.py,
	spintest/modules/createrepo/__init__.py, spintest/modules/custom-
	repo.py, spintest/modules/diskboot-image.py,
	spintest/modules/download/__init__.py, spintest/modules/files.py,
	spintest/modules/gpgcheck.py, spintest/modules/gpgsign/__init__.py,
	spintest/modules/infofiles.py, spintest/modules/init.py,
	spintest/modules/initrd-image.py, spintest/modules/installer.py,
	spintest/modules/iso.py, spintest/modules/isolinux.py,
	spintest/modules/kickstart.py, spintest/modules/logos-rpm.py,
	spintest/modules/logos.py, spintest/modules/pkglist/__init__.py,
	spintest/modules/product-image.py, spintest/modules/publish.py,
	spintest/modules/pxeboot-images.py, spintest/modules/release-
	files.py, spintest/modules/release-rpm.py,
	spintest/modules/repos.py, spintest/modules/rpms.py,
	spintest/modules/software.py, spintest/modules/sources.py,
	spintest/modules/sourcevars.py, spintest/modules/stage2-images.py,
	spintest/modules/theme-rpm.py, spintest/modules/updates-image.py,
	spintest/runtest.py:
	spintest made base distro and arch aware

	spintest formerly assumed that tests would always build fedora-6
	builds of the i386 architecture. This commit makes all portions of
	the testing process both fully base distro and architecture aware.
	A '-a,--base-arch' command line option was added.

	spintest/__init__.py
	 * EventTestCase.__init__ signature changed to EventTestCase.__init__(
	basedistro, arch, conf)
	 * make_suite signature changed to make_suite(basedistro, arch)
	spintest/config.py
	 * make_main signature changed to make_main(eventid, arch)
	 * make_default_config signature changed to
	make_default_config(eventid, basedistro, arch) spintest/core.py
	 * make_core_suite signature changed to make_core_suite(basedistro,
	arch, conf)
	 * make_extension_suite signature changed to
	make_extension_suite(basedistro, arch, conf) spintest/mixins.py
	 * fdm_make_suite signature changed to fdm_make_suite(basedistro, arch,
	conf)
	 * imm_make_suite signature changed to imm_make_suite(basedistro, arch,
	conf) spintest/modules/*.py
	 * all modules' make_suite functions changed to accomodate new method
	signatures
	 * when necessary, modules were made base distro and arch aware
	[8e73548b9a19]

2008-01-16  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py:
	print warning if kernel's arch doesn't match arch in distro file

	* spin/modules/core/software/pkglist.py:
	- if the arch specified in the config file isn't completely compatible
	with the arch of the package in the pkglist file print a warning
	message. For example, if the arch specified in the config file is
	'x86_64' and the pkglist brings down kernel package with
	arch='i686', then a warning is printed.
	[5acd7f3ef969]

	* spin/modules/core/software/comps.py:
	moved KERNELS constant from comps.py to constants.py
	[086153fd47db]

	* spin/modules/core/rpms/release-rpm.py:
	release-rpm: adding cvars['release-versions'] to
	self.DATA['variables']

	* spin/modules/core/rpms/release-rpm.py:
	- similar to logos-rpm.py commit
	- need to force release-rpm event if release RPMs in the input
	repositories have changed.
	[90382cc662d5]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: added 'logos-versions' cvar to self.DATA['variables']

	* spin/modules/core/rpms/logos-rpm.py:
	- the custom logos RPM obsoletes all the logos RPMs available in input
	repositories. The list of logos RPMs available is computed and added
	to the cvars dictionary with key = 'logos-versions'. If this cvar
	changes, the logos-rpm event should run again because this cvar is
	going to change iff the logos RPMs in the input repositories have
	changed.
	[837798789aec]

	* spin/modules/shared/idepsolve.py:
	modified error message in the case of a missing required package
	[a11beb7b559d]

	* spin/modules/shared/idepsolve.py:
	idepsolve: using cPickle instead of xmllib.serialize

	* spin/modules/shared/idepsolve.py:
	- using the cPickle module instead of xmllib.serialize for better
	speed
	- removed unused NVRA_REGEX variable
	[737ad33c0748]

	* spin/modules/core/installer/infofiles.py,
	spin/modules/core/software/gpgcheck.py:
	bumped version number of 'buildstamp' and 'gpgcheck'

	* spin/modules/core/installer/{infofiles,gpgcheck}.py:
	- the serialization and deserialization of dictionary objects has been
	changed. Previously, the keys were hardcoded to be strings only
	which has been changed so that keys can be any data type supported
	by xmllib.serialize. Therefore, events saving out dictionaries to
	their metadata files need to be forced to run again because
	otherwise the reading of the metadata files is going to fail.
	[085c9f666cc1]

	* spin/callback.py:
	callback: whitespace cleanup
	[7b3ebdac91d8]

2008-01-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/callback.py:
	callback: removed extra, unrequired methods
	[c78c1325bcea]

	* spintest/config.py:
	an XmlTreeElement with no children evaluates to None; fixed.

	* spintest/config.py:
	- because an XmlTreeElement without any children evaluates to None,
	"if repo is None" was evaluation to None for <repofile/> elements
	because all they had were text. Fixed.
	[b3564c47eea4]

	* spin/modules/core/software/download.py,
	spin/modules/core/software/pkglist.py,
	spin/modules/shared/idepsolve.py,
	spintest/modules/pkglist/__init__.py:
	pkglist: got incremental dependency-solving working again

	* spin/modules/shared/idepsolve.py
	- the IDepsolver class enables incremental dependency-solving
	- the IDepsolver.resolved_deps (present in Depsolver object) is saved
	to an XML-styled cache file that maps a package's package tuple to a
	list of package tuples representing the package's requirements.
	- in IDepsolver.setup(), the previously-saved file is read in and
	package objects corresponding to the package tuples are found (if
	still present)
	- all this information is then used to see if the package "installed"
	the previous time pkglist ran is still the "best" one. If it is
	nothing is done. If it isn't the previously-installed package is
	"uninstalled" and the new package replaces it.

	* spin/modules/core/software/pkglist.py:
	- the pkglist event now saves the architecture in the pkglist file

	* spin/modules/core/software/download.py:
	- modified the code where the pkglist file is read because the arch is
	now saved.

	* spintest/modules/pkglist/__init__.py:
	- fixed test cases to reflect changes to pkglist file generated
	(inclusion of architecture)
	[ebbd3c39f5fd]

2008-01-15  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/config.py, spintest/modules/download/__init__.py,
	spintest/modules/sources.py:
	miscellaneous arch related fixes to test cases

	spintest/config.py
	 * _make_repo now accepts an arch argument which defaults to 'i386' if
	not specified; this arch is used as the replacement value in the
	repos it creates
	 * all repos in the REPOS data structure now contain '%(arch)s'
	replacements instead of the formerly-assumed 'i386'
	spintest/modules/download/__init__.py
	 * fixed missing list elements to make_repos
	spintest/modules/sources.py
	 * added repo definition for redhat source rpms
	[7c49d56b326b]

	* spintest/modules/download/__init__.py:
	syntax error
	[b38030ecbdde]

	* spintest/config.py, spintest/modules/download/__init__.py:
	different approach to missing repo definition problem; as it seems
	to be widespread
	[bc3ffd722220]

	* spintest/modules/download/__init__.py:
	fixed another syntax error
	[10cfb695b4c2]

	* spintest/modules/download/__init__.py:
	fixed syntax error
	[5978b76a740e]

2008-01-15  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/core/software/pkglist.py:
	pkglist: not using incremental-depsolving temporarily

	* spin/modules/core/software/pkglist.py:
	- the pkglist event doesn't use incremental dependency-solving
	- I will continue to work on getting incremental dependency-solving to
	work out; this is just a commit so that pkglist isn't blocking
	anything.
	[5ec45401f01f]

2008-01-15  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/__init__.py:
	test log file contains all output, regardless of threshold
	[31952d5a9ff0]

	* spintest/__init__.py, spintest/modules/download/__init__.py:
	fixed download test cases so they work on redhat 5
	[7028209cbd10]

	* spin/main.py, spin/splittree.py, spintest/modules/iso.py:
	bug 140: integration of si module

	Unified the processing of sizes in cache and iso creation. User
	strings are now parsed by the new 'si' module in rendition-common.
	These fields accept file sizes, in bytes. For convienence, usage of
	ordinal prefixes like kilo, mega, and giga are supported; they are
	indicated by their first character, 'k' or 'kb' for kilobyte, 'm' or
	'mb' for megabyte, etc. This field is case and space-insensitive.
	Thus, to indicate a cache size of 5 gigabytes, the user could write
	'5GB', '5.0 gb', '5g', etc. For further details, see si.py in
	rendition-common.

	spin/main.py
	 * now uses si to parse cache max size instead of computing value
	directly spin/splittree.py
	 * now uses si to parse disc sizes instead of computing value directly
	 * removed SIZE_REGEX and ORDINALS
	 * minimum disc size changed from 100 MB (100000000 bytes) to 100 MiB
	(104857600 bytes) spintest/modules/iso.py
	 * now compares parse_size calls to si.parse calls
	 * changed Test_IsoContent._config to test a set of 101 MiB in size as
	opposed to 101 MB
	[7f25b63ad56b]

2008-01-14  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/modules/shared/rpms.py:
	rpms: added support for including ghost files in RPMs

	* spin/modules/shared/rpms.py:
	- if an RPM wants to mark some file(s) as ghost, the RPM Event class
	can override the RpmBuildMixin._get_ghost_files() method and return
	a list of ghost files.
	[e3035b204f0a]

2008-01-14  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/scripts/master-test.sh, spintest/scripts/slave-test.sh:
	removed unnecessary script folders

	The contents of these scripts have been moved to the distro-conf
	repository
	[d4f2f2025f5a]

	* spin/main.py, spin/modules/core/init.py, spintest/scripts/master-
	test.sh, spintest/scripts/slave-test.sh:
	bug 141 - temp directory creation/deletion

	Log message for temp dir creation is now moved from log level 2 to
	level 4. Temp directory should be deleted upon completion of a
	successful run of spin.

	spin/main.py
	 * temporary directory removed when spin terminates
	 * added DEFAULT_*_DIR variables at the top of the file
	spin/modules/core/init.py
	 * moved deafult log level for mddir and temp dir creation from 2 to 4
	spintest/scripts/master-test.sh
	 * updated ssh logic slightly spintest/scripts/slave-test.sh
	 * added a minor logging message to help differentiate between tests
	[f47bed8e4ce2]

2008-01-11  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/publish.py:
	publish: workaround to get incremental sync working for publish

	Most events deal with output cleanup via the FileIO.clean_eventcache
	method. This method is not sufficient for the publish event,
	however, since it stores content outside of its metadata folder. To
	deal with this, publish had been deleting all files in the publish
	folder prior to hard linking updated content. In typical machine
	configurations where the cache and the publish folder are on the
	same partition, this can be accomplished with minimal performance
	overhead. When cache and publish folder are on separate partitions,
	however sync copies the files rather than linking them.

	The best fix for this issue would be to extend
	FileIO.clean_eventcache and the difftest output handler support
	cleanup of output files outside the metadata folder. This involves
	some fairly deep infrastructure work as well as changes to many
	events.

	This commit is a workaround that cobbles together strict syncing
	with some manual cleanup activities to accomplish similar yet
	incomplete results. The case that this workaround does not address
	is cleaning up extraneous file in the publish dir during sessions
	when the publish event does not run. This is not a huge issue, but
	it is an inconsistency between publish and other events.
	[295b929e250b]

2008-01-10  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* spintest/__init__.py, spintest/modules/download/__init__.py,
	spintest/modules/pkglist/__init__.py, spintest/runtest.py,
	spintest/scripts/master-test.sh, spintest/scripts/slave-test.sh:
	updated testing tools for automation

	spintest/__init__.py
	 * adjusted log levels; progressive output is now at log level 2, while
	summary remains at 1. Log level 0 displays no text at all
	 * added _run_make, a simple function that takes in a single directory
	as and argument and runs the 'make' binary on it. This is
	intended currently for use in event test cases that use the faux
	repos as basic input for their specialized needs (download and
	pkglist, currently) spintest/modules/download/__init__.py
	 * now calls _run_make() inside of make_suite() to ensure that the
	appropriate repositories have been created
	spintest/modules/pkglist/__init__.py
	 * now calls _run_make() inside of make_suite() to ensure that the
	appropriate repositories have been created spintest/runtest.py
	 * added -l, --log-level option, which allows you to specify an integer
	that controls the level of verbosity of log output. Meaningful
	values currently are 0 (no output whatsoever), 1 (summary output
	only - number of tests run, time taken to execute, and
	error/failure tracebacks), and 2 (full output)
	 * tests that complete with no errors or failures now return status
	code 0; those that have one or more errors or failures now return
	status code 1; it is intended that miscellaneous test-related
	exceptions will result in a status code return of 2.
	spintest/scripts/master-test.sh
	 * initial commit of the cron script that will run one test suite per
	day on the slave machines, choosing the test to run based on the
	day of the year
	 * in theory, the output of the test script will be captured by cron
	and mailed to the test administrator spintest/scripts/slave-
	test.sh
	 * initial commit of the script that will be run by master-test.sh,
	above, on the slave machines themselves. This script is
	responsible for setting up the environment, checking out the
	sources, and running the actual tests
	[7e1a49612d35]

2008-01-10  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/xen-images.py:
	initrd-image/xen-images: conditionally add kickstart-file to input

	The previous commit added the value of kickstart-file cvar to
	difftest input in all cases. This was causing a failure in the case
	when no kickstart file was provided. This commit modifies the
	events to add the kickstart-file cvar as input only if its value
	evaluates to true.
	[c3ee3d5093a8]

2008-01-09  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/core/installer/initrd-image.py,
	spin/modules/core/installer/xen-images.py:
	initrd-image/xen-images: events run when kickstart contents change

	The initrd-image and xen-images events were not running when the
	contents of the kickstart file changed. This was because the
	kickstart-file cvar was listed under 'variables' in the difftest
	data, not under 'input'. Fixed by this commit.
	[f6f1dcf4e075]

2008-01-09  Uday Prakash  <uprakash@renditionsoftware.com>

	* spintest/modules/download/__init__.py:
	spintest: 'make' does something only if .repo files have changed

	* spintest/modules/{download,pkglist}/Makefile:
	- running make multiple times will cause make to run only the first
	time, unless the .repo files have changed in between make calls.
	[db1271f4b50a]

	* spin/modules/core/rpms/logos-rpm.py:
	logos-rpm: using shlib instead of execlib.

	* spin/modules/core/rpms/logos-rpm.py:
	- if the 'convert' executable is missing, execlib.execute() takes a
	long time to terminate, whereas shlib.execute() terminates and fails
	right away.
	[eef2dad1c34a]

2008-01-08  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals.py, spin/modules/core/rpms/logos-rpm.py,
	spin/modules/core/rpms/theme-rpm.py, spin/modules/shared/rpms.py:
	rpms: added support for static images besides 'baseimage.jpg'

	* spin/modules/shared/rpms.py:
	- if an image's locals information specifies a 'base_image' (which
	defaults to 'baseimage.png'), that image is used and its hue altered
	as required.
	- renamed ImagesCreator to ImagesGenerator

	* spin/modules/core/rpms/{theme-rpm,logos-rpm}.py:
	- using ImagesCreator instead of ImagesGenerator

	* spin/locals.py:
	- the innerbackground.png's locals specify <share
	folder>/innerbackground.png as starting image.
	[316e417c5c34]

	* share/spin/static/baseimage.png,
	share/spin/static/innerbackground.png:
	shared: converted jpgs to pngs so that alpha-levels can be used
	[e09204d33d16]

	* spin/modules/core/rpms/logos-rpm.py, spin/modules/core/rpms/theme-
	rpm.py:
	logos-rpm, theme-rpm: bumped versions to force them to run
	[f648df154865]

	* spin/locals.py, spin/modules/core/rpms/theme-rpm.py:
	logos-rpm: added 'strings' variable to locals as required
	[97e21acfcd4e]

	* spin/modules/shared/rpms.py:
	if the input distro is a bugfix release, use hue of the main release

	* spin/modules/shared/rpms.py:
	- if the input distro is a minor version increment of a distribution
	whose hue we know of, then use that hue. For example, CentOS 5.1 is
	going to use CentOS 5's hue.
	[524f72abca8d]

	* spin/modules/shared/rpms.py:
	rpms: if a distro is not found in HUE_DIFF, use default colors

	* spin/modules/shared/rpms.py:
	- there was a bug in ImagesCreator -- if the distro's full name and
	version was not found in HUE_DIFF (i.e. a KeyError was raised), we
	should use HUE_DIFF['*']['0'], but we were using
	HUE_DIFF[fullname][version] which would, in effect, re-raise the
	KeyError.
	[ddb489608bd3]

2008-01-07  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals.py:
	theme-rpm locals: fixed directory name
	[2556cf29b893]

	* spin/modules/shared/rpms.py:
	rpms: added hue difference information about different distributions
	[5192217ef52e]

2008-01-04  Uday Prakash  <uprakash@renditionsoftware.com>

	* spin/locals.py:
	logos-rpm locals: renamed FedoraInfinity to Spin
	[bf532f3a6c4b]

	* spin/event/locals.py, spin/locals.py, spin/modules/core/rpms/logos-
	rpm.py, spin/modules/core/rpms/theme-rpm.py,
	spin/modules/shared/rpms.py:
	theme-rpm and logos-rpm: creating images from scratch

	* spin/modules/shared/rpms.py:
	- added ImagesCreator class that is inherited by LogosRpmEvent and
	ThemeRpmEvent.
	- the ImageCreator class allows for images to be created from scratch
	instead of copying the ones in generic-logos.
	- the images have a vertical gradient using the colors specified in
	the distribution's RHGB package
	- in addition to the gradient, there is trapezoidal structure at the
	bottom of the images; this part requires some more work, the lines
	of the trapezoid look ugly.
	- there is text on the images based on the locals dictionary.

	* spin/locals.py:
	- added locals information for theme and logos RPMs

	* spin/event/locals.py:
	- added locals properties for theme and logos RPMs

	* spin/modules/core/rpms/{logos-rpm.py,theme-rpm.py}:
	- using ImagesCreator
	[c7951935baf4]

2008-01-07  Kay Williams  <kwilliams@renditionsoftware.com>

	* spin/modules/extensions/installer/kickstart.py:
	kickstart: bumped version number

	Needed to force existing distros with unchanged kickstarts to run.
	Related to changeset 826
	[3d9786696d56]

2008-01-04  Kay Williams  <kwilliams@renditionsoftware.com>

	* spintest/runtest.py:
	spintest: runtest.py can now be run directly from command line

	added '#! /usr/bin/python' at top of file
	[9b5b6aa6bc24]

	* spintest/modules/kickstart.py:
	spintest: added kickstart test module
	[34e345b543ef]

	* spin/modules/extensions/installer/kickstart.py:
	kickstart: changed output location to SOFTWARE_STORE from mddir

	This makes it easier to locate and reference the kickstart when
	doing network-based (nfs, url) installations.
	[5d454ce11921]

2008-01-03  Uday Prakash  <uprakash@abodiosoftware.com>

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: cleanup of triggerin and triggerun scriptlets

	* spin/modules/core/rpms/theme-rpm.py:
	- the triggerun scriptlet for desktop-backgrounds-basic had a bug
	because of which the default*.jpg files were not being restored.
	- the triggerin script was backing out the default-dual.jpg which is
	not required to be backed out.
	[35479c660a7e]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: trigger on desktop-backgrounds-basic instead of GConf2

	* spin/modules/core/rpms/theme-rpm.py:
	- modifying the %gconf-tree.xml to point to spin-created background
	images is an OK solution but it opens a can of worms we don't want
	to deal with. Specifically, if the theme RPM is installed, for the
	first time, on a machine already running spin-created distribution
	the background might not change based on the user's modifications.
	We can get around this in a hackish way. Instead, what we are
	going to do is that we will create backups of the default
	background files installed by desktop-backgrounds-basic and
	replace them with spin-created images.
	[f6eb6cdba326]

	* spin/modules/core/software/comps.py:
	comps: using xmllib.config instead of xmllib.tree

	* spin/modules/core/software/comps.py:
	- the CompsEvent object was using xmllib.tree to create the comps.xml
	file instead of xmllib.config. This was causing the generated
	comps.xml to be on one line instead of being human-readable.
	[86fc5346d9d5]

2008-01-02  Uday Prakash  <uprakash@abodiosoftware.com>

	* spin/modules/shared/rpms.py:
	rpms: using xmllib.config instead of xmllib.tree for .dat files

	* spin/modules/shared/rpms.py:
	- was using xmllib.tree while creating/modifying the distro.conf.dat
	files which was not pretty-formatted; fixed.
	[876b812b2b60]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: the GConf2 triggerin script had bugs

	* spin/modules/core/rpms/theme-rpm.py:
	- the triggerin script of GConf2 was moving the %gconf-tree.xml file
	to %gconf-tree.xml.theme-save, but the sed scripts were still
	referring to %gconf-tree.xml while modifying the file, which were
	missing. Now, copying the %gconf-tree.xml file to %gconf-tree.xml
	.theme-save iff there isn't a theme-save file.
	[871ee8860eee]

2007-12-31  Uday Prakash  <uprakash@abodiosoftware.com>

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: not saving the build folder
	[bfcc28929f9b]

	* spin/modules/core/rpms/theme-rpm.py:
	theme-rpm: added triggerin and triggerpostun scriptlets for GConf2

	* spin/modules/core/rpms/theme-rpm.py:
	- the GConf2 package sets the default background to be
	/usr/share/backgrounds/images/default.jpg for <= F7 and sets the
	default background to be
	/usr/share/backgrounds/infinity/infinity.xml. The triggerin and
	triggerpostun scriptlets make sure that the default backgrounds used
	are the ones installed by the theme RPM.
	[0f6eb8664e05]

	* share/spin/schemas/distro.conf/bootiso.rng,
	share/spin/schemas/distro.conf/comps.rng,
	share/spin/schemas/distro.conf/config-rpm.rng,
	share/spin/schemas/distro.conf/createrepo.rng,
	share/spin/schemas/distro.conf/diskboot-image.rng,
	share/spin/schemas/distro.conf/files.rng,
	share/spin/schemas/distro.conf/gpgsign.rng,
	share/spin/schemas/distro.conf/initrd-image.rng,
	share/spin/schemas/distro.conf/iso.rng,
	share/spin/schemas/distro.conf/isolinux.rng,
	share/spin/schemas/distro.conf/kickstart.rng,
	share/spin/schemas/distro.conf/lib.rng,
	share/spin/schemas/distro.conf/logos-rpm.rng,
	share/spin/schemas/distro.conf/logos.rng,
	share/spin/schemas/distro.conf/main.rng,
	share/spin/schemas/distro.conf/pkglist.rng,
	share/spin/schemas/distro.conf/product-image.rng,
	share/spin/schemas/distro.conf/publish.rng,
	share/spin/schemas/distro.conf/release-files.rng,
	share/spin/schemas/distro.conf/release-rpm.rng,
	share/spin/schemas/distro.conf/repos.rng,
	share/spin/schemas/distro.conf/rpms.rng,
	share/spin/schemas/distro.conf/sources.rng,
	share/spin/schemas/distro.conf/theme-rpm.rng,
	share/spin/schemas/distro.conf/updates-image.rng,
	share/spin/schemas/spin.rng:
	schemas/theme-rpm: <obsoletes/> elements allowed inside <theme-rpm/>
	[36d5d15d524f]

2007-12-27  Uday Prakash  <uprakash@abodiosoftware.com>

	* build/MANIFEST.in, build/setup.cfg, build/setup.py,
	docsrc/comps.rng, docsrc/gpgsign.rng, docsrc/iso.rng,
	docsrc/isolinux.rng, docsrc/lib.rng, docsrc/main.rng,
	docsrc/product.rng, docsrc/publish.rng, docsrc/sources.rng,
	docsrc/updates.rng, runfromsource.cfg,
	spintest/modules/download/__init__.py, spintest/modules/release-
	files.py, tools/docgen:
	changed dims to rendition and dimsbuild to spin.
	[d9d4eb864f89]

2007-12-27  Kay Williams  <kwilliams@abodiosoftware.com>

	* build/setup.cfg, dbtest/config.py, dbtest/modules/download/f8.repo,
	dbtest/modules/pkglist/pkglist.conf,
	dbtest/modules/pkglist/supplied.conf, dbtest/modules/sources.py,
	dbtest/runtest.py, dimsbuild/__init__.py,
	dimsbuild/event/__init__.py, dimsbuild/main.py, share/doc/examples
	/example-centos-base-5/distro.conf, share/doc/examples/example-
	fedora-base-6/distro.conf, share/doc/examples/example-fedora-
	base-7/distro.conf, share/doc/examples/example-redhat-
	base-5/distro.conf, tools/docgen:
	changed all references from abodio to rendition
	[4e2efdf4f14e]

2007-12-27  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/shared/createrepo.py:
	createrepo: using the rpm executable to find out createrepo version

	* dimsbuild/modules/shared/createrepo.py:
	- the previous problem didn't solve the stale locks problem; using the
	rpm executable to figure out the createrepo version as doing it
	using the rpm python module leaves some unclosed locks around.
	[9986b768eb60]

	* dimsbuild/modules/shared/createrepo.py:
	createrepo: on older RPM versions some locks were being left open

	* dimsbuild/modules/shared/createrepo.py:
	- on older RPM versions (< 4.4.2.2), the mi (Match Iterator) object
	was keeping some locks alive, which eventually led to the RPM
	database running out of locks causing dimsbuild to fail. This has
	been fixed by deleting the mi object when the RPM databse querying
	is done.
	[1201d6b34b94]

2007-12-21  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/shared/rpms.py:
	not specifying license of RPM was causing it to be set to UNKNOWN.

	* dimsbuild/modules/shared/rpms.py:
	- the default value of the RPM's license was 'UNKNOWN' which is
	illegal (in more than one ways). This is fixed so that the license
	directive in the spec file is set only if it is specified.
	[2abca6e818f9]

	* dimsbuild/modules/shared/rpms.py:
	shared/rpms: with changes to dimscommon, empty RPM builds are fixed

	* dimsbuild/modules/shared/rpms.py:
	- there was some hackery required to get empty RPMs to be built; this
	has been taken care of in dimscommon. Therefore, dimsbuild just
	labels the README file as a doc file and doesn't specify where it
	should be installed and moves along.
	[f3585f110156]

2007-12-19  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/shared/rpms.py:
	rpms: building RPMs with just the README file was failing; fixed.

	* dimsbuild/modules/shared/rpms.py:
	- was just labeling the README file as a doc file but not installing
	it. Now both installing it and labeling it as a doc file.
	[3794855d4f2b]

2007-12-21  Uday Prakash  <uprakash@abodiosoftware.com>

	* dbtest/modules/download/__init__.py:
	dbtest/download: moved download test cases to new API
	[64a620d64f6a]

	* dbtest/modules/pkglist/__init__.py:
	dbtest/pkglist: added comments for test cases
	[1b4ef9e41ea7]

	* dbtest/modules/pkglist/__init__.py,
	dbtest/modules/pkglist/bug108.conf,
	dbtest/modules/pkglist/bug84.conf,
	dbtest/modules/pkglist/bug85.conf,
	dbtest/modules/pkglist/bug86.conf:
	dbtest/pkglist: moved pkglist event test cases to new API

	* dbtest/modules/pkglist/bug*.conf:
	- removed; not required anymore

	* dbtest/modules/pkglist/__init__.py:
	- the test cases moved to the new scheme of things
	[1736153f55bc]

	* dbtest/config.py:
	dbtest/config: added centos-5-updates to REPOS
	[c8eef066d683]

2007-12-19  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/modules/comps/__init__.py, dbtest/runtest.py,
	dimsbuild/event/verify.py, dimsbuild/repo.py:
	fixing (yet) another memory leak

	dbtest/modules/comps/__init__.py
	 * CompsEventTestCase.__init__ requires basedistro to be passed as an
	arg; no longer assumes 'fedora-6' dimsbuild/event/verify.py
	 * added VerifyObject._testMethodName and VerifyObject._testMethodDoc,
	both set to None, so this object can be __str__()'d
	dimsbuild/repo.py
	 * delete pxml.filename and pxml in _read_repo_content to prevent a
	memory leak (though somehow I doubt this is actually resolving
	the problem)
	[ae33ffdba5f0]

	* dbtest/modules/release-files.py, dimsbuild/modules/core/installer
	/release-files.py, dimsbuild/modules/core/software/pkglist.py:
	bug 122 (Depsolver teardown woes), release-files test case fixes

	Finally fixed the bug in depsolver that was causing error messages
	to be printed on python close. The Solver.teardown() method now
	also nullifies Solver._dcobj, which apparently has some sort of
	circular reference to repo objects, which keeps the solver alive
	after its intended lifespan. This fix further addresses the strange
	issue of seeing extra repositories being deleted in test cases
	executions that involve more than one module.

	The 'release-files' event is now a little smarter about detecting
	its (expected) outputs, which means that it can now detect whether
	or not it ran successfully via a verify_cvar method.

	dbtest/modules/release-files.py
	 * ReleaseFilesEventTestCase._conf no longer defines the 'release-rpm'
	section; it instead defines 'release-files' (which makes a little
	more sense). The 'release-rpm' section is added during setUp via
	add_config_section
	 * added missing runTest definition
	 * all Test_* classes' _conf attributes changed to define just the
	appropriate 'release-files' sections
	dimsbuild/modules/core/installer/release-files.py
	 * added DEFAULT_SET, a default set of globs to use as a basis for
	finding release files
	 * ReleaseFilesEvent.run() now sets the 'release-files' cvar to [], if
	not already defined
	 * ReleaseFilesEvent.apply() now populates the 'release-files' cvar
	with any files it finds in its output directory that match one or
	more of the globs in DEFAULT_SET
	 * ReleaseFilesEvent._generate now populates the 'release-files' cvar
	with the files it copies from the DEFAULT_SET
	 * added ReleaseFilesEvent.verify_cvars, a verify method to ensure the
	'release- files' cvar was populated correctly
	[c56e0fafbe6a]

2007-12-18  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/__init__.py, dbtest/config.py, dbtest/core.py,
	dbtest/mixins.py, dbtest/modules/custom-repo.py,
	dbtest/modules/pkglist/__init__.py, dbtest/modules/publish.py,
	dbtest/modules/release-files.py, dbtest/modules/sources.py,
	dbtest/runtest.py, dimsbuild/modules/core/software/pkglist.py:
	fixes to previous commit, output removal, memory leak fix

	Added new command line option, -b, --build-root, which controls
	where test cases are generated (defaults to /tmp/dbtest). This
	location is deleted when testing is complete unless it exists and
	has content before starting the test. Additionally, individual test
	cases now delete their output after they finish; this reduces the
	required hard disk space for a full dimsbuild test run by a huge
	amount

	dbtest/__init__.py
	 * added BUILD_ROOT, the location builds are performed; this is
	modified by the
	   -b, --build-root option in runtest.py
	 * added EventTestCase.output, a list of locations of files/directories
	that the test process creates (and wants to be deleted)
	 * ModuleTestSuite now automatically removes all outputs of all its
	test cases (iterating over the TestCase.output attribute and
	calling.rm(recursive=True, force=True) on it)
	 * further overrode unittest.TestSuite.run; no longer calls this method
	at all, but instead implements its exact method calls,
	interspersing it with other method calls of my own. This is what
	allows me to 'record' the output of each test as it is ran.
	 * added flushing for log file objects so that log messages appear as
	they are written instead of in some indeterminite time in the
	future dbtest/config.py
	 * changed 'baseurl' for 'centos-5-base' dbtest/core.py
	 * added CoreTestSuite, a simple subclass of unittest.TestSuite that
	records the output of its child test suites
	 * make_core_suite and make_extension_suite now require basedistro to
	be specified instead of assuming 'fedora-6'
	 * ExtensionEventTestCase00 now defines a tearDown function that
	doesn't try to append Event.METADATA_DIR to output, since Event
	is undefined in this test case dbtest/mixins.py
	 * fdm_make_suite, imm_make_suite now use CoreTestSuite instead of
	unittest.TestSuite dbtest/modules/custom-repo.py
	 * missed this test case in previous conversion; converted to new
	format dbtest/modules/pkglist/__init__.py
	 * added missing basedistro parameter to make_suite so the global test
	suite can be run dbtest/modules/publish.py
	 * added PublishEventTestCase.tearDown, which appends Event.cvars
	['publish-path'] to the output list (meaning it gets
	automatically deleted once the testing process completes)
	dbtest/modules/release-files.py
	 * removed ReleaseFilesTestCase.runTest dbtest/modules/sources.py
	 * the 'base' SRPM repositories for 'fedora-7' and 'fedora-8' now point
	to the 'Everything' folder instead of the 'Fedora' folder.
	'Everything' contains the necessary 'repodata' folder, while
	'Fedora' does not. dbtest/runtest.py
	 * added -b, --build-root option, which controls the directory in which
	test builds are created
	dimsbuild/modules/core/software/pkglist.py
	 * re-added the memory leak protection code (which will re-enable the
	__del__ errors in yum's code)
	[d34acf9d2ff7]

2007-12-17  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/__init__.py, dbtest/config.py, dbtest/core.py,
	dbtest/mixins.py, dbtest/modules/ALL.py,
	dbtest/modules/autoclean.py, dbtest/modules/bootiso.py,
	dbtest/modules/compose.py, dbtest/modules/comps/__init__.py,
	dbtest/modules/config-rpm.py, dbtest/modules/createrepo/__init__.py,
	dbtest/modules/diskboot-image.py,
	dbtest/modules/download/__init__.py, dbtest/modules/files.py,
	dbtest/modules/gpgcheck.py, dbtest/modules/gpgsign/__init__.py,
	dbtest/modules/infofiles.py, dbtest/modules/init.py, dbtest/modules
	/initrd-image.py, dbtest/modules/installer.py,
	dbtest/modules/iso.py, dbtest/modules/isolinux.py, dbtest/modules
	/logos-rpm.py, dbtest/modules/logos.py, dbtest/modules/product-
	image.py, dbtest/modules/publish.py, dbtest/modules/pxeboot-
	images.py, dbtest/modules/release-files.py, dbtest/modules/release-
	rpm.py, dbtest/modules/repos.py, dbtest/modules/rpms.py,
	dbtest/modules/software.py, dbtest/modules/sources.py,
	dbtest/modules/sourcevars.py, dbtest/modules/stage2-images.py,
	dbtest/modules/theme-rpm.py, dbtest/modules/updates-image.py,
	dbtest/runtest.py:
	variable base distro testing support

	Added the ability for the user of the test suite to easily change
	the base distro they wish to test. This is accomplished via the
	'-d', '--base-distro' command line options. All events that used to
	either assume a certain base distro or that tested all the base
	distros now obey the use of this option.

	dbtest/__init__.py
	 * EventTestCase signature is now EventTestCase(basedistro, conf); base
	distro refers to the name-version of a base distribution that is
	used to generate the correct config file for the derived
	distribution
	 * make_suite now requires basedistro to be passed as an argument
	 * make_suite now passes basedistro to all module.make_suite calls
	dbtest/config.py
	 * make_main now accepts keyword argument pairs for populating the
	<main> section. If 'fullname', 'product', or 'version' are not
	defined in kwargs, they are automatically generated and added
	dbtest/core.py
	 * make_core_suite, make_extension_suite signatures changed to
	make_core_suite(TestCase, basedistro, conf)
	 * all TestCases are now instantiated with basedistro as their first
	argument dbtest/mixins.py
	 * fdm_make_suite, imm_make_suite signatures changed to
	fdm_make_suite(TestCase, basedistro, conf, ...)
	 * all TestCases are now instanteated with basedistro as their first
	argument dbtest/modules/*.py
	 * converted all __init__ signatures
	 * make_suite now requires basedistro to be passed as an argument
	dbtest/modules/logos.py
	 * make_suite now returns a suite to test logos for one distribution
	instead of all supported distributions dbtest/modules/sources.py
	 * added support for testing sources of non-fedora-6 distributions
	 * added SOURCE_REPOS, a dictionary containing repository information
	used to construct the appropriate <sources> element for a given
	base distribution
	 * added _make_source_repos, which creates a <sources> element
	 * added _make_repo, which creates a <repo> element from a dictionary
	dbtest/runtest.py
	 * added '-d', '--base-distro' option, which controls what base
	distribution to use for testing; defaults to 'fedora-6'
	[b3c8445da2d1]

2007-12-18  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm and logos-rpm: fixed bug 139.

	* dimsbuild/modules/core/rpms/{logos-rpm,theme-rpm}.py:
	- calling self.link() instead of self.copy() to copy images from the
	shared/ folder.
	[27c8b7cd3758]

	* dimsbuild/modules/core/software/pkglist.py:
	pkglist: calling IDepsolver.teardown()
	[a580a01381d6]

2007-12-18  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/shared/repos.py:
	shared/repos: log ouput tweaks

	Previously events that used the shared repos sync_repodata method
	printed "Downloading repodata - '%s'" for each repository, whether
	new repodata was downloaded or not. This changeset moves the text
	from a separate log call into the text argument of io.sync_input. In
	this way, the text is only displayed if data is actually downloaded.
	[5042541bf38a]

	* dimsbuild/modules/core/installer/infofiles.py:
	infofiles: now difftest for discrete variables, not base-vars

	The buildstamp and treeinfo events were previously adding base-vars
	to their difftest variable data. This changeset removes base-vars
	and adds the individual elements (e.g. product, version, basearch).
	This prevents the events from running when irrelevent data (e.g.
	copyright) changes.
	[836420e10e7a]

	* dimsbuild/locals.py, dimsbuild/main.py,
	dimsbuild/modules/core/installer/infofiles.py,
	dimsbuild/modules/core/software/createrepo.py:
	main: changed 'product-path' base-var to 'productpath'

	This change makes it possible to access the product-path variable
	(like all other base variables) directly from the Event object.
	Changes include:

	dimsbuild/locals.py
	* removed hyphens from references to product-path in
	DISCINFO_FORMAT_LOCALS

	dimsbuild/main.py
	* removed hyphen at the point when the basevar is set

	dimsbuild/modules/core/installer/infofiles.py
	* access productpath directly from the event object

	dimsbuild/modules/core/software/createrepo.py
	* likewise
	[ddf2ce264dc6]

2007-12-18  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: install script was creating link to non-existing files

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	- the install script was creating symlinks to infinity/2-infinity-
	day.png which was renamed to spin/2-spin-day.png
	[9942b1e07f4c]

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: not added bdist-base to output files' list
	[9a559975d1ec]

	* dimsbuild/modules/core/rpms/theme-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	theme-rpm: removed requires on gdm

	* dimsbuild/modules/shared/rpms.py:
	- added support for specifying triggerin, triggerun and triggerpostun
	directives in setup.cfg file; this is achieved by overriding
	RpmBuildMixin's _get_triggerin(), _get_triggerun(), and
	_get_triggerpostun() methods.
	- renamed RpmBuildMixin._getiscript() to
	RpmBuildMixin.get_install_script()
	- renamed RpmBuildMixin._getpscript() to
	RpmBuildMixin._get_post_install_script()

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	- ThemeRpmEvent overrides RpmBuildMixin._get_triggerin() method; the
	triggerin script is run if the 'gdm' package is installed before or
	after the theme RPM. The script copied the custom.conf file from
	/usr/share/<RPM name>/custom.conf file to /etc/gdm
	[9a95bc3166bc]

2007-12-17  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	config-rpm: fixed bug 113

	* dimsbuild/modules/shared/rpms.py:
	- added InputFilesMixin._get_download_id() that takes in the key of
	the installinfo dictionary as a parameter and returns an ID to use;
	by default the key is returned without any modifications
	- added InputFilesMixin._handle_attributes() that take in the ID, the
	config element and the attributes not handled by InputFilesMixin as
	a parameter -- the attributes handled by InputFilesMixin are the
	'mode' and the 'dest' attributes. By default, this method does
	nothing

	* dimsbuild/modules/extensions/rpms/config-rpm.py:
	- the ConfigRpmEvent overrides the InputFilesMixin._get_download_id()
	method. ConfigRpmEvent._get_download_id() returns an ID that appends
	an integer to the parameter passed to it. For example, the first
	time it is called with 'config-files' as a parameter 'config-
	files-0' is returned, the second time 'config-files-1' is returned
	and so on and so forth. The process is similar for 'support-files'
	- the ConfigRpmEvent class overrides the
	InputFilesMixin._handle_attributes() method. If the noreplace
	attribute's value is set to True, the ID parameter is appended to
	ConfigRpmEvent.noreplace_ids list.
	[5e2904d5046f]

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: making /etc/gdm folder if it is missing
	[33755f59da2c]

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: using absolute paths to cp and mv in post-install section
	[b5993c494a69]

	* dimsbuild/event/locals.py, dimsbuild/locals.py,
	dimsbuild/modules/core/rpms/theme-rpm.py:
	locals: added GDM_CUSTOM_THEME locals variable and using it in
	theme-rpm

	* dimsbuild/modules/locals.py:
	- added GDM_CUSTOM_THEME variable that is used to create
	/etc/gdm/custom.conf on the client machine

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	- the GDM_CUSTOM_THEME locals variable is used to generate the
	/usr/share/<product name>-theme/custom.conf file that is copied to
	/etc/gdm/custom.conf in the post-install section
	[f9fb328e91b1]

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: making missing directories and providing missing
	parameters

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	- creating custom.conf's parent directories before writing the file
	- providing RpmBuildMixin.rpm_summary in the RpmBuildMixin.__init__()
	call
	[b2a96d58ba24]

	* dimsbuild/event/locals.py, dimsbuild/locals.py:
	locals: removed GDM_GREETER_THEME and DEFAULT_THEME locals

	* dimsbuild/locals.py:
	- GDM_GREETER_THEME and DEFAULT_THEME were used by theme-rpm but
	aren't used anymore
	[cbfc3adf362b]

	* dimsbuild/modules/core/rpms/theme-rpm.py:
	theme-rpm: removing requires on gdm

	* dimsbuild/modules/core/rpme/theme-rpm.py:
	- the gdm package allows a custom.conf in /etc/gdm that overrides the
	default configuration specified in /usr/share/gdm/defaults.conf. The
	/etc/gdm/custom.conf file is %noreplace in gdm, so it is OK for the
	theme rpm to create a /etc/gdm/custom.conf to set the theme of the
	machine.
	[110e95bba794]

	* dimsbuild/modules/core/rpms/theme-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py:
	theme-rpm: made the theme-rpm module a core module
	[6cd56c1b7428]

2007-12-17  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/shared/bootcfg.py:
	bootcfg: appended "!" to menu title

	Following the lead of upstream vendors.
	[136fa745f245]

	* dimsbuild/modules/core/software/pkglist.py:
	pkglist: fix to prevent pkglist from running every time

	Required-packages were being sorted after difftest and prior to
	metadata writing. This was causing pkglist to run every time. The
	fix is to remove sorting, which is unnecessary.
	[1e63a1343e5c]

2007-12-14  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/shared/rpms.py:
	rpms: some of the RpmBuildMixin's parameters were [] instead of None

	* dimsbuild/modules/shared/rpms.py:
	- if default_provides, default_obsoletes and default_requires were not
	specified, then they were being shared across all instances of
	RpmBuildMixin.
	[b667f04fb02d]

	* dimsbuild/modules/core/software/pkglist.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py:
	theme-rpm: ThemeRpmEvent._add_doc_files() is not needed

	* dimsbuild/modules/extension/rpms/theme-rpm.py:
	- ThemeRpmEvent._add_doc_files() is the same as
	RpmBuildMixin._add_doc_files()
	[2ffd52985046]

2007-12-14  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/__init__.py, dbtest/core.py, dbtest/mixins.py,
	dbtest/modules/ALL.py, dbtest/modules/autoclean.py,
	dbtest/modules/bootiso.py, dbtest/modules/compose.py,
	dbtest/modules/comps/__init__.py, dbtest/modules/config-rpm.py,
	dbtest/modules/createrepo/__init__.py, dbtest/modules/custom-
	repo.py, dbtest/modules/diskboot-image.py, dbtest/modules/files.py,
	dbtest/modules/gpgcheck.py, dbtest/modules/gpgsign/__init__.py,
	dbtest/modules/infofiles.py, dbtest/modules/init.py, dbtest/modules
	/initrd-image.py, dbtest/modules/installer.py,
	dbtest/modules/iso.py, dbtest/modules/isolinux.py, dbtest/modules
	/logos-rpm.py, dbtest/modules/logos.py, dbtest/modules/product-
	image.py, dbtest/modules/publish.py, dbtest/modules/pxeboot-
	images.py, dbtest/modules/release-files.py, dbtest/modules/release-
	rpm.py, dbtest/modules/repos.py, dbtest/modules/rpms.py,
	dbtest/modules/software.py, dbtest/modules/sources.py,
	dbtest/modules/sourcevars.py, dbtest/modules/stage2-images.py,
	dbtest/modules/theme-rpm.py, dbtest/modules/updates-image.py,
	dbtest/rpms.py, dimsbuild/modules/core/rpms/custom-repo.py:
	dimsbuild test back end changes - cleaner and crunchier for all!

	This commit finally addresses the issue that has been present in
	testing for a while - we really want to run core/extension tests on
	a test case of the appropriate type, not some generic superclass.
	The back end was changed to allow for this; instead of passing an
	event id and a config, you pass an EventTestCase subclass (the
	subclass, not an instance of the subclass) which dbtest uses to
	perform tests. Essentially, core.py now contains a number of
	factory functions which decorate an instance of this class so that
	the specific tests can be applied. These changes largely remove the
	need to use config.py to make config sections; instead, the
	superclass can simply define _conf directly and automatically
	generate the correct config file.

	dbtest/__init__.py
	 * EventTestCase.__init__ no longer accepts an eventid; all subclasses
	are expected to define eventid and moduleid directly
	 * fixed the code section that automatically added an appropriate
	config section to use moduleid instead of evenitd
	 * EventTestCase.setUp now sets EventTestCase.event to None when the
	given event does not exist
	 * added a pass definition for EventTestCase.runTest
	 * added decorate, a function that takes a TestCase instance, the name
	of a method in that test case, and a pre and post function,
	returning that test case with the given method decorated by
	running the pre function before and post function after the
	method. dbtest/core.py
	 * changed make_core_suite and make_extension_suite to operate on
	EventTestCase classes rather than eventids
	 * converted all EventTestCase classes into factory functions that
	transform an EventTestCase instance into an equivalent class
	dbtest/mixins.py
	 * changed fdm_make_suite and imm_make_suite to operate on
	EventTestCase classes rather than eventids
	 * converted all EventTestCase classes into factory functions that
	transform an EventTestCase instance into an equivalent class
	 * mixin classes no longer subclass EventTestCase dbtest/modules/*
	 * converted all event test cases to the new model
	 * all test cases now define moduleid and eventid for the specific
	event they test
	 * all modules now define an appropriate EventTestCase for each event
	they test
	 * both 'publish' and 'release-files' still fail the first core event
	test; all other tests should succeed dbtest/rpms.py
	 * mixin classes no longer subclass EventTestCase
	dimsbuild/modules/core/rpms/custom-repo.py
	 * no longer setdefaults the 'repos' and 'source-repos' cvars
	[24baf9c02344]

2007-12-14  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/shared/rpms.py:
	rpms: RpmBuildMixin._add_doc_files() was not adding README and
	COPYING

	* dimsbuild/modules/shared/rpms.py:
	- if there was a COPYING file available in the build folder, was not
	adding README files to the doc_files list.
	[f8de1b743705]

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	rpms: fixed the install location of 'README'

	* dimsbuild/modules/shared/rpms.py:
	- the README file was getting installed to /usr/share/doc/<product
	name>; whereas all the other doc files were being installed to
	/usr/share/doc/<product name>-<version>. Changed this so that all
	doc files get installed to /usr/share/doc/<product name>-<version>.
	- if there is a COPYING file in the build folder, automagically add it
	to the doc files list

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- removed LogosRpmEvent._add_doc_files() method
	[6377d6dd57f3]

	* dimsbuild/locals.py, dimsbuild/modules/core/rpms/logos-rpm.py:
	Fixed Bug 127: bad-looking splash.lss

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- creating a black image instead of converting the syslinux-splash-
	vesa.jpg.

	* dimsbuild/locals.py:
	- added locals information to trigger the modification of the image
	instead of direct conversion.
	[e222683cb6f3]

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py:
	rpms: bumping RPM events' version numbers to force them to run

	* dimsbuild/modules/*/rpms/*:
	- merged the build and rpm-input folders; bumping versions to force
	the rpm events to run and delete the rpm-input folders
	[9721b7c6a372]

2007-12-13  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	rpms: code cleanup

	* dimsbuild/modules/shared/rpms.py:
	- deleted LocalFilesMixin; not needed anymore
	- RpmBuildMixin.data_files is a property now; which is a dictionary of
	install dir to files to install in that directory mapping.
	- InputFilesMixin syncs files to the build folder as well (previously
	files were being sync'd to <metadata directory>/rpm-input
	- making data_files a property gets rid of all the
	_update_data_files() methods
	[00873b8cb3d1]

	* dimsbuild/modules/core/rpms/release-rpm.py:
	release-rpm: the gpg and eulapy files were being put in wrong folder

	* dimsbuild/modules/core/rpms/release-rpm.py:
	- the gpg files were incorrectly getting installed to /gpg instead of
	/etc/pkg/rpm-gpg
	- the eula.py file was getting installed to /eulapy instead of
	/usr/share/firstboot/modules.
	[7ceea593d988]

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	rpms: creating README files for all custom RPMs

	* dimsbuild/modules/shared/rpms.py:
	- the RpmBuildMixin._generate() method creates a README file that gets
	installed to /usr/share/doc/<package name>
	- the RpmBuildMixin._update_data_files() method adds files in the
	build folder to get installed too
	[543e4c4ded7b]

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	rpms: adding doc files to theme and config rpms

	* dimsbuild/modules/core/rpms/extensions/{config-rpm,theme-rpm}.py:
	- adding README files to config-rpm and theme-rpm events because on
	Fedora 8 machines, RPM builds fail for empty RPMs. The logos-rpm and
	release-rpm events are never empty; but it's probably not a bad idea
	to have READMEs for them too.
	[9bc827f71964]

2007-12-13  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/modules/logos-rpm.py:
	removed Test_LogosRpmLocals from logos-rpm test suite
	[7830d60053af]

	* dimsbuild/modules/core/rpms/custom-repo.py:
	fixes to custom-repo module

	dimsbuild/modules/core/rpms/custom-repo.py
	 * fixed what appears to have been errors in copying (text not changed
	between two simliar code blocks, for example)
	 * reorganized code according to the repo we're working on at the
	moment (rpm or srpm) rather than the specific task we're
	performing
	 * event now only processes things if the corresponding cvar is set;
	otherwise code is ignored
	 * Event.setup() now attempts to update metadata automatically, but
	passes any exceptions it gets (normally because they do not yet
	exist)
	 * added verification of source rpm repos
	[19110c3e4b7f]

	* dbtest/core.py, dbtest/mixins.py, dbtest/modules/ALL.py,
	dbtest/modules/comps/__init__.py, dbtest/modules/files.py,
	dbtest/modules/iso.py, dbtest/modules/publish.py,
	dbtest/modules/sources.py, dbtest/runtest.py,
	dimsbuild/event/__init__.py, dimsbuild/event/fileio.py,
	dimsbuild/event/loader.py, dimsbuild/main.py,
	dimsbuild/modules/core/compose.py, dimsbuild/modules/core/init.py,
	dimsbuild/modules/core/installer/bootiso.py,
	dimsbuild/modules/core/installer/infofiles.py,
	dimsbuild/modules/core/installer/initrd-image.py,
	dimsbuild/modules/core/installer/logos.py,
	dimsbuild/modules/core/installer/product-image.py,
	dimsbuild/modules/core/installer/pxeboot-images.py,
	dimsbuild/modules/core/installer/stage2-images.py,
	dimsbuild/modules/core/installer/updates-image.py,
	dimsbuild/modules/core/repos.py, dimsbuild/modules/core/rpms/custom-
	repo.py, dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/software/comps.py,
	dimsbuild/modules/core/software/createrepo.py,
	dimsbuild/modules/core/software/gpgcheck.py,
	dimsbuild/modules/core/software/pkglist.py,
	dimsbuild/modules/extensions/installer/kickstart.py,
	dimsbuild/modules/extensions/iso.py,
	dimsbuild/modules/extensions/software/gpgsign.py,
	dimsbuild/modules/extensions/sources.py,
	dimsbuild/modules/shared/installer.py, dimsbuild/verify.py:
	various 'white noise' dimsbuild test failure fixes (bug 130)

	dbtest/core.py
	 * bug 130: ExtensionEventTestCase objects now accept a moduleid
	argument, which is the id of the module the test case came from.
	This allows modules that contain one or more events with
	different event id from the module id to pass the first extension
	event test case. If not specified, the module id defaults to the
	specified event id
	 * bug 130: ExtensionEventTestCase.setUp() and
	ExtensionEventTestCase.tearDown() now append and remove the
	module id from the disabled modules list, not the event id
	 * bug 130: make_extension_suite now accepts a moduleid argument
	indicating the module from which a certain event came, according
	to the above specifications dbtest/mixins.py
	 * added touch_input_files, a function to touch some files suitable for
	using as input in an event test case
	 * added remove_input_files, a function which removes the files
	generated by touch_input_files with the same argument
	dbtest/modules/comps/__init__.py
	 * comps test cases now create 'included-packages' and 'excluded-
	packages' cvars as sets, rather than lists dbtest/modules/iso.py
	 * bug 130: iso events now pass their module id, 'iso', to
	make_extension_suite calls dbtest/modules/sources.py
	 * bug 130: sources events now pass their module id, 'sources', to
	make_extension_suite callse dbtest/runtest.py
	 * added clear_cache to default_opts dimsbuild/event/__init__.py
	 * Event._handle_Exception now re-raises the given exception if log
	level is above 3 or DEBUG is set, as opposed to printing the
	exception and allowing sys.exit() to be called
	dimsbuild/event/fileio.py
	 * added verify_output_exists, which makes sure that all output files
	exist. As this is defined in the superclass, all events
	automatically inherit it and thus do not need to define this
	check themselves
	 * as a correlary to the above, IOObject.list_output now returns []
	when the given event does not have an 'output' diff handler
	dimsbuild/main.py
	 * removed the extra logic present in Build._get_config that printed
	out help when the config wasn't found; no longer necessary due to
	the one-pass model dimsbuild/modules/*/*.py
	 * changed several calls from self.verifier.failUnless(x.exists()) to
	self.verifier.failUnlessExists(x)
	 * removed any verify_* methods that were checking output that was
	listed in io.list_output; now merely uses the method that is
	defined in the superclass dimsbuild/modules/core/compose.py
	 * added verify_manifest_exists and verify_cvars
	dimsbuild/modules/core/init.py
	 * removed PROTECT_SKIP and PROTECT_ENABLED properties
	dimsbuild/modules/core/installer/logos.py
	 * applied a hack to get testing to work (bug 131)
	dimsbuild/modules/core/repos.py
	 * applied a hack to get testing to work (bug 131)
	 * added verify_repodata, verify_cvars dimsbuild/modules/core/rpms
	/custom-repo.py
	 * added verify_repodata
	 * changed default values for 'included-packages' and 'excluded-
	packages' cvars from lists to sets
	dimsbuild/modules/extensions/installer/kickstart.py
	 * added verify_cvars dimsbuild/modules/extensions/software/gpgsign.py
	 * added verify_gpg_keys_signed dimsbuild/modules/extensions/sources.py
	 * applied a hack to get testing to work (bug 131)
	 * added verify_repodata
	[ea1421aff66b]

2007-12-13  Uday Prakash  <uprakash@abodiosoftware.com>

	* dbtest/modules/logos-rpm.py:
	dbtest/logos-rpm: doesn't need test case for locals

	* dbtest/modules/logos-rpm.py:
	- the logos-rpm event doesn't use locals data as before; the test case
	has become obsolete
	[68dd34a86378]

2007-12-12  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/software/pkglist.py:
	pkglist: IDepsolver.resetRpmDB() not required; method in DepSolver

	* dimsbuild/modules/core/software/pkglist.py:
	- the IDepsolver.resetRpmDB() method depends on the yum version; moved
	to DepSolver.
	[c039a0346d2e]

2007-12-12  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/locals.py:
	locals: changed output format for syslinux-vesa-splash

	python imaging likes 'jpeg' (not 'jpg')
	[6317129f0ecc]

2007-12-11  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/autoclean.py:
	autoclean: use xmllib.config instead of xmllib.tree

	* dimsbuild/modules/core/autoclean.py:
	- using the xmllib.config module instead of xmllib.tree so that the
	metadata files are human-readable.
	[bfd7013e8d5d]

	* dimsbuild/main.py, dimsbuild/validate.py:
	validation: Fixed bug 116; fail is required element is missing.

	* dimsbuild/main.py:
	- calling events' validate() methods after config validation is
	complete

	* dimsbuild/validate.py:
	- if an element is not found in the config file, and there is no
	<optional/> element around it in the schema file, raise an
	InvalidConfigError.
	[5d8ec46aa81e]

2007-12-11  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* bin/dimsbuild, dimsbuild/main.py:
	removed double-passing over options; removed cli support for events

	Under the original dimsbuild design, events could provide and
	manipulate the command line parser dimsbuild used for retrieving its
	arguments. This resulted in a complex, filtered two-layer parsing
	system to find and load the config file, then find and load the
	appropriate dimsbuild modules, allow the events to modify the cli
	parser, and finally parse the full set of command arguments. Though
	this accomplished the goal, it was excessivly complex and prone to
	error. Due to the recent change of distro config file specification
	moving from an option to an argument, the above system no longer
	works.

	The new system is much simpler. As none of the existing dimsbuild
	events made use of the command line modification capabilities that
	were offered, this feature was removed entirely. Thus, command line
	parsing can occur in just one pass, greatly simplifying the whole
	process.

	A note on terminology: now that 'distro conf' has been removed from
	options and added as an argument, we are choosing to instead call it
	a 'distribution definition' or '.distro file'. Meanwhile, what was
	formerly referred to as the 'main config file' is now the only
	config file, thus just 'config file'. This should help distinguish
	between the two types of files to prevent confusion on the user end.

	bin/dimsbuild
	 * removed add_help_option=False from OptionParser creation; now that
	we use just a single pass, delaying help display is no longer
	required (this means that the -h output displays much faster when
	a config file is specified than it did before)
	 * renamed '--dimsbuild-conf' option to '-c', '--config' - NOTE: this
	is different from what formerly occupied '-c', the distribution
	definition
	 * argument parsing now performed in one pass instead of two
	 * removed _filter_cmd_args dimsbuild/main.py
	 * removed calls to Event._add_cli and Event._apply_options; no longer
	supported
	 * removed Build.apply_options; most of this code rolled into
	Build.__init__ dimsbuild/modules/core/installer/logos.py
	 * fixed an error in verify_splash_exists
	[14f04eed2fb0]

	* dimsbuild/modules/core/installer/isolinux.py:
	bug 111 (isolinux.cfg not modified in isolinux/ folder)

	dimsbuild/modules/core/installer/isolinux.py
	 * isolinux event now explicitly modifies the isolinux.cfg file
	contained in the isolinux folder, modifying the title (if
	present) and appending the ks arg (if 'kickstart' event runs)
	[a149e606a652]

	* dbtest/modules/compose.py, dbtest/modules/files.py,
	dbtest/modules/gpgsign.py, dbtest/modules/gpgsign/RPM-GPG-KEY-test,
	dbtest/modules/gpgsign/RPM-GPG-SEC-KEY-test,
	dbtest/modules/gpgsign/__init__.py, dbtest/modules/iso.py,
	dbtest/modules/repos.py, dbtest/modules/sources.py:
	updates/improvements to test code for 'sources' and 'gpgsign

	dbtest/modules/files.py
	 * changed to extension suite dbtest/modules/gpgsign/RPM-GPG-*
	 * added gpg public and secret keys to use for gpg signing
	dbtest/modules/gpgsign/__init__.py
	 * renamed from original file at dbtest/modules/gpgsign.py
	 * changed to extension suite
	 * added appropriate config section dbtest/modules/iso.py
	 * added extension test cases for 'pkglist' event
	dbtest/modules/sources.py
	 * changed to extension
	 * added appropriate config section
	 * added extension test cases for 'source-repos' event
	[a86af244a167]

	* bin/dimsbuild, dbtest/__init__.py, dbtest/core.py,
	dbtest/runtest.py, dimsbuild/main.py:
	removed the -c option; since it is nearly required as is, changed to
	argument

	bin/dimsbuild
	 * added optparser description
	 * removed -c, --distro-conf options
	 * renamed __filter_cmd_args to _filter_cmd_args
	 * _filter_cmd_args now takes a 'keepargs' parameter, which causes the
	filter to automatically keep any arguments that do not start with
	'-' if enabled dbtest/__init__.py
	 * updated to match new Build signature dbtest/core.py
	 * updated to match new Build signature dbtest/runtest.py
	 * added _testpath_normalize, a function that converts user arguments
	into a normalized path that can be used to load modules
	 * runtest.py now accepts multiple arguments, allowing a single
	invocation to test multiple modules dimsbuild/main.py
	 * changed Build.__init__'s signature from __init__(self, options,
	parser) to __init__(self, options, arguments, parser)
	 * Build now looks at arguments for the config files to make
	distributions from instead of options
	[1f1abd354001]

	* dbtest/modules/compose.py, dbtest/modules/custom-repo.py,
	dbtest/modules/files.py, dbtest/modules/gpgsign.py,
	dbtest/modules/publish.py, dbtest/modules/release-files.py,
	dbtest/modules/repos.py, dbtest/modules/sources.py:
	added basic unittest code for every remaining module

	Commit includes: compose, custom-repo, files, gpgsign, release-
	files, repos, and sources

	dbtest/modules/publish.py
	 * added basic test code for 'publish' event
	[da4b999b8191]

2007-12-10  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/installer/logos.py:
	logos: fixed the verify_splash_exists() method

	* dimsbuild/modules/core/installer/logos.py:
	- the failUnlessExists() method was taking a boolean value as a
	parameter instead of a string/Path object.
	[49bf3a2bf2cf]

	* dimsbuild/event/locals.py, dimsbuild/locals.py:
	locals: removed references to THEME_XML; not required
	[7ed6d3801231]

	* dimsbuild/event/fileio.py:
	fileio: removed sort parameter from IOObject.list_output()

	* dimsbuild/event/fileio.py:
	- removed the sort parameter from IOObject; not required
	[e0c524886d25]

	* dimsbuild/modules/core/publish.py:
	Fixed bug 124

	* dimsbuild/modules/core/publish.py:
	- after sync'ing files from the cache folder to the publish folder,
	just modifying the type of the of the publish folder's security
	context to be 'httpd_sys_content_t'.
	[f9a867c18e08]

	* dimsbuild/modules/core/publish.py:
	publish: whitespace cleanup
	[1a32e247e903]

	* dimsbuild/modules/core/init.py:
	init: whitespace cleanup
	[8d8e38ced831]

2007-12-10  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/callback.py:
	callback: SyncCallbackCompressed._cp_start() updates bar title

	In a recent commit, progress bar updating moved from _cp_start to
	_cp_end. This fix splits progress bar updating into two parts: title
	updates and position updates. Title updates are done in
	_cp_start(). Position updates remain in _cp_end.

	progress bar position updating in _cp_end.
	[4942e3eacb97]

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	logos-rpm: difftest variable data cleanup

	* removed duplicate entry for version
	* reference all base vars as self.variable rather than self.cvars
	['base-vars']['variable']
	[93a092502c17]

2007-12-10  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	messed up logos-rpm module merge with Kay's. Fixing.

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- not setting default_obsoletes attribute
	[b7556689cc08]

2007-12-10  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/core/publish.py:
	publish-setup: diffest now tracks pva, not base-vars

	This prevents publish setup from running unnecessarily when
	variables like fullname, product-path, webloc and copyright change.
	[95ceef875f91]

	* dimsbuild/callback.py:
	callback: Bug fix: added _cp_update and _cp_end to SyncCallback
	[6f0fb4cef730]

2007-12-07  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/modules/ALL.py, dbtest/modules/autoclean.py,
	dbtest/modules/bootiso.py, dbtest/modules/comps/__init__.py,
	dbtest/modules/comps/conf.exclude-packages,
	dbtest/modules/comps/conf.groups-by-repo, dbtest/modules/comps/conf
	.include-core-groups, dbtest/modules/comps/conf.include-groups,
	dbtest/modules/comps/conf.include-packages,
	dbtest/modules/comps/conf.multiple-groupfiles,
	dbtest/modules/comps/conf.supplied, dbtest/modules/config-rpm.py,
	dbtest/modules/createrepo/__init__.py,
	dbtest/modules/createrepo/createrepo.conf, dbtest/modules/diskboot-
	image.py, dbtest/modules/download/__init__.py,
	dbtest/modules/gpgcheck.py, dbtest/modules/infofiles.py,
	dbtest/modules/init.py, dbtest/modules/initrd-image.py,
	dbtest/modules/installer.py, dbtest/modules/iso.py,
	dbtest/modules/isolinux.py, dbtest/modules/logos-rpm.py,
	dbtest/modules/logos.py, dbtest/modules/pkglist/__init__.py,
	dbtest/modules/product-image.py, dbtest/modules/publish.py,
	dbtest/modules/pxeboot-images.py, dbtest/modules/release-files.py,
	dbtest/modules/release-rpm.py, dbtest/modules/rpms.py,
	dbtest/modules/software.py, dbtest/modules/sourcevars.py,
	dbtest/modules/stage2-images.py, dbtest/modules/theme-rpm.py,
	dbtest/modules/updates-image.py:
	conversion of test cases to new back end format

	all event test cases converted except for 'pkglist' and 'download'

	dbtest/modules/*.conf
	 * all config files removed dbtest/modules/*
	 * modules now generate their own config via
	config.make_default_config, config.add_config_section, and
	EventTestCase._conf
	[2a880c9a41ee]

	* dbtest/modules/ALL.py, dbtest/modules/ALL/ALL.conf,
	dbtest/modules/ALL/__init__.py, dbtest/modules/autoclean.py,
	dbtest/modules/autoclean/__init__.py,
	dbtest/modules/autoclean/autoclean.conf, dbtest/modules/bootiso.py,
	dbtest/modules/bootiso/__init__.py,
	dbtest/modules/bootiso/bootiso.conf, dbtest/modules/config-rpm.py,
	dbtest/modules/config-rpm/__init__.py, dbtest/modules/config-rpm
	/config-rpm.conf, dbtest/modules/diskboot-image.py, dbtest/modules
	/diskboot-image/__init__.py, dbtest/modules/diskboot-image/diskboot-
	image.conf, dbtest/modules/gpgcheck.py,
	dbtest/modules/gpgcheck/__init__.py, dbtest/modules/gpgcheck/keys-
	missing.conf, dbtest/modules/gpgcheck/keys-missing.repo,
	dbtest/modules/gpgcheck/keys-present.conf, dbtest/modules/gpgcheck
	/keys-present.repo, dbtest/modules/infofiles.py,
	dbtest/modules/infofiles/__init__.py,
	dbtest/modules/infofiles/buildstamp.conf,
	dbtest/modules/infofiles/discinfo.conf,
	dbtest/modules/infofiles/treeinfo.conf, dbtest/modules/init.py,
	dbtest/modules/init/OS.conf, dbtest/modules/init/__init__.py,
	dbtest/modules/init/init.conf, dbtest/modules/init/setup.conf,
	dbtest/modules/initrd-image.py, dbtest/modules/initrd-
	image/__init__.py, dbtest/modules/initrd-image/initrd-image.conf,
	dbtest/modules/installer.py, dbtest/modules/installer/__init__.py,
	dbtest/modules/installer/installer.conf, dbtest/modules/iso.py,
	dbtest/modules/iso/ISO.conf, dbtest/modules/iso/__init__.py,
	dbtest/modules/iso/iso.conf, dbtest/modules/isolinux.py,
	dbtest/modules/isolinux/__init__.py,
	dbtest/modules/isolinux/isolinux.conf, dbtest/modules/logos-rpm.py,
	dbtest/modules/logos-rpm/__init__.py, dbtest/modules/logos-rpm
	/logos-rpm.conf, dbtest/modules/logos.py,
	dbtest/modules/logos/__init__.py, dbtest/modules/logos/centos5.conf,
	dbtest/modules/logos/fedora6.conf,
	dbtest/modules/logos/fedora7.conf,
	dbtest/modules/logos/fedora8.conf,
	dbtest/modules/logos/redhat5.conf, dbtest/modules/product-image.py,
	dbtest/modules/product-image/__init__.py, dbtest/modules/product-
	image/product-image.conf, dbtest/modules/publish.py,
	dbtest/modules/publish/__init__.py, dbtest/modules/publish/publish-
	setup.conf, dbtest/modules/pxeboot-images.py, dbtest/modules
	/pxeboot-images/__init__.py, dbtest/modules/pxeboot-images/pxeboot-
	images.conf, dbtest/modules/release-files.py, dbtest/modules
	/release-files/__init__.py, dbtest/modules/release-
	files/centos5.conf, dbtest/modules/release-files/fedora6.conf,
	dbtest/modules/release-files/fedora7.conf, dbtest/modules/release-
	files/fedora8.conf, dbtest/modules/release-files/input1,
	dbtest/modules/release-files/input2, dbtest/modules/release-
	files/input3, dbtest/modules/release-files/redhat5.conf,
	dbtest/modules/release-rpm.py, dbtest/modules/release-
	rpm/__init__.py, dbtest/modules/release-rpm/release-rpm.conf,
	dbtest/modules/rpms.py, dbtest/modules/rpms/__init__.py,
	dbtest/modules/rpms/rpms.conf, dbtest/modules/software.py,
	dbtest/modules/software/__init__.py,
	dbtest/modules/software/software.conf, dbtest/modules/sourcevars.py,
	dbtest/modules/sourcevars/__init__.py, dbtest/modules/sourcevars
	/source-vars.conf, dbtest/modules/stage2-images.py,
	dbtest/modules/stage2-images/__init__.py,
	dbtest/modules/stage2-images/stage2-images.conf, dbtest/modules
	/theme-rpm.py, dbtest/modules/theme-rpm/__init__.py, dbtest/modules
	/theme-rpm/theme-rpm.conf, dbtest/modules/updates-image.py,
	dbtest/modules/updates-image/__init__.py, dbtest/modules/updates-
	image/outfile, dbtest/modules/updates-image/updates-image.conf:
	interim commit to better show diffs

	Organizing files how they will eventually appear without actually
	applying changes; this allows us to better see the diffs (required
	mostly due to shortcomings in hg, mostly)
	[b8c87f2ad20e]

	* dbtest/__init__.py, dbtest/config.py, dbtest/core.py,
	dbtest/mixins.py, dbtest/rpms.py, dbtest/runtest.py:
	test framework back end improvements (no event conversions)

	Removed reliance on external config files for performing tests.
	Modules can now build their config entirely in memory. This is good
	for a number of reasons; no longer are we cluttering the test tree
	with extra config files, now config and test cases are much closer
	together (the same file), and a great deal of common setup can be
	factored using this method so that test cases don't have to
	'reinvent the wheel', so to speak, each time they want to test
	something.

	As a consequence of the above change, a lot of test cases ended up
	being a single __init__.py file within the module's test folder.
	Therefor, runtest.py now has support for running python files
	directly from the modules folder in addition to the normal support
	of <modid>/__init__.py.

	runtest.py's command line parser was extended slightly to account
	for additional ways to specify events. Leaving the module to test
	blank will test all modules, while specifying the module's id will
	test that specific module. For example, each of the following are
	equivalent

	 # equivalence 1 python runtest.py python runtest.py
	__init__.py

	 # equivalence 2 python runtest.py comps python runtest.py
	comps/__init__.py python runtest.py modules/comps/__init__.py

	A config module was added to assist with the above task of building
	config directly in memory. Two functions are of particular note,
	make_default_config and add_config_section. The first creates a
	skeleton distro.conf file that can be used in the majority of event
	test cases; it includes both 'main' and 'repos' top level elements,
	the second of which is populated with the 'base' repository for
	'fedora-6' by default. This is sufficient for many events that do
	not have their own config; however, it is clearly not enough to
	handle all possible cases. Thus, two other mechanisms exist to
	further modify this config object. The first was already mentioned
	above, the add_config_section function. This function takes a config
	object and a string and attempts to parse the string as XML and
	append it to the config object. The second is via the _conf
	attribute on EventTestCases. This is a string or list of strings
	that will be appended to the config file (using add_config_section)
	before being parsed. In either case, any existing top-level elements
	with the same tag value will be removed first. Note that this is an
	in-place operation, meaning that any changes to the config file will
	be reflected in all test cases that use it; be careful to make as
	many copies of config as you need to prevent interference.

	Added ModuleTestSuite, which is a simple subclass of
	unittest.TestSuite that provides setUp and tearDown methods, much
	like unittest.TestCase already has. This allows the tester to do
	certain things before and/or after a set of tests has completed.
	Currently, this is used to clean up the .dat autofiles used by the
	rpm events to record their releases between sessions.

	Event conversions will follow in a subsequent commit

	dbtest/__init__.py
	 * added ModuleTestSuite, which defines setUp and tearDown methods
	analagous to those in unittest.TestCase
	 * EventTestCase.__init__ now does not require that the conf argument
	be specified. If it is not, it makes a default config using
	config's make_default_config function.
	 * updated make_suite to work with both file- and directory-based
	modules dbtest/config.py
	 * new module for constructing config objects in memory
	 * see descrpition above and documentation inside for details
	 * contains repo data for fedora 6, 7, and 8, centos 5, and redhat 5
	dbtest/core.py
	 * removed unnecessary __init__ methods
	 * removed main block
	 * make_extension_suite now automatically includes the tests from
	make_core_suite; as such, it is unnecessary to include both when
	making test cases dbtest/mixins.py
	 * removed unnecessary __init__ methods
	 * made config optional on all mixin classes dbtest/rpms.py
	 * removed unnecessary __init__ methods dbtest/runtest.py
	 * improved command line arg parser; see description above
	[2a098df98a6e]

2007-12-07  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/locals.py, dimsbuild/modules/core/rpms/logos-rpm.py:
	adding copyright information to images used by anaconda

	* dimsbuild/locals.py:
	- added locals information about images to which text is to be added;
	these images are used by anaconda

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- adding text to the images whose locals dictionary information tells
	us to do so.
	[d12aadfecdf4]

	* dimsbuild/main.py:
	dimsbuild/main: setting default copyright to empty string

	* dimsbuild/main.py:
	- setting default copyright to empty string instead of None
	[3e268386652e]

	* dimsbuild/main.py, share/dimsbuild/schemas/distro.conf/main.rng:
	added support for copyright element in <main/>

	* dimsbuild/main.py:
	- sets the Event.bv['copyright'] base variable to be the result of the
	'/distro/main/copyright/text()' XPath query; if not found sets it to
	None.

	* share/dimsbuild/schemas/distro.conf/main.rng:
	- allows for the optional <copyright/> element in the <main/> element
	[0eb90af2f349]

	* dimsbuild/event/locals.py, dimsbuild/locals.py,
	dimsbuild/modules/core/rpms/logos-rpm.py:
	syslinux-splash file's format and name is anaconda-version dependent

	* dimsbuild/locals.py:
	- the LOGOS_RPM locals dictionary just contains the information about
	the syslinux-splash images and their formats and names based on
	anaconda versions.

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- using the locals dictionary to generate the syslinux-splash images
	[f7ba31946fef]

	* dimsbuild/locals.py:
	locals: whitespace cleanup
	[ccd07d73c31e]

	* dimsbuild/modules/core/rpms/custom-repo.py,
	dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	rpms: code cleanup
	[d730eba9752c]

2007-12-06  Uday Prakash  <uprakash@abodiosoftware.com>

	* dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/shared/rpms.py:
	logos-rpm: using F8's generic logos in the custom logos RPM

	* dimsbuild/modules/shared/rpms.py:
	- RpmBuildMixin's __init__() method takes in an optional 'rpm_license'
	parameter that can be used to specify the license of the RPM

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	- copying images from shared folder to be used in the RPM.
	[9e7785bfe04f]

	* dimsbuild/modules/core/rpms/logos-rpm.py:
	* logos-rpm: whitespace cleanup
	[f30a28b14272]

2007-12-07  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/core/repos.py:
	repos: bumped version
	[9fde16e50087]

	* dimsbuild/modules/core/repos.py, dimsbuild/modules/core/rpms/logos-
	rpm.py:
	repos: modified rpm regex to catch non-digit versions
	[6ae87af94ffc]

2007-12-07  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* __init__.py, dbtest/mixins.py, dbtest/runtest.py,
	dimsbuild/callback.py, dimsbuild/modules/core/installer/logos.py,
	dimsbuild/modules/extensions/software/gpgsign.py,
	dimsbuild/modules/shared/rpms.py:
	various bugfixes

	dbtest/mixins.py
	 * fixed bug in the case when an event didn't have a config section
	when trying to use ImageModifyMixinTestCase (should never happen
	regardless) dbtest/runtest.py
	 * whitespace(?) dimsbuild/callback.py
	 * SyncCallbackCompressed now doesn't count an item until its has been
	completely downloaded (the problem with the converse can be seen if
	the last file to download is large - the progressbar will sit at
	100% the entire time it downloads, seemingly indicating that
	something else is happening)
	dimsbuild/modules/core/installer/logos.py
	 * added verification of pixmaps folder
	dimsbuild/modules/extensions/software/gpgsign.py
	 * fixed gpg-passphrase obtaining when the passphrase is empty (again)
	dimsbuild/modules/shared/rpms.py
	 * only change the autofile's stat values if the config file actually
	exists
	[4b28f7cc380f]

2007-12-07  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/core/installer/xen-images.py:
	xen-images: bumped version
	[df8a76a22b37]

	* dimsbuild/callback.py, dimsbuild/event/fileio.py, dimsbuild/main.py,
	dimsbuild/modules/core/compose.py,
	dimsbuild/modules/core/publish.py, dimsbuild/modules/core/rpms
	/custom-repo.py, dimsbuild/modules/core/software/download.py,
	dimsbuild/modules/core/software/gpgcheck.py,
	dimsbuild/modules/extensions/software/gpgsign.py,
	dimsbuild/modules/shared/repos.py:
	callbacks: added SyncCallbackCompressed, other fileio callback
	enhancements

	This commit contains several major changes.
	* The addition of the SyncCallbackCompressed, a new callback that
	displays a single progress bar rather than one bar per file.
	* The removal of FilesCallback and the addition of LinkCallback.
	Former FilesCallback methods are now provided in LinkCallback and
	exposed in all sync callbacks (SyncCallback, CachedSyncCallback, and
	SyncCallbackCompressed) via subclassing.
	* The addition of a 'text' parameter to the fileio.sync_input method.
	The parameter value is passed along to the appropriate callback,
	which uses it to display the heading proceeding sync operations.
	The default value is 'downloading files'. If the parameter
	evaluates to false, the heading line is suppressed.
	* Related to the above change, modified several events (compose,
	publish, custom-repos, download, gpgcheck, gpgsign, repos) to
	provide the new text parameter rather than the heavyweight
	alternative which was to implement custom callbacks objects and pass
	them along to the sync_input function.

	dimsbuild/callback.py
	* Removed FilesCallback
	* Added LinkCallback which extends _SyncCallbackMetered. Sync callback
	methods are stubbed out since the default display when linking is
	silent.
	* SyncCallback extends LinkCallback rather than _SyncCallbackMetered
	* Added SyncCallbackCompressed

	dimsbuild/event/fileio.py
	* sync_input: changed 'cb' parameter to 'callback'
	* sync_input: added 'text' parameter and documentation
	* sync_input: modified callback selection logic (kinda messy)
	* clean_eventcache: changed 'cb' parameter to 'callback'

	dimsbuild/main.py
	* modified Event.link_callback declaration to use LinkCallback instead
	of 'None'
	* added Event.copy_callback_compressed as a shortcut for events
	wishing to use it (currently only gpgsign)

	dimsbuild/modules/core/compose.py
	* removed ComposeCallback (used to silence display)
	* providing text='None' to sync_input instead

	dimsbuild/modules/core/publish.py
	* removed PublishFilesCallback (used to silence display)
	* providing text='None' to sync_input instead

	dimsbuild/modules/core/rpms/custom-repo.py
	* removed resetting of files_callback.sync_start function
	* providing text parameter to sync_input instead

	dimsbuild/modules/core/software/download.py
	* removed RepoFilesCallback
	* providing text=("downloading packages - %s" % repo') to sync_input
	instead

	dimsbuild/modules/core/software/gpgcheck.py
	* removed GPGFilesCallback
	* providing text=("downloading gpgkeys - %s" % repo') to sync_input
	instead

	dimsbuild/modules/extensions/software/gpgsign.py
	* removed GpgSignFilesCallback
	* removed GpgSignSyncCallback (obsoleted by SyncCallbackCompressed)
	* using new sync_input text and callback parameters

	dimsbuild/modules/shared/repos.py
	* removed RepoFilesCallback (used to silence display)
	* providing text='None' to sync_input instead
	[10e3d86f58b1]

2007-12-06  Uday Prakash  <uprakash@abodiosoftware.com>

	* dbtest/modules/pkglist/__init__.py:
	test/pkglist: fixed test cases to reflect pkglist changes

	* dbtest/modules/pkglist/__init__.py:
	- fixed the test case for supplied pkglist, to read the pkglist
	correctly
	- fixed the test case for gaim to expect either libpurple or pidgin to
	replace gaim.
	[f272742dfcb5]

	* dimsbuild/modules/core/software/pkglist.py:
	pkglist: code cleanup and comments

	* dimsbuild/modules/core/software/pkglist.py:
	- if repositories changed, force depsolve
	- if updates available, force depsolve
	[30c82eea0fa7]

	* dimsbuild/modules/core/software/pkglist.py:
	pkglist: don't reinstall already installed package in transcation
	set.
	[1d837f0a1aa1]

	* lib/dimsbuild/callback.py:
	pkglist: not incrementally depsolving if packages are
	removed/updated

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- if there are any packages to be removed or updated , not populating
	the (fake) RPM database.
	- if packages are being added, populating the (fake) RPM database
	using information from pkglist's previous run.
	[edd45209ba0c]

2007-12-05  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/callback.py:
	pkglist: code cleanup
	[2b298770f351]

2007-12-06  Kay Williams  <kwilliams@abodiosoftware.com>

	* dimsbuild/modules/extensions/software/gpgsign.py:
	gpgsign: log output cleanup

	* suppress "downloading files" header
	* print a single status bar for all rpms as they are copied
	[34292eaef4a8]

	* dimsbuild/callback.py:
	callback: printing "done" in place of filename at end of GpgCallback

	Also adding back minor text change in FilesCallback: "downloading
	input files" -> "downloading files"
	[017c1d6f4d33]

2007-12-06  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dimsbuild/main.py, dimsbuild/modules/core/software/comps.py:
	fixed bug in reversion for CompsEvent.comps_supplied
	[f66d20670f88]

	* dimsbuild/main.py, dimsbuild/validate.py:
	applied same validation fixes to MainConfigValidator

	dimsbuild/validate.py
	 * same fixes to MainConfigValidator as ConfigValidator (passing a
	config path, reparsing as xmllib.tree instead of xmllib.config)
	(Actually, techincally the superclass has changed, so all
	BaseConfigValidator objects would be affected by this fix.)
	[682f361f4ed7]

	* dimsbuild/main.py, dimsbuild/modules/core/software/comps.py,
	dimsbuild/validate.py:
	validation optimizations and improvements

	dimsbuild/main.py
	 * validator now only validates a given module once; previously,
	multiple events from the same module would cause validation to
	occur more than once dimsbuild/modules/core/software/comps.py
	 * reverted CompsEvent.comps_supplied change from a few days ago due to
	xmllib changes dimsbuild/validate.py
	 * fixed what I assume was a typo in validate_with_string; we haven't
	seen because I don't think we use this method
	 * ConfigValidator now expects a config path, rather than a config
	object; the validator reparses the config path using xmllib.tree
	rather than xmllib.config so that accurate line numbers and
	formatting can be preserved to the user in the event of an error
	 * fixed typing issue
	[c502aa5bd1db]

2007-12-05  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* dbtest/Makefile, dbtest/__init__.py, dbtest/core.py,
	dbtest/mixins.py, dbtest/modules/ALL/ALL.conf,
	dbtest/modules/ALL/__init__.py, dbtest/modules/__init__.py,
	dbtest/modules/autoclean/__init__.py,
	dbtest/modules/autoclean/autoclean.conf,
	dbtest/modules/bootiso/__init__.py,
	dbtest/modules/bootiso/bootiso.conf,
	dbtest/modules/comps/__init__.py, dbtest/modules/comps/comps.xml,
	dbtest/modules/comps/conf.exclude-packages,
	dbtest/modules/comps/conf.groups-by-repo, dbtest/modules/comps/conf
	.include-core-groups, dbtest/modules/comps/conf.include-groups,
	dbtest/modules/comps/conf.include-packages,
	dbtest/modules/comps/conf.multiple-groupfiles,
	dbtest/modules/comps/conf.supplied, dbtest/modules/config-
	rpm/__init__.py, dbtest/modules/config-rpm/config-rpm.conf,
	dbtest/modules/createrepo/RPM-GPG-KEY-test,
	dbtest/modules/createrepo/RPM-GPG-SEC-KEY-test,
	dbtest/modules/createrepo/__init__.py,
	dbtest/modules/createrepo/createrepo.conf, dbtest/modules/diskboot-
	image/__init__.py, dbtest/modules/diskboot-image/diskboot-
	image.conf, dbtest/modules/download/Makefile,
	dbtest/modules/download/__init__.py, dbtest/modules/download
	/download-test-repos.xml, dbtest/modules/download/f8.conf,
	dbtest/modules/download/f8.repo,
	dbtest/modules/gpgcheck/__init__.py, dbtest/modules/gpgcheck/keys-
	missing.conf, dbtest/modules/gpgcheck/keys-missing.repo,
	dbtest/modules/gpgcheck/keys-present.conf, dbtest/modules/gpgcheck
	/keys-present.repo, dbtest/modules/infofiles/__init__.py,
	dbtest/modules/infofiles/buildstamp.conf,
	dbtest/modules/infofiles/discinfo.conf,
	dbtest/modules/infofiles/treeinfo.conf, dbtest/modules/init/OS.conf,
	dbtest/modules/init/__init__.py, dbtest/modules/init/init.conf,
	dbtest/modules/init/setup.conf, dbtest/modules/initrd-
	image/__init__.py, dbtest/modules/initrd-image/initrd-image.conf,
	dbtest/modules/installer/__init__.py,
	dbtest/modules/installer/installer.conf,
	dbtest/modules/iso/ISO.conf, dbtest/modules/iso/__init__.py,
	dbtest/modules/iso/iso.conf, dbtest/modules/isolinux/__init__.py,
	dbtest/modules/isolinux/isolinux.conf, dbtest/modules/logos-
	rpm/__init__.py, dbtest/modules/logos-rpm/logos-rpm.conf,
	dbtest/modules/logos/__init__.py, dbtest/modules/logos/centos5.conf,
	dbtest/modules/logos/fedora6.conf,
	dbtest/modules/logos/fedora7.conf,
	dbtest/modules/logos/fedora8.conf,
	dbtest/modules/logos/redhat5.conf, dbtest/modules/pkglist/Makefile,
	dbtest/modules/pkglist/__init__.py,
	dbtest/modules/pkglist/bug108.conf,
	dbtest/modules/pkglist/bug84.conf,
	dbtest/modules/pkglist/bug85.conf,
	dbtest/modules/pkglist/bug86.conf, dbtest/modules/pkglist/pkglist,
	dbtest/modules/pkglist/pkglist-test-repos1.xml,
	dbtest/modules/pkglist/pkglist-test-repos2.xml,
	dbtest/modules/pkglist/pkglist-test-repos3.xml,
	dbtest/modules/pkglist/pkglist.conf,
	dbtest/modules/pkglist/supplied.conf, dbtest/modules/product-
	image/__init__.py, dbtest/modules/product-image/product-image.conf,
	dbtest/modules/publish/__init__.py, dbtest/modules/publish/publish-
	setup.conf, dbtest/modules/pxeboot-images/__init__.py,
	dbtest/modules/pxeboot-images/pxeboot-images.conf, dbtest/modules
	/release-files/__init__.py, dbtest/modules/release-
	files/centos5.conf, dbtest/modules/release-files/fedora6.conf,
	dbtest/modules/release-files/fedora7.conf, dbtest/modules/release-
	files/fedora8.conf, dbtest/modules/release-files/input1,
	dbtest/modules/release-files/input2, dbtest/modules/release-
	files/input3, dbtest/modules/release-files/redhat5.conf,
	dbtest/modules/release-rpm/__init__.py, dbtest/modules/release-rpm
	/release-rpm.conf, dbtest/modules/rpms/__init__.py,
	dbtest/modules/rpms/rpms.conf, dbtest/modules/software/__init__.py,
	dbtest/modules/software/software.conf,
	dbtest/modules/sourcevars/__init__.py, dbtest/modules/sourcevars
	/source-vars.conf, dbtest/modules/stage2-images/__init__.py,
	dbtest/modules/stage2-images/stage2-images.conf, dbtest/modules
	/theme-rpm/__init__.py, dbtest/modules/theme-rpm/theme-rpm.conf,
	dbtest/modules/updates-image/__init__.py, dbtest/modules/updates-
	image/outfile, dbtest/modules/updates-image/updates-image.conf,
	dbtest/rpms.py, dbtest/runtest.py, test/Makefile, test/__init__.py,
	test/core.py, test/mixins.py, test/modules/ALL/ALL.conf,
	test/modules/ALL/__init__.py, test/modules/__init__.py,
	test/modules/autoclean/__init__.py,
	test/modules/autoclean/autoclean.conf,
	test/modules/bootiso/__init__.py, test/modules/bootiso/bootiso.conf,
	test/modules/comps/__init__.py, test/modules/comps/comps.xml,
	test/modules/comps/conf.exclude-packages, test/modules/comps/conf
	.groups-by-repo, test/modules/comps/conf.include-core-groups,
	test/modules/comps/conf.include-groups, test/modules/comps/conf
	.include-packages, test/modules/comps/conf.multiple-groupfiles,
	test/modules/comps/conf.supplied, test/modules/config-
	rpm/__init__.py, test/modules/config-rpm/config-rpm.conf,
	test/modules/createrepo/RPM-GPG-KEY-test, test/modules/createrepo
	/RPM-GPG-SEC-KEY-test, test/modules/createrepo/__init__.py,
	test/modules/createrepo/createrepo.conf, test/modules/diskboot-
	image/__init__.py, test/modules/diskboot-image/diskboot-image.conf,
	test/modules/download/Makefile, test/modules/download/__init__.py,
	test/modules/download/download-test-repos.xml,
	test/modules/download/f8.conf, test/modules/download/f8.repo,
	test/modules/gpgcheck/__init__.py, test/modules/gpgcheck/keys-
	missing.conf, test/modules/gpgcheck/keys-missing.repo,
	test/modules/gpgcheck/keys-present.conf, test/modules/gpgcheck/keys-
	present.repo, test/modules/infofiles/__init__.py,
	test/modules/infofiles/buildstamp.conf,
	test/modules/infofiles/discinfo.conf,
	test/modules/infofiles/treeinfo.conf, test/modules/init/OS.conf,
	test/modules/init/__init__.py, test/modules/init/init.conf,
	test/modules/init/setup.conf, test/modules/initrd-image/__init__.py,
	test/modules/initrd-image/initrd-image.conf,
	test/modules/installer/__init__.py,
	test/modules/installer/installer.conf, test/modules/iso/ISO.conf,
	test/modules/iso/__init__.py, test/modules/iso/iso.conf,
	test/modules/isolinux/__init__.py,
	test/modules/isolinux/isolinux.conf, test/modules/logos-
	rpm/__init__.py, test/modules/logos-rpm/logos-rpm.conf,
	test/modules/logos/__init__.py, test/modules/logos/centos5.conf,
	test/modules/logos/fedora6.conf, test/modules/logos/fedora7.conf,
	test/modules/logos/fedora8.conf, test/modules/logos/redhat5.conf,
	test/modules/pkglist/Makefile, test/modules/pkglist/__init__.py,
	test/modules/pkglist/bug108.conf, test/modules/pkglist/bug84.conf,
	test/modules/pkglist/bug85.conf, test/modules/pkglist/bug86.conf,
	test/modules/pkglist/pkglist, test/modules/pkglist/pkglist-test-
	repos1.xml, test/modules/pkglist/pkglist-test-repos2.xml,
	test/modules/pkglist/pkglist-test-repos3.xml,
	test/modules/pkglist/pkglist.conf,
	test/modules/pkglist/supplied.conf, test/modules/product-
	image/__init__.py, test/modules/product-image/product-image.conf,
	test/modules/publish/__init__.py, test/modules/publish/publish-
	setup.conf, test/modules/pxeboot-images/__init__.py, test/modules
	/pxeboot-images/pxeboot-images.conf, test/modules/release-
	files/__init__.py, test/modules/release-files/centos5.conf,
	test/modules/release-files/fedora6.conf, test/modules/release-
	files/fedora7.conf, test/modules/release-files/fedora8.conf,
	test/modules/release-files/input1, test/modules/release-
	files/input2, test/modules/release-files/input3, test/modules
	/release-files/redhat5.conf, test/modules/release-rpm/__init__.py,
	test/modules/release-rpm/release-rpm.conf,
	test/modules/rpms/__init__.py, test/modules/rpms/rpms.conf,
	test/modules/software/__init__.py,
	test/modules/software/software.conf,
	test/modules/sourcevars/__init__.py, test/modules/sourcevars/source-
	vars.conf, test/modules/stage2-images/__init__.py,
	test/modules/stage2-images/stage2-images.conf, test/modules/theme-
	rpm/__init__.py, test/modules/theme-rpm/theme-rpm.conf, test/modules
	/updates-image/__init__.py, test/modules/updates-image/outfile,
	test/modules/updates-image/updates-image.conf, test/rpms.py,
	test/runtest.py:
	renamed 'test' to 'dbtest' to avoid name conflicts with python
	'test' module
	[3864dbefb4df]

	* dimsbuild/__init__.py, dimsbuild/callback.py,
	dimsbuild/constants.py, dimsbuild/event/__init__.py,
	dimsbuild/event/diff.py, dimsbuild/event/fileio.py,
	dimsbuild/event/loader.py, dimsbuild/event/locals.py,
	dimsbuild/event/verify.py, dimsbuild/locals.py,
	dimsbuild/logging.py, dimsbuild/main.py,
	dimsbuild/modules/__init__.py, dimsbuild/modules/core/__init__.py,
	dimsbuild/modules/core/autoclean.py,
	dimsbuild/modules/core/compose.py, dimsbuild/modules/core/init.py,
	dimsbuild/modules/core/installer/__init__.py,
	dimsbuild/modules/core/installer/bootiso.py,
	dimsbuild/modules/core/installer/diskboot-image.py,
	dimsbuild/modules/core/installer/infofiles.py,
	dimsbuild/modules/core/installer/initrd-image.py,
	dimsbuild/modules/core/installer/isolinux.py,
	dimsbuild/modules/core/installer/logos.py,
	dimsbuild/modules/core/installer/product-image.py,
	dimsbuild/modules/core/installer/pxeboot-images.py,
	dimsbuild/modules/core/installer/release-files.py,
	dimsbuild/modules/core/installer/stage2-images.py,
	dimsbuild/modules/core/installer/updates-image.py,
	dimsbuild/modules/core/installer/xen-images.py,
	dimsbuild/modules/core/publish.py, dimsbuild/modules/core/repos.py,
	dimsbuild/modules/core/rpms/__init__.py, dimsbuild/modules/core/rpms
	/custom-repo.py, dimsbuild/modules/core/rpms/logos-rpm.py,
	dimsbuild/modules/core/rpms/release-rpm.py,
	dimsbuild/modules/core/software/__init__.py,
	dimsbuild/modules/core/software/comps.py,
	dimsbuild/modules/core/software/createrepo.py,
	dimsbuild/modules/core/software/download.py,
	dimsbuild/modules/core/software/gpgcheck.py,
	dimsbuild/modules/core/software/pkglist.py,
	dimsbuild/modules/core/sourcevars.py,
	dimsbuild/modules/extensions/__init__.py,
	dimsbuild/modules/extensions/files.py,
	dimsbuild/modules/extensions/installer/__init__.py,
	dimsbuild/modules/extensions/installer/kickstart.py,
	dimsbuild/modules/extensions/iso.py,
	dimsbuild/modules/extensions/rpms/__init__.py,
	dimsbuild/modules/extensions/rpms/config-rpm.py,
	dimsbuild/modules/extensions/rpms/theme-rpm.py,
	dimsbuild/modules/extensions/software/__init__.py,
	dimsbuild/modules/extensions/software/gpgsign.py,
	dimsbuild/modules/extensions/sources.py,
	dimsbuild/modules/shared/__init__.py,
	dimsbuild/modules/shared/bootcfg.py,
	dimsbuild/modules/shared/createrepo.py,
	dimsbuild/modules/shared/installer.py,
	dimsbuild/modules/shared/repos.py, dimsbuild/modules/shared/rpms.py,
	dimsbuild/repo.py, dimsbuild/splittree.py, dimsbuild/validate.py,
	dimsbuild/verify.py, lib/dimsbuild/__init__.py,
	lib/dimsbuild/callback.py, lib/dimsbuild/constants.py,
	lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/event/loader.py,
	lib/dimsbuild/event/locals.py, lib/dimsbuild/event/verify.py,
	lib/dimsbuild/locals.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/__init__.py,
	lib/dimsbuild/modules/core/__init__.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/compose.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/custom-repo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/__init__.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/installer/__init__.py,
	lib/dimsbuild/modules/extensions/installer/kickstart.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/__init__.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/extensions/software/__init__.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/bootcfg.py,
	lib/dimsbuild/modules/shared/createrepo.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/repos.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/repo.py,
	lib/dimsbuild/splittree.py, lib/dimsbuild/validate.py,
	lib/dimsbuild/verify.py:
	'lib/dimsbuild' moved to 'dimsbuild/' for better python path support

	This change allows us to use one pythonpath for both running and
	testing dimsbuild
	[ff8fe2fcd933]

	* __init__.py, lib/dimsbuild/main.py, lib/dimsbuild/modules/core/rpms
	/logos-rpm.py, lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	factoring of RPM building code

	__init__.py
	 * allow dimsbuild to be imported directly (in preparation for tree
	reorg) lib/dimsbuild/modules/core/rpms/logos-rpm.py
	 * removed check(); allows fallback to RpmBuildMixin
	lib/dimsbuild/modules/core/rpms/release-rpm.py
	 * changed DATA['config'] from '*' to '.'
	 * removed check(); allows fallback to RpmBuildMixin
	lib/dimsbuild/modules/core/software/comps.py
	 * changed a config.get() to account for returning a non-empty
	whitespace string (this will be changed back once config changes
	go in) lib/dimsbuild/modules/extensions/rpms/config-rpm.py
	 * removed check(); allows fallback to RpmBuildMixin
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py
	 * removed check(); allows fallback to RpmBuildMixin
	lib/dimsbuild/modules/shared/rpms.py
	 * added check method formerly found in the various rpm build events
	[8c5f440e914e]

2007-12-06  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/callback.py:
	SyncCallback: fixed typo in documentation
	[f27c66322779]

	* lib/dimsbuild/callback.py:
	filesCallback: changed "downloading input files" to "downloading
	files"
	[51ae1b28c14b]

2007-12-05  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/installer/diskboot-image.py:
	diskboot-image: readded diskboot-image-content conditionally
	requires

	for extensibility
	[39134b3ac4fd]

	* lib/dimsbuild/modules/core/installer/diskboot-image.py:
	diskboot-image: requires isolinux-files, other requires cleanup

	diskboot-image.py
	* requires: added isolinux-files - needed for ordering diskboot-image
	after initrd-image
	* requires: removed boot-config-file - since diskboot-image uses
	syslinux.cfg from source image
	* conditionally_requires: removed diskboot-image-content - not
	provided by any event
	[704850c57929]

	* lib/dimsbuild/modules/shared/bootcfg.py:
	bootcfg.py: process bootcfg even if no boot_args specified

	to allow for menu title updating
	[4e4d69bbe6c8]

2007-12-04  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/shared/bootcfg.py:
	bootcfg: prepending "menu title" to "Welcome..."

	bootcfg was adding incomplete title lines to iso/syslinux.cfg files.

	was: "Welcome to <fullname>!" now: "menu title Welcome to
	<fullname>!"
	[da58adf761ed]

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: minor display improvements for invalid signature error

	Printing each rpm on a single line rather than printing the python
	list
	[e3c3599c49d7]

	* lib/dimsbuild/validate.py:
	validate: friendly error if <include> found as top-level element

	Suggest adding XInclude namespace declaration (as if that is a
	friendly thing to have to do...)
	[3628180c48f7]

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py:
	logos-rpm: added comment about ImageMagick rpm dependency
	[0533dd8bb2fa]

2007-12-03  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng:
	config-rpm: added support for 'noreplace' attribute (bug 113).

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- the config-rpm events marks all the files specified in the <file/>
	element as config files; whether or not they 'noreplace'-able
	depends on the value of the 'noreplace' attribute's value. Files
	have 'noreplace' set to True by default.
	[73f94f0d50b1]

2007-12-03  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py:
	logos-rpm/release-rpm: updated requires and variables difftest data

	logos-rpm: added anaconda-version, [base-vars][fullname] and [base-
	vars][version] to difftest data

	release-rpm: removed source-vars from event requires statement, no
	longer needed since release notes no longer use the background color
	from the base distribution.
	[6e4c4bd735b0]

2007-11-30  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/shared/installer.py:
	better fix for bug 111

	lib/dimsbuild/modules/core/installer/xen-images.py
	 * no longer calls self._modify(clean=True); clean attribute no longer
	supported
	 * no longer calls.self.io.clean_eventcache(); not needed
	lib/dimsbuild/modules/shared/installer.py
	 * added cleanup of output files in self.imagedir before writing
	directory to image. This keeps us from erroneously copying older
	files to the image when they have been removed from config. The
	next step is to use the existing image, if available.
	[8cf64e4cf2d4]

	* lib/dimsbuild/modules/shared/bootcfg.py:
	preliminary fix to bug 111 (isolinux.cfg/syslinux.cfg menu title)

	lib/dimsbuild/modules/shared/bootcfg.py
	 * replaces 'menu title Welcome to .*!' with 'menu title Welcome to
	%s!' % Event.fullname
	[88521fb73272]

2007-11-30  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/installer/xen-images.py:
	xen-images: bumped event version
	[548a5741a043]

2007-11-30  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/installer.py:
	docstring fixes
	[bd571fdd84a9]

	* lib/dimsbuild/event/diff.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/core/installer/xen-
	images.py, lib/dimsbuild/modules/shared/installer.py:
	bug 110 - xen-images event flaws

	Bug 110 actually turned out to be 3 bugs: 1) Calling
	Event.diff.setup() more than once would create a handler for each
	input type for each time called; this resulted in metadata files
	with multiple top-level elements of the same name and content
	2) Event.io.setup_sync() would add the same file more than once to
	the list of files to sync, which resulted in the sync operation
	being performed more than once and multiple copies of the file
	appearing in metadata 3) Running ImageModifyMixin._modify() after
	FileDownloadMixin._download() in XenImagesEvent was clearing out
	the output downloaded by the latter mixin

	To fix these bugs, the following was implemented: 1) Calling
	Event.diff.setup() only creates a handler if such a handler does
	not already exist 2) Several data structures in Event.io were
	converted to sets instead of lists, meaning that multiple
	additions of the same value are not included 3)
	ImageModifyMixin._modify() gained an additional argument, clean,
	which controls whether or not to clean the metadata directory
	before running (This is still under investigation; the 'better'
	solution is to not clean at all and merely remove the obsolete
	files from the modified image; this is proving to be more
	difficult than anticipated.)

	lib/dimsbuild/event/diff.py
	 * Event.diff.setup(), if called more than once, no longer creates
	multiple instances of each handler type
	lib/dimsbuild/event/fileio.py
	 * Event.io.sync_items and Event.io.chmod_items changed to sets from
	lists to ensure the same items are not added multiple times
	 * Event.io.setup_sync now treats InputHandler.idata and
	OutputHandler.odata as sets (only adds items that are not already
	present, in particular) lib/dimsbuild/main.py
	 * documentation
	 * added Build.mainconfig and Build.distroconfig; this prevents the
	necessity of passing around these variables to nearly every
	initialization method
	 * Build._get_config() no longer returns mainconfig and distroconfig;
	instead, it populates Build.mainconfig and Build.distroconfig
	 * Build._compute_import_dirs() no longer accepts mainconfig as an
	argument
	 * Build._compute_modules() no longer accepts distroconfig as an
	argument
	 * Build._seed_event_defaults() no longer accepts mainconfig or
	distroconfig as arguments lib/dimsbuild/modules/core/installer
	/xen-images.py]
	 * XenImagesEvent.run() now explicitly calls Event.io.clear_eventcache
	 * XenImagesEvent.run() now calls _modify(clean=False) to prevent
	cleaning up the former output of FileDownloadMixin
	lib/dimsbuild/modules/shared/installer.py
	 * ImageModifyMixin._modify() now accepts 'clean' as an argument; this
	boolean value determines whether ImageModifyMixin should call
	io.clean_eventcache before modifying the image
	[c52d9631fae5]

2007-11-30  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/release-rpm.py:
	release-rpm: bumped event version
	[fc17b1e3d02b]

2007-11-30  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/locals.py, lib/dimsbuild/modules/core/rpms/release-
	rpm.py:
	release-rpm: Fixed bug 87.

	* lib/dimsbuild/locals.py:
	- changed the RELEASE_HTML local dictionary to have '0' map to
	'<html/>' so that the HTML file created is a white, empty page
	instead of colored page we were generating before.

	* lib/dimsbuild/modules/core/rpms/release-rpm.py:
	- ReleaseRpmEvent doesn't extend ColorMixin anymore.
	[60cac2f59545]

	* test/modules/pkglist/__init__.py, test/modules/pkglist/bug108.conf:
	test/pkglist: added new test cases for Bug 108

	* test/modules/pkglist:
	- reorganized the test cases; for some reason running pkglist multiple
	times in the same test case was causing issues
	- added test cases for Bug 108 to ensure that the gaim and pidgin
	packages are in the package list iff they are expected
	[a8055eac7191]

	* lib/dimsbuild/modules/core/software/pkglist.py:
	pkglist: Fixed Bug 108

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- overriding DepSolver.tsCheck() in IDepSolver
	- IDepsolver.tsCheck() creates a mapping of package name to all the
	package tuples of the packages it brings out. This mapping is stored
	in the cache for use in future runs of dimsbuild.
	- if a user-required package is not found, raising a DepSolver
	exception.
	[28297c773870]

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	config-rpm: re-reading <script/> element to create auto.sh

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- was using the IOObject.list_output() to get the list of files to
	write to the auto.sh. Instead of doing that, now, re-reading the
	<script/> elements from the config-rpm's config section and writing
	the auto.sh file.
	[f9391dcfa1bc]

2007-11-29  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py:
	bug 109 (file modes on output)

	lib/dimsbuild/event/fileio.py
	 * bug 109 fix - HttpPathStat instances to have a 'mode' attribute;
	however, it only contains the file type section, not the
	permission bits. Thus, the code was computing that the
	permissions on all files was '000' and setting the mode
	accordingly. (The only places where we weren't seeing this were
	where we were explicitly setting it otherwise) lib/dimsbuild/main.py
	 * documentation lib/dimsbuild/modules/shared/rpms.py
	 * removed dependency and import of os module; using pps methods
	instead
	[1fd777ed8e91]

	* lib/dimsbuild/callback.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/logging.py, lib/dimsbuild/magic.py,
	lib/dimsbuild/misc.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py:
	documentation of callback, locals, logging

	lib/dimsbuild/callback.py
	 * documentation
	 * GpgCallback.repoCheck() now no longer accepts 'repo' argument
	(wasn't used) lib/dimsbuild/locals.py
	 * documentation
	 * added RemoveObject class, a simple dummy class for use with REMOVE
	(below)
	 * added REMOVE, an instance of RemoveObject. Instead of using None to
	remove keys from dictionaries, REMOVE should now be used.
	lib/dimsbuild/logging.py
	 * documentation

	lib/dimsbuild/magic.py
	 * removed, moved into dimscommon lib/dimsbuild/misc.py
	 * removed, all functions were unused
	[8132a45eeae4]

2007-11-28  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/comps.py:
	typo fix
	[572b95a6b066]

	* docsrc/comps.rng, lib/dimsbuild/modules/core/software/comps.py,
	share/dimsbuild/schemas/distro.conf/bootiso.rng,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/diskboot-image.rng,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/gpgsign.rng,
	share/dimsbuild/schemas/distro.conf/initrd-image.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/isolinux.rng,
	share/dimsbuild/schemas/distro.conf/kickstart.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/product-image.rng,
	share/dimsbuild/schemas/distro.conf/publish.rng,
	share/dimsbuild/schemas/distro.conf/release-files.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/updates-image.rng:
	bug 107, added 'enabled' attributes to all config elements

	docsrc/comps.rng
	 * change to documentation of 'default' attribute on 'group' elements
	to indicate that when not specified, default is set to 'true'
	lib/dimsbuild/modules/core/software/comps.py
	 * implemented code for the 'default' attribute on 'group' elements -
	when not specified, set to 'true'; when specified and not
	'default', set to the specified value; when specified and
	'default', set to the value in the original comps file
	share/dimsbuild/schemas/distro.conf/*.rng
	 * for files that already had the 'enabled' attribute on their top
	level config element, changed the value from 'value-boolean-with-
	default' to 'value- boolean'
	 * for files that did not already have the 'enabled' attribute on their
	top level config element, added it
	[d7c353f1dd39]

	* lib/dimsbuild/modules/core/software/comps.py,
	test/modules/comps/__init__.py:
	bug 106 fix (comps default groups)

	lib/dimsbuild/modules/core/software/comps.py
	 * added code necessary to correctly set the default comps values
	according to the value specified in the default attribute of the
	config file test/modules/comps/__init__.py
	 * added Test_GroupDefaults, which tests that defaults get set
	appropriately as specified in the config file
	[81503278e6fc]

2007-11-28  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/createrepo.py:
	Potential fix to Bug 90.

	* lib/dimsbuild/modules/shared/createrepo.py:
	- if no repodata/ folder present, then not passing '--update' flag to
	createrepo.
	- if ExecuteError.errno is EAGAIN or EWOULDBLOCK, running createrepo
	one more time. If createrepo still fails, raise an Exception.
	[c40529dc4390]

2007-11-28  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* .hgignore, bin/dimsbuild, test/Makefile, test/__init__.py,
	test/events/ALL/ALL.conf, test/events/ALL/__init__.py,
	test/events/ISO/ISO.conf, test/events/ISO/__init__.py,
	test/events/OS/OS.conf, test/events/OS/__init__.py,
	test/events/__init__.py, test/events/autoclean/__init__.py,
	test/events/autoclean/autoclean.conf,
	test/events/bootiso/__init__.py, test/events/bootiso/bootiso.conf,
	test/events/buildstamp/__init__.py,
	test/events/buildstamp/buildstamp.conf,
	test/events/comps/__init__.py, test/events/comps/comps.xml,
	test/events/comps/conf.exclude-packages, test/events/comps/conf
	.groups-by-repo, test/events/comps/conf.include-core-groups,
	test/events/comps/conf.include-groups, test/events/comps/conf
	.include-packages, test/events/comps/conf.multiple-groupfiles,
	test/events/comps/conf.supplied, test/events/config-rpm/__init__.py,
	test/events/config-rpm/config-rpm.conf, test/events/createrepo/RPM-
	GPG-KEY-test, test/events/createrepo/RPM-GPG-SEC-KEY-test,
	test/events/createrepo/__init__.py,
	test/events/createrepo/createrepo.conf,
	test/events/discinfo/__init__.py,
	test/events/discinfo/discinfo.conf, test/events/diskboot-
	image/__init__.py, test/events/diskboot-image/diskboot-image.conf,
	test/events/download/Makefile, test/events/download/__init__.py,
	test/events/download/download-test-repos.xml,
	test/events/download/f8.conf, test/events/download/f8.repo,
	test/events/gpgcheck/__init__.py, test/events/gpgcheck/keys-
	missing.conf, test/events/gpgcheck/keys-missing.repo,
	test/events/gpgcheck/keys-present.conf, test/events/gpgcheck/keys-
	present.repo, test/events/init/__init__.py,
	test/events/init/init.conf, test/events/initrd-image/__init__.py,
	test/events/initrd-image/initrd-image.conf,
	test/events/installer/__init__.py,
	test/events/installer/installer.conf, test/events/iso/__init__.py,
	test/events/iso/iso.conf, test/events/isolinux/__init__.py,
	test/events/isolinux/isolinux.conf, test/events/logos-
	rpm/__init__.py, test/events/logos-rpm/logos-rpm.conf,
	test/events/logos/__init__.py, test/events/logos/centos5.conf,
	test/events/logos/fedora6.conf, test/events/logos/fedora7.conf,
	test/events/logos/fedora8.conf, test/events/logos/redhat5.conf,
	test/events/pkglist/Makefile, test/events/pkglist/__init__.py,
	test/events/pkglist/bug84.conf, test/events/pkglist/bug85.conf,
	test/events/pkglist/bug86.conf, test/events/pkglist/pkglist,
	test/events/pkglist/pkglist-test-repos1.xml, test/events/pkglist
	/pkglist-test-repos2.xml, test/events/pkglist/pkglist-test-
	repos3.xml, test/events/pkglist/pkglist.conf,
	test/events/pkglist/supplied.conf, test/events/product-
	image/__init__.py, test/events/product-image/product-image.conf,
	test/events/publish-setup/__init__.py, test/events/publish-setup
	/publish-setup.conf, test/events/pxeboot-images/__init__.py,
	test/events/pxeboot-images/pxeboot-images.conf, test/events/release-
	files/__init__.py, test/events/release-files/centos5.conf,
	test/events/release-files/fedora6.conf, test/events/release-
	files/fedora7.conf, test/events/release-files/fedora8.conf,
	test/events/release-files/input1, test/events/release-files/input2,
	test/events/release-files/input3, test/events/release-
	files/redhat5.conf, test/events/release-rpm/__init__.py, test/events
	/release-rpm/release-rpm.conf, test/events/rpms/__init__.py,
	test/events/rpms/rpms.conf, test/events/setup/__init__.py,
	test/events/setup/setup.conf, test/events/software/__init__.py,
	test/events/software/software.conf,
	test/events/sourcevars/__init__.py, test/events/sourcevars/source-
	vars.conf, test/events/stage2-images/__init__.py,
	test/events/stage2-images/stage2-images.conf, test/events/theme-
	rpm/__init__.py, test/events/theme-rpm/theme-rpm.conf,
	test/events/treeinfo/__init__.py,
	test/events/treeinfo/treeinfo.conf, test/events/updates-
	image/__init__.py, test/events/updates-image/outfile, test/events
	/updates-image/updates-image.conf, test/modules/ALL/ALL.conf,
	test/modules/ALL/__init__.py, test/modules/__init__.py,
	test/modules/autoclean/__init__.py,
	test/modules/autoclean/autoclean.conf,
	test/modules/bootiso/__init__.py, test/modules/bootiso/bootiso.conf,
	test/modules/comps/__init__.py, test/modules/comps/comps.xml,
	test/modules/comps/conf.exclude-packages, test/modules/comps/conf
	.groups-by-repo, test/modules/comps/conf.include-core-groups,
	test/modules/comps/conf.include-groups, test/modules/comps/conf
	.include-packages, test/modules/comps/conf.multiple-groupfiles,
	test/modules/comps/conf.supplied, test/modules/config-
	rpm/__init__.py, test/modules/config-rpm/config-rpm.conf,
	test/modules/createrepo/RPM-GPG-KEY-test, test/modules/createrepo
	/RPM-GPG-SEC-KEY-test, test/modules/createrepo/__init__.py,
	test/modules/createrepo/createrepo.conf, test/modules/diskboot-
	image/__init__.py, test/modules/diskboot-image/diskboot-image.conf,
	test/modules/download/Makefile, test/modules/download/__init__.py,
	test/modules/download/download-test-repos.xml,
	test/modules/download/f8.conf, test/modules/download/f8.repo,
	test/modules/gpgcheck/__init__.py, test/modules/gpgcheck/keys-
	missing.conf, test/modules/gpgcheck/keys-missing.repo,
	test/modules/gpgcheck/keys-present.conf, test/modules/gpgcheck/keys-
	present.repo, test/modules/infofiles/__init__.py,
	test/modules/infofiles/buildstamp.conf,
	test/modules/infofiles/discinfo.conf,
	test/modules/infofiles/treeinfo.conf, test/modules/init/OS.conf,
	test/modules/init/__init__.py, test/modules/init/init.conf,
	test/modules/init/setup.conf, test/modules/initrd-image/__init__.py,
	test/modules/initrd-image/initrd-image.conf,
	test/modules/installer/__init__.py,
	test/modules/installer/installer.conf, test/modules/iso/ISO.conf,
	test/modules/iso/__init__.py, test/modules/iso/iso.conf,
	test/modules/isolinux/__init__.py,
	test/modules/isolinux/isolinux.conf, test/modules/logos-
	rpm/__init__.py, test/modules/logos-rpm/logos-rpm.conf,
	test/modules/logos/__init__.py, test/modules/logos/centos5.conf,
	test/modules/logos/fedora6.conf, test/modules/logos/fedora7.conf,
	test/modules/logos/fedora8.conf, test/modules/logos/redhat5.conf,
	test/modules/pkglist/Makefile, test/modules/pkglist/__init__.py,
	test/modules/pkglist/bug84.conf, test/modules/pkglist/bug85.conf,
	test/modules/pkglist/bug86.conf, test/modules/pkglist/pkglist,
	test/modules/pkglist/pkglist-test-repos1.xml, test/modules/pkglist
	/pkglist-test-repos2.xml, test/modules/pkglist/pkglist-test-
	repos3.xml, test/modules/pkglist/pkglist.conf,
	test/modules/pkglist/supplied.conf, test/modules/product-
	image/__init__.py, test/modules/product-image/product-image.conf,
	test/modules/publish/__init__.py, test/modules/publish/publish-
	setup.conf, test/modules/pxeboot-images/__init__.py, test/modules
	/pxeboot-images/pxeboot-images.conf, test/modules/release-
	files/__init__.py, test/modules/release-files/centos5.conf,
	test/modules/release-files/fedora6.conf, test/modules/release-
	files/fedora7.conf, test/modules/release-files/fedora8.conf,
	test/modules/release-files/input1, test/modules/release-
	files/input2, test/modules/release-files/input3, test/modules
	/release-files/redhat5.conf, test/modules/release-rpm/__init__.py,
	test/modules/release-rpm/release-rpm.conf,
	test/modules/rpms/__init__.py, test/modules/rpms/rpms.conf,
	test/modules/software/__init__.py,
	test/modules/software/software.conf,
	test/modules/sourcevars/__init__.py, test/modules/sourcevars/source-
	vars.conf, test/modules/stage2-images/__init__.py,
	test/modules/stage2-images/stage2-images.conf, test/modules/theme-
	rpm/__init__.py, test/modules/theme-rpm/theme-rpm.conf, test/modules
	/updates-image/__init__.py, test/modules/updates-image/outfile,
	test/modules/updates-image/updates-image.conf, test/runtest.py:
	module-based test system, front end improvements, logging
	improvements

	Moved the testing system to a module-based system rather than event-
	based. This addresses a number of issues: 1) the dimsbuild system
	itself is module- based, rather than event based, so this maintains
	a level of parallelism; 2) fixes issues with events that were not
	named the same as the module they came from for extension events;
	and 3) this shift allows for better integration with an improved
	testing framework. As such, the 'events' folder became the
	'modules' folder, and several event folders were merged into their
	parent module folder.

	With the addition of 'runtest.py' at the testing root, all testing
	execution has been removed from the individual modules themselves.
	This allows a common set of command line arguments to be available
	for any type of testing, whether comprehensive or on a single
	module. The way to run a test is to execute runtest.py with the
	path to the python file to test. This python file must define a
	make_suite() function that returns a unittest.TestSuite instance
	with all the tests to run.

	Thus, to run all tests: `python runtest.py __init__.py` To run
	just comps tests: `python runtest.py modules/comps/__init__.py`

	This will likely change slightly in the future; support will
	probably be added for directly naming the modules, rather than
	having to point to the actual file in question; in this case, the
	above two cases would change to:

	 `python runtest.py` `python runtest.py comps`

	which is easier to type and remember.

	A test log is now stored at the root of the test folder, 'test.log'.
	It contains the full log output of the most recent test; subsequent
	tests will erase its content and overwrite it, so make sure to copy
	its contents if you want to save it for any reason.

	.hgignore
	 * added patterns for the files generated by make Makefile
	 * changed paths from 'events' to 'modules'

	test/__init__.py
	 * removed all test execution and option parsing code (now in
	runtest.py)
	 * added support for reading from a mainconfig file specified in
	options
	 * added make_suite() to allow support for running via runtest.py

	test/modules/*/__init__.py
	 * main() and 'if __name__ == "__main__"' code blocks removed;
	execution is now handled via runtest.py
	 * make_suite() changed to not accept a config parameter; config is now
	computed by the function itself
	 * removed eventid, if present; since modules can contain more than one
	event, it doesn't make sense to define a single eventid

	test/runtest.py
	 * new execution wrapper for dimsbuild testing
	 * supports a few command line arguments, see `runtest.py -h` for
	details
	 * this file is responsible for running all tests; see description,
	above, for details on how to use it
	 * --skip option doesn't currently work

	test/modules/comps/__init__.py
	 * fixed Test_Supplied so that it actually finds the correct file
	test/modules/publish-setup/*
	 * moved/merged into test/modules/publish test/modules/ISO/*
	 * moved/merged into test/modules/iso test/modules/OS/*
	 * moved/merged into test/modules/init test/modules/setup/*
	 * moved/merged into test/modules/init test/modules/buildstamp/*
	 * moved/merged into test/modules/infofiles test/modules/discinfo/*
	 * moved/merged into test/modules/infofiles test/modules/treeinfo/*
	 * moved/merged into test/modules/infofiles
	[431a65b6fb1c]

2007-11-27  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/rpms.py:
	rpms: removed author information, not required
	[75c360096ff7]

	* lib/dimsbuild/modules/shared/rpms.py:
	rpms: rpms created in <metadata dir>/rpm-base

	* lib/dimsbuild/modules/shared/rpms.py:
	- the RPMs were being created in /usr/src/redhat; changed. Currently,
	the RPM distribution folder is not being saved.
	[d513557a1b53]

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	config-rpm: generating 'auto.sh' which is used in post install

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- generating auto.sh that gets installed to /usr/lib/%{product}
	- this file is used in the post-installation of the RPM too
	[a5a0f8795bd5]

	* lib/dimsbuild/modules/shared/rpms.py:
	rpms: added author information
	[5f3b624a919d]

	* lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	rpms: <obsolete> and <require> --> <obsoletes/> and <requires/>
	[18268ff3d773]

	* test/events/download/__init__.py:
	test/download: cleanup
	[e391ff86cca6]

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	Fixed bug 105.

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	- if the passphrase is incorrect, keep asking the user to type in the
	passphrase. The user can always hit Ctrl+C to exit out.
	[67ee68a39c7e]

	* lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py:
	Fixed Bug 104.

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	- not deleting the secret key. Deleting the secret key causes all the
	RPMs to be re-signed even if only a proper subset of them have
	changed because the secret key is listed as an output file.
	[110f7170c435]

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	gpgsign: whitespace cleanup
	[2db1f3aa4022]

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	config-rpm: not sorting the list of <script/> files.

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- to add the files to the post-install script in the order they were
	listed in the config file, passing the "sort" parameter to
	IOMixin.list_output() and setting its value to False.
	[133016628302]

	* lib/dimsbuild/event/fileio.py:
	fileio: info about files to be sync'd saved in lists instead of
	sets.

	* lib/dimsbuild/event/fileio.py:
	- IOMixin.sync_items and IOMixin.chmod_items are lists now, so that
	the order of items as they are added is presereved.
	- IOMixin.list_output() takes an additional parameter "sort", which if
	set to True, sorts the list of items to be return, else doesn't.
	[c5551c2dbcaa]

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	config-rpm: removed debug statement
	[6dade7f7dd62]

	* share/dimsbuild/schemas/distro.conf/config-rpm.rng:
	schemas/config-rpm.rng: removed extraneous optional element.
	[7b5bce5fc532]

	* share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/theme-rpm.rng:
	schemas/rpms: updated the RPM event schemas to reflect
	modifications.
	[26fe19c62fb4]

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	config-rpm: all <script/> files are used in the post-install script.

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- all the files specified in the <script> elements are tacked added to
	the post-install script in the order they are listed in the config
	file.

	* lib/dimsbuild/modules/{core,extensions}/rpms:
	- bumped event versions
	[229b2b269f35]

	* lib/dimsbuild/modules/shared/rpms.py:
	rpms: flattening of config section

	* lib/dimsbuild/modules/shared/rpms.py:
	- removed <obsoletes/> and <requires/> elements which contain
	<package/> elements. Instead added support for <obsolete/> and
	<require/> elements.
	[70c9ecf92ec8]

	* lib/dimsbuild/event/fileio.py:
	fileio: the mode of the file wasn't being set correctly.

	* lib/dimsbuild/event/fileio.py:
	- if the default mode is specified, it is a octal string (with or
	without the leading 0). If it is not specified, the default mode of
	the file is set to be the mode of the file. os.stat() returns an
	integer; converting this integer to an octal string.
	[37424701277c]

2007-11-27  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/shared/installer.py:
	bug 91 fix

	lib/dimsbuild/modules/shared/installer.py
	 * added call to io.clean_eventcache(all=True) inside
	ImageModifyMixin._modify. This call prevents older files from
	ending up in newly-created images
	[42684f23b761]

2007-11-26  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/pkglist/__init__.py:
	test/pkglist: uncommented test cases.
	[6b1b54ee8933]

2007-11-26  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/pkglist.py,
	test/events/comps/__init__.py, test/events/pkglist/__init__.py:
	fixed memory leak in pkglist module

	lib/dimsbuild/modules/core/software/pkglist.py
	 * added call to Depsolver's teardown method so that the depsolver is
	correctly garbage collected
	[2beac991281b]

2007-11-26  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/pkglist/__init__.py, test/events/pkglist/pkglist-test-
	repos1.xml, test/events/pkglist/pkglist-test-repos2.xml,
	test/events/pkglist/pkglist-test-repos3.xml:
	test/pkglist: added test cases for more complex scenarios.

	* test/events/pkglist/__init__.py:
	- added a test that adds a package (pkglist-test-package3) to the
	<comps>/<core>/<package>; this package requires the pkglist-test-
	package4 that only it requires. The test ensures that both these
	packages are brought down.
	- added another test case that doesn't add pkglist-test-package3 to
	the required packages list. This test makes sure that neither
	pkglist-test-package3 nor pkglist-test-package4 are in the package
	list.
	[ebd4ef0cd488]

	* test/events/pkglist/__init__.py, test/events/pkglist/pkglist-test-
	repos1.xml, test/events/pkglist/pkglist-test-repos2.xml,
	test/events/pkglist/pkglist.conf:
	test/pkglist: added test cases for added and obsoleted packages
	[a6ae4f6123a9]

	* test/events/pkglist/pkglist-test-repos1.xml, test/events/pkglist
	/pkglist-test-repos2.xml, test/events/pkglist/pkglist-test-
	repos3.xml:
	test/pkglist: added xml files used to create test repositories
	[50731b8cf1bf]

	* test/Makefile, test/events/pkglist/Makefile:
	test/pkglist: added Makefiles.

	* test/Makefile:
	- used to create test repositories for all the events

	* test/events/pkglist/Makefile:
	- used to create test repositories for the pkglist event
	[61d3daaf150f]

	* lib/dimsbuild/modules/core/software/pkglist.py,
	test/events/pkglist/__init__.py, test/events/pkglist/pkglist.conf:
	pkglist: whitespace cleanup
	[72db91cdb178]

	* lib/dimsbuild/modules/shared/createrepo.py:
	fixed error message in shared/createrepo.py:

	* lib/dimsbuild/modules/shared/createrepo.py: removed part in error
	message that talked about the database attribute.
	[a38ca93d3a8c]

	* lib/dimsbuild/modules/shared/createrepo.py,
	share/dimsbuild/schemas/distro.conf/createrepo.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng:
	removed 'database' attribute for sources and createrepo events.

	* lib/dimsbuild/modules/share/createrepo.py:
	- if the version of createrepo is >= 0.4.7, then passing the '--
	database' flag to /usr/bin/createrepo. Previously, was passing '--
	database' if the database attribute of the event's config section
	was set to True.
	[0895c29deadb]

2007-11-26  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	gpgsign: removed duplicate 'suppress_run_message' parameter
	[3777146ca849]

	* docsrc/main.rng, lib/dimsbuild/locals.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	share/dimsbuild/schemas/distro.conf/main.rng:
	main/createrepo - product-path exposed in /distro/main config,
	defaults to 'Packages'

	docsrc/main.rng
	* added documentation for new product-path element

	lib/dimsbuild/locals.py
	* DISCINFO_FORMAT_LOCALS now uses 'product-path' instead of 'product'
	for populating base,rpms, and pixmaps paths.

	lib/dimsbuild/main.py
	* sets product-path base-var to product-path config element, with
	'Packages' as the default

	lib/dimsbuild/modules/core/installer/infofiles.py
	* bumped version number for discinfo and treeinfo events
	*
	* treeinfo event - removed reference to non-existing variable from
	difftest data
	* treeinfo event - sets packagedir to base-vars product-path

	lib/dimsbuild/modules/core/software/createrepo.py
	* modified difftest data to track 'cvars['base-vars']['product-path']'
	rather than 'product' variable
	* likewise, modified cvars['rpms-directory'] initialization to use
	base-vars product-path

	share/dimsbuild/schemas/distro.conf/main.rng
	* added product-path element
	[a0600482f911]

2007-11-26  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/callback.py, lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/shared/installer.py,
	share/dimsbuild/schemas/distro.conf/comps.rng, test/__init__.py:
	bug 80, 91, 98, 99

	lib/dimsbuild/callback.py
	 * added GpgCallback, for use with gpg checking and signing; very close
	in behavior to BuildDepsolveCallback
	lib/dimsbuild/modules/core/software/comps.py
	 * bug 80 - added support for 'include-localized-strings' in the config
	file; setting this boolean value to True will include all the
	localized versions of name/description elements in the final
	comps.xml file generated by the 'comps' event
	 * removed LOCALIZED; localization is now handled per event in the
	CompsEvent.include_localizations variable
	lib/dimsbuild/modules/core/software/gpgcheck.py
	 * bug 98 - now imports and uses GpgCallback as a more compact
	representation of gpg checking status
	lib/dimsbuild/modules/core/software/pkglist.py
	 * added a NoneType check lib/dimsbuild/modules/extensions/iso.py
	 * added suppression of output message for 'ISO' event
	lib/dimsbuild/modules/extensions/software/gpgsign.py
	 * bug 99 - now imports and uses GpgCallback as a more compact
	representation of gpg signing status
	 * added suppression of output message for 'gpgsign-setup' event
	lib/dimsbuild/modules/shared/installer.py
	 * Bug 91 - ImageModifyMixin now removes the old image before syncing
	the original, if it exists. This ensures that old files are
	always removed share/dimsbuild/schemas/distro.conf/comps.rng
	 * added 'include-localized-strings' attribute to 'comps'
	test/__init__.py
	 * removed EventTestLogger; now uses normal logger.Logger instances
	 * added EventTestLoggerContainer, which contains a standard console
	logger as well as a file logger
	 * added main2 and main3, alternate implementations of the same main
	execution; all are experiments on the way to reducing required
	memory to run the entire suite
	[fba8aaae548b]

2007-11-21  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/repo.py:
	Fixed Bug 100.

	* lib/dimsbuild/repo.py:
	- if a repofile has a space after an option, a KeyError was being
	raised; fixed by rstrip()'ing the option name before adding it as a
	key to the dictionary.
	[fc141dbeb0b8]

2007-11-21  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	gpgsign-setup: fixed verify_cvars, suppressed run message
	[a24d82c3d37b]

2007-11-21  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/download/__init__.py, test/events/download/download-
	test-repos.xml:
	test/download: added test case for multiple repos providing same
	package.
	[2163560e13a9]

	* test/events/download/__init__.py:
	test/download: added test case for arch changes.
	[6fdc9e9c4f7c]

	* test/events/download/f8.conf:
	test/download: removed extraneous XInclude namespace
	[7b77bbbd832f]

	* test/events/download/__init__.py, test/events/download/f8.conf:
	test/download: using dummy repo created by 'buildrepos'

	* test/events/download/f8.conf:
	- running 'make repos' (or simply 'make') in the download folder,
	creates a dummy repo 'repo1' that contains two packages: 'package1'
	and 'package2'. These packages are used by
	Test_AddedPackagesDownloaded and Test_RemovedPackagesDeleted test
	cases.
	[a9cf13a73a1d]

	* test/events/download/Makefile, test/events/download/__init__.py,
	test/events/download/download-test-repos.xml:
	test/download: added Makefile to build dummy repo.
	[8d1c5deacbc0]

2007-11-21  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py:
	rpms: bumped release number subsequent to changeset 611
	[9e0fb030b122]

2007-11-21  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/main.rng, test/__init__.py,
	test/rpms.py:
	lib/dimsbuild/main.py
	 * bug 97: `dimsbuild -h` now works even if a config file is not found
	 * removed all support for 'release' concept in dimsbuild; use version
	instead lib/dimsbuild/modules/core/repos.py
	 * bug 94: when the base-repo specified in the <repos> config section
	is not found in any repo definition or repo file, a friendly
	message is printed out (during the repos event as well, rather
	than in sourcevars) lib/dimsbuild/modules/core/sourcevars.py
	 * added cvar verification for 'source-vars'
	lib/dimsbuild/modules/extensions/iso.py
	 * removed Event.release from iso label
	lib/dimsbuild/modules/shared/rpms.py
	 * rpm release version is now computed in a more extended manner than
	previously; now examines the Event.version variable for the first
	integer and uses this as the rpm version, rather than the entire
	string. This allows the user to specify something as 'f8', for
	example; for most of the dimsbuild process, the version is 'f8',
	but the rpms it creates will be version '8' test/__init__.py
	 * test now reads main config file at '/etc/dimsbuild.conf', if present
	 * optdefaults.sharepath set to []; use main config file to set
	sharepath test/rpms.py
	 * corrected a few variable name changes; Uday will do the rest
	[61fed96c8c09]

	* lib/dimsbuild/main.py:
	added missing os import
	[bbf87b589a50]

2007-11-19  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/shared/rpms.py, test/__init__.py,
	test/events/createrepo/__init__.py, test/events/pkglist/__init__.py:
	locking support, various bug fixes

	lib/dimsbuild/event/fileio.py
	 * cleaned up needlessly complex chmodding code lib/dimsbuild/main.py
	 * added Build._lock() and Build._unlock(), which create and destroy a
	pid file in /var/run that prevents dimsbuild from running when
	another instance is already running. Note this does not prevent
	dimsbuild from being _instanteated_ multiple times, only from
	actually _executing_ (via Build.main()). Subclasses
	(particularly test cases) are expected to obey this behavior as
	well lib/dimsbuild/modules/extensions/software/gpgsign.py
	 * added verification to ensure both 'gpg-public-key' and 'gpg-secret-
	key' cvars are being set lib/dimsbuild/modules/shared/rpms.py
	 * all rpm versions are set by default to cvars['source-
	vars']['version'] instead of cvars['base-vars']['version']
	test/__init__.py
	 * added locking code to tests so multiple tests cannot run at the same
	time test/events/createrepo/__init__.py
	 * remove 'gpgsign' from the enabled_modules option once done testing
	to prevent subsequent tests from trying (and failing) to sign
	rpms test/events/pkglist/__init__.py
	 * fixed import
	[478f80e6c9fc]

2007-11-21  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/config-rpm/__init__.py, test/events/logos-
	rpm/__init__.py, test/events/release-rpm/__init__.py, test/events
	/theme-rpm/__init__.py, test/rpms.py:
	testing/rpms: fixed variable names
	[c5a53ac86cff]

2007-11-21  Kay Williams  <kwilliams@abodiosoftware.com>

	* share/doc/examples/dimsbuild.conf:
	examples: added example dimsbuild.conf
	[5f1668cbc948]

	* lib/dimsbuild/main.py:
	main: calling .expand() when creating import_dirs and SHARE_DIRS
	[bb1e85fdcc7a]

2007-11-20  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/download/__init__.py, test/events/download/f8.conf,
	test/events/download/f8.repo:
	download: added test cases
	[fe638e1961e0]

	* test/events/gpgcheck/__init__.py:
	testing/gpgcheck: fixed make_core_suite() function call
	[00fb68c0f3d0]

	* lib/dimsbuild/modules/core/software/download.py:
	download: whitespace cleanup
	[f26c17ef7684]

2007-11-20  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgkeys: moved test to determine if a repo has rpms to check to an
	outer block
	[6921937fc693]

2007-11-20  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/__init__.py, test/events/gpgcheck/__init__.py,
	test/events/gpgcheck/keys-missing.conf, test/events/gpgcheck/keys-
	missing.repo, test/events/gpgcheck/keys-present.conf,
	test/events/gpgcheck/keys-present.repo:
	gpgcheck: added test case for missing gpg keys

	* test/__init__.py:
	- added EventTestCase.failUnlessRaises() that takes in two parameters:
	the exception class and the event. If the event raises the exception
	provided, the test passes, else the test fails.

	* test/events/gpgcheck:
	- added test case for missing gpg keys and the core test suite
	[36757b00db57]

2007-11-20  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py:
	download/gpgcheck: download provides rpms-by-repoid, gpgcheck
	requires

	This commit fixes a bug where if the same rpm existed in multiple
	repos, gpgcheck checked it multiple times. The fix is for the
	download event to provide a list of rpms by repoid. Gpgcheck uses
	this cvar to match rpms against keys for checking.
	[0bd762dd446c]

2007-11-20  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py:
	rpms: keeping track of rpm_release variable.

	* lib/dimsbuild/modules/{core,extensions}/rpms:
	- the RPM event classes keep track of the 'rpm_release' variable, so
	that if you manually edit the distro.conf.dat file, that is going to
	trigger the event.
	[ab9e8420c75f]

	* lib/dimsbuild/modules/core/software/pkglist.py:
	pkglist: code cleanup

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- removed the handler concept.
	[6f4422e8db61]

2007-11-20  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/extensions/software/gpgsign.py:
	gpgsign: uses 'cached-rpms' rather than 'input-rpms' cvar (cleanup)

	Both cvars are currently set by the download event. The input-rpms
	cvar will be removed/repurposed in a subsequent commit.
	[08ad3a41e63c]

	* lib/dimsbuild/main.py:
	main: added version and basearch to "Starting build of ..." message

	This makes log output more useful when many builds with the same
	product name are run sequentially.
	[54965a80faf3]

2007-11-20  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/pkglist.py:
	pkglist: using cPickle instead of pickle for enhanced performance.
	[aea7ff4b1ab0]

	* lib/dimsbuild/modules/core/software/pkglist.py:
	pkglist: potential fix to bug 95.

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- in incremental depsolve's handler, I check to make sure that a
	package that was required by some other package the last time, is
	still the latest one this time. To accomplish this, I make use of
	the DepSolver._provideToPkg() method, which can return None if the
	package is not available. So, in the case when you change input
	repositories, the package might not be found. I was assuming that if
	the package was in the cached data, it is still going to be around.
	Fixed.
	[2e27f0c786f4]

2007-11-19  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/__init__.py:
	reverting change to test/__init__.py
	[4e0ebe009e3f]

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py, test/__init__.py:
	changed variable names in RPM events to avoid conflicts.
	[8998b9f0d6b7]

	* lib/dimsbuild/modules/core/installer/release-files.py:
	release-files: using sync_input() to sync <path/> files.

	* lib/dimsbuild/modules/core/installer/release-files.py:
	- using IOMixin.sync_input() to get the relative paths working.
	[411de31e0dd3]

	* test/events/release-files/__init__.py, test/events/release-
	files/input1, test/events/release-files/input2, test/events/release-
	files/input3:
	more comprehensive test cases for release-files.
	[3ee482740b23]

	* test/events/release-files/__init__.py, test/events/release-
	files/centos5.conf, test/events/release-files/fedora6.conf,
	test/events/release-files/fedora7.conf, test/events/release-
	files/fedora8.conf, test/events/release-files/redhat5.conf:
	added test cases for release-files
	[199cd6093a7a]

	* test/events/release-rpm/__init__.py:
	added test case to check for RELEASE-NOTES in release-rpm.
	[721a32c5c3aa]

	* test/events/logos/__init__.py, test/events/logos/centos5.conf,
	test/events/logos/fedora6.conf, test/events/logos/fedora7.conf,
	test/events/logos/fedora8.conf, test/events/logos/redhat5.conf:
	added test cases for 'logos' event.
	[46c1bf53a67a]

	* test/events/pkglist/supplied.conf:
	changed product name in config file.
	[2c6db8958bba]

	* test/events/pkglist/__init__.py, test/events/pkglist/pkglist,
	test/events/pkglist/supplied.conf:
	added test for supplied pkglist file

	* dimsbuild/test/events/pkglist/__init__.py:
	- Test_Supplied class added that checks to make sure that the pkglist
	supplied is the same as the output file generated by the pkglist
	event.

	* dimsbuild/test/events/pkglist/supplied.conf:
	- config file that has the pkglist element that points to the supplied
	pkglist file.

	* dimsbuild/test/events/pkglist/pkglist:
	- supplied pkglist file.
	[4c362d47220c]

2007-11-16  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/config-rpm/__init__.py, test/events/rpms/__init__.py,
	test/events/theme-rpm/__init__.py, test/rpms.py:
	fixed the RPM test cases to not use self.event._run.

	* rpms/__init__.py:
	- checking to see if the rpm exists instead of checking if
	self.event._run is set to True.

	* events/{theme-rpm,config-rpm}:
	- added the extension test suite
	[25b23b8009bf]

	* lib/dimsbuild/validate.py:
	Fix to Bug 78 and making validation namespace aware.

	* lib/dimsbuild/validate.py:
	- the BaseConfigValidator is now relaxng-namespace aware.
	- as a fix to bug 78, printing out the config section with line
	numbers if it fails validation.
	[97d25e74de2d]

2007-11-16  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/createrepo.py,
	test/events/createrepo/RPM-GPG-KEY-test, test/events/createrepo/RPM-
	GPG-SEC-KEY-test, test/events/createrepo/__init__.py,
	test/events/createrepo/createrepo.conf:
	added 'createrepo' tests

	lib/dimsbuild/modules/core/software/createrepo.py
	 * added verify_repodata_directory(), which checks to ensure repodata
	dir was created test/events/createrepo/RPM-GPG-KEY-test
	 * exported GPG public key for use in signing test/events/createrepo
	/RPM-GPG-SEC-KEY-test
	 * exported gpg secret key for use in signing
	test/events/createrepo/__init__.py
	 * initial commit of tests for 'createrepo' event
	test/events/createrepo/createrepo.conf
	 * config for the above
	[785b19e1d15e]

2007-11-16  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/pkglist/__init__.py, test/events/pkglist/bug84.conf,
	test/events/pkglist/bug85.conf, test/events/pkglist/bug86.conf:
	intial commit of pkglist test cases.
	[5e2df37b2015]

	* lib/dimsbuild/modules/core/software/pkglist.py:
	cleaned up the pkglist code.

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- added an IDepSolverHandler class that is used to update the cached
	data
	[122cee6fcf00]

2007-11-15  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/pkglist.py:
	Fixes to bugs 84, 85, and 86.

	* lib/dimsbuild/modules/core/software/pkglist.py:
	- instead of starting with a dictionary of cached items and removing
	items that are no longer needed, starting with an empty dictionary
	and adding items that are needed.
	- while adding packages to the transaction set, checking to see if
	there is a newer package providing the same thing the package being
	added provides. If there is such a package, ths package isn't added
	to the transaction set. Depsolving takes care of all the things that
	need to be done so that the better of the two packages is brought
	down.
	[b7b8a293d916]

	* lib/dimsbuild/modules/core/software/pkglist.py:
	whitespace cleanup
	[557975c501fd]

2007-11-16  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/sourcevars.py, test/__init__.py,
	test/core.py, test/events/ALL/__init__.py, test/events/ISO/ISO.conf,
	test/events/ISO/__init__.py, test/events/OS/OS.conf,
	test/events/OS/__init__.py, test/events/__init__.py,
	test/events/autoclean/__init__.py, test/events/bootiso/__init__.py,
	test/events/buildstamp/__init__.py, test/events/comps/__init__.py,
	test/events/config-rpm/__init__.py,
	test/events/discinfo/__init__.py, test/events/diskboot-
	image/__init__.py, test/events/init/__init__.py, test/events/initrd-
	image/__init__.py, test/events/installer/__init__.py,
	test/events/installer/installer.conf, test/events/iso/__init__.py,
	test/events/isolinux/__init__.py,
	test/events/isolinux/isolinux.conf, test/events/logos-
	rpm/__init__.py, test/events/mixins.py, test/events/product-
	image/__init__.py, test/events/publish-setup/__init__.py,
	test/events/pxeboot-images/__init__.py, test/events/pxeboot-images
	/pxeboot-images.conf, test/events/release-rpm/__init__.py,
	test/events/rpms.py, test/events/rpms/__init__.py,
	test/events/rpms/rpms.conf, test/events/setup/__init__.py,
	test/events/software/__init__.py,
	test/events/software/software.conf,
	test/events/sourcevars/__init__.py, test/events/sourcevars/source-
	vars.conf, test/events/stage2-images/__init__.py,
	test/events/stage2-images/stage2-images.conf, test/events/theme-
	rpm/__init__.py, test/events/treeinfo/__init__.py, test/events
	/updates-image/__init__.py, test/mixins.py, test/rpms.py:
	added 'ISO', 'OS', 'installer', 'isolinux', 'pxeboot-images',
	'rpms', 'software', 'source-vars', 'stage2-images'

	lib/dimsbuild/modules/core/publish.py
	 * removed old references to repofile from 'publish-setup'
	lib/dimsbuild/modules/core/sourcevars.py
	 * added buildstamp file verification test/__init__.py
	 * added the former contents of events/__init__.py
	 * added __name__ == '__main__' block and main() test/core.py
	 * moved from events/core.py test/events/ISO/ISO.conf
	 * config for the below test/events/ISO/__init__.py
	 * initial commit of tests for the 'ISO' event test/events/OS/OS.conf
	 * config for the below test/events/OS/__init__.py
	 * initial commit of tests for the 'OS' event test/events/__init__.py
	 * removed all content; added to ../__init__.py
	test/events/installer/__init__.py
	 * initial commit of tests for the 'installer' event
	test/events/installer/installer.conf
	 * config for the above test/events/isolinux/__init__.py
	 * initial commit of tests for the 'isolinux' event
	test/events/isolinux/isolinux.conf
	 * config for the above test/events/pxeboot-images/__init__.py
	 * initial commit of tests for the 'pxeboot-images' event test/events
	/pxeboot-images/pxeboot-images.conf
	 * config for the above test/events/rpms/__init__.py
	 * initial commit of tests for the 'rpms' event
	test/events/rpms/rpms.conf
	 * config for the above test/events/software/__init__.py
	 * initial commit of tests for the 'software' event
	test/events/software/software.conf
	 * config for the above test/events/sourcevars/__init__.py
	 * initial commit of tests for the 'source-vars' event
	test/events/sourcevars/source-vars.conf
	 * config for the above test/events/stage2-images/__init__.py
	 * initial commit of tests for the 'stage2-images' event
	test/events/stage2-images/stage2-images.conf
	 * config for the above test/events/mixins.py
	 * moved to ../mixins.py
	 * removed __name__ == '__main__' block and main() test/events/rpms.py
	 * moved to ../rpms.py
	[05dccfe99849]

2007-11-15  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* .hgignore, test/__init__.py, test/events/ALL/ALL.conf,
	test/events/ALL/__init__.py, test/events/__init__.py,
	test/events/autoclean/__init__.py, test/events/bootiso/__init__.py,
	test/events/buildstamp/__init__.py,
	test/events/buildstamp/buildstamp.conf,
	test/events/comps/__init__.py, test/events/config-rpm/__init__.py,
	test/events/core.py, test/events/discinfo/__init__.py,
	test/events/discinfo/discinfo.conf, test/events/diskboot-
	image/__init__.py, test/events/init/__init__.py,
	test/events/init/init.conf, test/events/initrd-image/__init__.py,
	test/events/iso/__init__.py, test/events/logos-rpm/__init__.py,
	test/events/mixins.py, test/events/product-image/__init__.py,
	test/events/publish-setup/__init__.py, test/events/publish-setup
	/publish-setup.conf, test/events/release-rpm/__init__.py,
	test/events/rpms.py, test/events/setup/__init__.py,
	test/events/setup/setup.conf, test/events/stage2-images/__init__.py,
	test/events/theme-rpm/__init__.py, test/events/treeinfo/__init__.py,
	test/events/treeinfo/treeinfo.conf, test/events/updates-
	image/__init__.py:
	test framework improvements; added 'ALL', 'discinfo', 'buildstamp',
	'init', treeinfo', 'publish-setup'

	.hgignore
	 * added '*.dat' so it stops trying to play with the conf .dat files
	test/__init__.py
	 * renamed EventTest to EventTestCase to better parallel unittest
	 * removed main() and execution via __name__ == '__main__'; instead, to
	execute all tests, run events/__init__.py
	 * added EventTestCaseDummy, a subclass of unittest.TestCase that is
	merely used for printing output to the console and/or performing
	other global setup and teardown tasks unreated to a specific test
	 * added EventTestRunner, a logger-based TestRunner subclass; acts very
	similarly to unittest.TextTestRunner in many respects
	 * added EventTestResult, a logger-based TestResult subclass; acts very
	similarly to unittest._TextTestResult in many respects
	 * added EventTestLogger, a logger.Logger subclass with formatting
	support test/events/ALL/ALL.conf
	 * config for the below test/events/ALL/__init__.py
	 * initial commit of test cases for 'ALL' event test/events/__init__.py
	 * now contains all content of 'core.py'
	 * moved main() and execution via __name__ == '__main__' code from
	../__init__ to here
	 * added EventTestCaseHeader, an EventTestCaseDummy subclass that
	merely prints out a header on top of a given event's suite of
	test cases. This is included by default as the first 'test case'
	in make_core_suite() test/events/*/__init__.py
	 * added a 'suite' argument to main(); if present, main merely adds the
	result of calling make_suite() to the suite it was passed; if not,
	runs the test suite itself. This is intended to allow execution
	by some larger test suite package while still maintaining
	autonomy test/events/buildstamp/__init__.py
	 * initial commit of test cases for 'buildstamp' event
	test/events/buildstamp/buildstamp.conf
	 * config for the above test/events/discinfo/__init__.py
	 * initial commit of test cases for 'discinfo' event
	test/events/discinfo/discinfo.conf
	 * config for the above test/events/init/__init__.py
	 * initial commit of test cases for 'init' event
	test/events/init/init.conf
	 * config for the above test/events/mixins.py test/events/publish-
	setup/__init__.py
	 * initial commit of test cases for 'publish-setup' event test/events
	/publish-setup/publish-setup.conf
	 * config for the above test/events/setup/__init__.py
	 * initial commit of test cases for 'setup' event
	test/events/setup/setup.conf
	 * config for the above test/events/treeinfo/__init__.py
	 * initial commit of test cases for 'treeinfo' event
	test/events/treeinfo/treeinfo.conf
	 * config for the above test/events/core.py
	 * removed; content moved into test/events/__init__.py
	[52ea29e7ebac]

2007-11-15  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: only download gpgkeys, create homedirs, etc. for repos
	with rpms
	[c55d77395912]

2007-11-14  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	Fixed Bug 83: MissingTagError("'dsaheader' tag missing from rpm
	header")

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	- not setting the force parameter to mkrpm.VerifyRpm() to True; if
	this parameter is set to True, a MissingTagError is raised on
	missing tags in the signature header.
	[9713effb5e55]

2007-11-14  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* test/__init__.py, test/events/autoclean/__init__.py,
	test/events/autoclean/autoclean.conf,
	test/events/bootiso/__init__.py, test/events/bootiso/bootiso.conf,
	test/events/comps/__init__.py, test/events/config-rpm/__init__.py,
	test/events/core.py, test/events/diskboot-image/__init__.py,
	test/events/diskboot-image/diskboot-image.conf, test/events/initrd-
	image/__init__.py, test/events/initrd-image/initrd-image.conf,
	test/events/iso/__init__.py, test/events/iso/iso.conf,
	test/events/iso/nodefault.conf, test/events/logos-rpm/__init__.py,
	test/events/mixins.py, test/events/product-image/__init__.py,
	test/events/product-image/infile, test/events/product-image/infile2,
	test/events/product-image/outfile, test/events/product-image
	/product-image.conf, test/events/release-rpm/__init__.py,
	test/events/stage2-images/__init__.py,
	test/events/stage2-images/stage2-images.conf, test/events/theme-
	rpm/__init__.py, test/events/updates-image/__init__.py, test/events
	/updates-image/infile, test/events/updates-image/infile2,
	test/events/updates-image/updates-image.conf:
	added tests for 'initrd-image', removed erroneous files, added
	extension tests

	test/__init__.py
	 * now remove hidden files (.*) as well as unhidden when cleaning md
	test/events/*/*.conf
	 * removed redundant comps sections, 'fedora-6-updates' sections, where
	appropriate test/events/autoclean/__init__.py
	 * renamed tests to be more indicative of their actual function
	 * added Test_RemoveDisabled, which checks to ensure that disabled
	module output is removed from the output tree test/events/core.py
	 * added ExtensionEventTest; counterpart to CoreEventTest, for
	extension events
	 * added 2 extension tests; these should be run after core tests
	 * renamed make_suite to make_core_suite
	 * added make_extension_suite test/events/initrd-image/__init__.py
	 * initial commit of initrd-image event tests test/events/initrd-image
	/initrd-image.conf
	 * config file for the above
	[2d9f7eb80b3e]

2007-11-14  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/repos.py:
	RepoEventMixin: remove repo if enabled=[false] in repofile

	Prior to this commit, dimsbuild ignored the enabled property in
	provided yum .repo files. With this commit, dimsbuild notices the
	enabled property and removed the repo if it is disabled.

	lib/dimsbuild/modules/shared/repos.py
	* read_config() - during post-processing of newly created repo
	objects, test if repo.has_key('enabled') and repo['enabled'] in
	BOOLEANS_FALSE, if so, pop repo from repocontainer object and
	continue to next repo.
	[b6e4a9bb186a]

2007-11-14  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	test/__init__.py, test/events/autoclean/__init__.py,
	test/events/bootiso/__init__.py, test/events/bootiso/bootiso.conf,
	test/events/bootiso/default.conf,
	test/events/bootiso/nodefault.conf, test/events/comps/__init__.py,
	test/events/comps/conf.groups-by-repo, test/events/core.py,
	test/events/diskboot-image/__init__.py, test/events/diskboot-
	image/default.conf, test/events/diskboot-image/diskboot-image.conf,
	test/events/diskboot-image/infile, test/events/diskboot-
	image/infile2, test/events/diskboot-image/nodefault.conf,
	test/events/diskboot-image/outfile, test/events/iso/__init__.py,
	test/events/iso/default.conf, test/events/iso/iso.conf,
	test/events/mixins.py, test/events/product-image/__init__.py,
	test/events/product-image/product-image.conf, test/events/updates-
	image/updates-image.conf:
	bug fixes and improvements to test system

	lib/dimsbuild/event/__init__.py
	 * removed the Event._run hack; new solution implemented in
	test/__init__.py lib/dimsbuild/event/diff.py
	 * modified behavior of DiffObject.test_diffs() slightly so that it
	immediately returns if not using diff test's handlers
	test/__init__.py
	 * changed the behavior of EventTest.clean_*_md(); instead of removing
	the md folder completely, merely removes its contents
	 * added EventTest.execute_predecessors(event), which executes all the
	events prior to the given event
	 * added EventTest.failIfRuns(event) and
	EventTest.failUnlessRuns(event), both of which raise
	AssertionErrors if the given event does or does not call its
	run() method, respectively
	 * added EventTest._runEvent(event), the helper method for the above
	two tests test/events/*/__init__.py
	 * leveraged new methods execute_predecessors() and fail*Runs(), above
	test/events/bootiso/__init__.py
	 * added missing default boot args, 'method' and 'ks'
	 * took advantage of new testArgs() method in BootConfigEventTest (see
	mixins.py) test/events/bootiso/default.conf
	 * renamed 'bootiso.conf'
	 * removed 'boot-config/@use-defaults'; boot config mixin now handles
	toggling this value automatically
	test/events/bootiso/nodefault.conf
	 * removed test/events/comps/__init__.py
	 * added missing 'printing' group to Test_GroupsByRepo.included_groups
	 * added core test suites test/events/comps/conf.groups-by-repo
	 * changed the repoid of the printing group to 'fedora-6-base' (since
	'fedora-6-updates' doesn't have a groupfile) test/events/core.py
	 * added CoreEventTest superclass
	 * all CoreEventTestXX classes now extend CoreEventTest
	 * leveraged new methods execute_predecessors() and fail*Runs(), above
	test/events/diskboot-image/__init__.py
	 * added missing 'method' and 'ks' default boot args
	 * added default runTest() method to DiskbootEventTest test/events
	/diskboot-image/default.conf
	 * renamed 'diskboot-image.conf'
	 * removed 'boot-config/@use-defaults'; boot config mixin now handles
	toggling this value automatically
	 * removed 'path' elements; image modify mixin now handles setting
	these values automatically test/events/diskboot-image/infile
	 * removed; automatically generated by image modify mixin test/events
	/diskboot-image/infile2
	 * removed; automatically generated by image modify mixin test/events
	/diskboot-image/nodefault.conf
	 * removed removed test/events/diskboot-image/outfile
	 * removed; automatically generated by image modify mixin
	test/events/iso/__init__.py
	 * added default setUp() and runTest() methods to IsoEventTest
	 * added Test_SetsChanged, class which checks that set changing
	behavior is working correctly
	 * utilizes new image modify mixin test methods to do most of the
	image-related tests test/events/iso/default.conf
	 * renamed 'iso.conf'; boot config mixin now handles toggling 'boot-
	config/@use-defaults' automatically test/events/mixins.py
	 * ImageModifyMixinTestCase.setUp() now automatically generates input
	files and creates a corresponding config section for any event
	that uses it; this means events no longer have to include their
	own test files or config sections
	 * fixed IMMTests_ConfigPaths, which was looking for files in the image
	in the wrong location
	 * added BootConfigMixinTestCase.testArgs(image, filename, defaults),
	which looks for the file named filename in the given image and
	checks its boot args. The defaults argument determines whether
	or not to check for the default boot args as well as the ones
	contained in the config file
	 * renamed BootConfigMixinTestCase.get_boot_args() to
	BootConfigMixinTestCase._get_boot_args()
	 * renamed BootConfigMixinTestCase.check_boot_args() to
	BootConfigMixinTestCase._check_boot_args() test/events/product-image
	/product-image.conf
	 * removed 'path' elements; image modify mixin now handles setting
	these values automatically test/events/updates-image/updates-
	image.conf
	 * removed 'path' elements; image modify mixin now handles setting
	these values automatically
	[83cd6c6bba67]

2007-11-14  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/event/fileio.py:
	fileio: sync_input() now uses output diffdict for determining
	existing file changes
	[e4a439ae51d4]

2007-11-13  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/rpms.py:
	theme-rpm tests: fixed KeyError raised in theme-rpm.

	* dimsbuild/test/events/rpms.py:
	- ignoring 'requires', 'obsoletes', and 'provides' that start with '/'
	(i.e. files)
	- raising a more appropriate error message when a KeyError is raised.
	[d4534630698f]

2007-11-13  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: modified run function to handle case when metadata exists
	for some but not all repos.
	[9d784be22d1c]

2007-11-13  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	Bug 79 : config-rpm fails if the element has no contents.

	* lib/dimsbuild/modules/shared/rpms.py:
	- the RpmBuildMixin._test_build() function is no longer needed,
	because the event is not loaded if it is disabled taking care of
	everything _test_build() used to.

	* lib/dimsbuild/modules/{core,extensions}/rpms:
	- not using RpmBuildMixin._test_build()

	* lib/dimsbuild/modules/extensions/rpms/config-rpm.py:
	- the ConfigRpmEvent had the _test_build() function that overrode the
	one in RpmBuildMixin. This method returned true iff there were
	elements in the <config-rpm/> element. This method has also been
	deleted because if a user explicitly enables an extension module, it
	should generate output.
	[990a1bd55e30]

2007-11-13  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/verify.py,
	lib/dimsbuild/modules/extensions/iso.py, lib/dimsbuild/verify.py,
	test/__init__.py, test/events/bootiso/__init__.py,
	test/events/bootiso/default.conf,
	test/events/bootiso/nodefault.conf, test/events/core.py, test/events
	/diskboot-image/__init__.py, test/events/diskboot-
	image/default.conf, test/events/diskboot-image/diskboot-image.conf,
	test/events/diskboot-image/nodefault.conf,
	test/events/iso/__init__.py, test/events/iso/default.conf,
	test/events/iso/nodefault.conf, test/events/mixins.py:
	Added 'bootiso' and 'iso' test cases

	lib/dimsbuild/event/verify.py
	 * added VerifyObject.failIfExists(), a method which fails if the given
	path exists
	 * added VerifyObject.failUnlessExists(), a method which fails unless
	the given path exists lib/dimsbuild/modules/extensions/iso.py
	 * added IsoEvent.verify_iso_sets(), a method which checks for the
	presence of both split trees and corresponding isos as well as
	the final size of the iso images
	 * added quoting around arguments to shlib calls so that isos with
	spaces in their name will work lib/dimsbuild/verify.py
	 * changed BuildTestResult.printErrorList() to
	BuildTestResult._strErrors(), which returns a string (instead of
	writing lines to the logger). As a conseqence,
	BuildTestResult.printErrors() merely logs the result of calling
	_strErrors() test/__init__.py
	 * added EventTest.failIfExists() and EventTest.failUnlessExists();
	same as the above methods test/events/bootiso/*
	 * initial commit of bootiso checking test/events/bootiso/default.conf
	 * config file for checking default boot args
	test/events/bootiso/nodefault.conf
	 * config file for checking no default boot args test/events/core.py
	 * CoreEventTestXX now print out the result of verification failure as
	part of their error output (so that the user no longer has to go
	turn on dimsbuild output to see what the verification error was)
	test/events/diskboot-image/__init__.py
	 * added Test_BootArgsNoDefault, which tests the case when the 'use-
	default' attribute is disabled in the config file test/events
	/diskboot-image/diskboot-image.conf
	 * removed; split into 'default.conf' and 'nodefault.conf' test/events
	/diskboot-image/default.conf
	 * config file for checking default boot args test/events/diskboot-
	image/nodefault.conf
	 * config file for checking no default boot args
	test/events/iso/__init__.py
	 * initial commit of iso checking test/events/iso/default.conf
	 * config file for checking default boot args
	test/events/iso/nodefault.conf
	 * config file for checking no default boot args
	[1cce02ad5a4a]

2007-11-13  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/rpms.py:
	rpms: changed several default values in RpmBuildMixin.__init__ to
	empty lists rather than none
	[2b1ec1c2fd3c]

	* lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py:
	pkglist: revert to validating 'user-required-packages' (not
	'required-packages')

	This commit partially backs out changes from changeset 542 at
	https://www.abodiosoftware.com/hg/dimsbuild.

	The problem we are trying to solve is to notify users when specified
	packages do not exist in provided input repositories. Ideally, we
	would accomplish this by testing that all packages listed in the
	comps file are included in the pkglist generated by the depsolving
	process. Unfortunately, because other tools that use the comps file
	(i.e. anaconda and yum) do not error on missing packages, comps
	files routinely list extraneous packages including archecture
	specific packages (e.g. s390utils, ppc64-utils), upstream vendor
	packages (e.g. rhn-setup), and unknown, perhaps old or erroneous
	packages (elsa, gnopernicus, lha, pup) etc.

	The changes in changeset 542 were based on the assumption that all
	extraneous packages were architecture specific. In that changeset we
	removed architecture specific packages from the generated comps
	file, and modified pkglist to verify comp-specified packages against
	the pkglist. Given the discussion above, this approach addressed
	only one of the multiple classes of extraneous packages. We could
	have expanded this approach to additionally blacklist all extraneous
	packages for a given base distribution. The difficulty then would be
	in maintaining accurate blacklists across numerous potential base-
	distribution versions.

	This commit takes a different approach. Actually it reverts to the
	previous approach, which is to verify that packages specifically
	listed by users under the comps/core section of the config file are
	included in the package list. This list is referred to as the
	'user-required-packages' list. This is admittedly a partial
	solution, but the cleanest we can come up in the short term that
	doesn't introduce blacklist matrix/maintenance headaches.

	lib/cimsbuild/modules/core/software/comps.py
	* removed ARCH_PKGS dictionary
	* removed build_arch_set function
	* removed the call to build-arch-set from comps generation code
	* added code in the apply function to set the 'user-required-packages'
	control variable

	lib/dimsbuild/modules/core/software/pkglist.py
	* changed the verify pkglist content function to test for the
	existence of user-required-packages (not required-packages) in the
	package list
	[f620db4c8dc9]

2007-11-12  Uday Prakash  <uprakash@abodiosoftware.com>

	* test/events/rpms.py:
	added checks for expected obsoletes, requires, and provides in RPMs.
	[4de73b6215b4]

	* lib/dimsbuild/modules/core/rpms/custom-repo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	requires, obsoletes, and provides are now stores as lists.

	* lib/dimsbuild/modules/shared/rpms.py:
	- RpmBuildMixin.requires, RpmBuildMixin.obsoletes, and
	RpmBuildMixin.provides were strings, which are a pain to extend and
	test. Fixed.
	[72e6e083c742]

	* lib/dimsbuild/modules/shared/rpms.py:
	added color info for Fedora 8.

	* lib/dimsbuild/modules/shared/rpms.py:
	- added background, font, and highlight colors to be used while
	building Fedora 8 distributions.
	[90a9c78ec477]

	* lib/dimsbuild/verify.py:
	fixed the error warning.

	* lib/dimsbuild/verify.py:
	- print err[1] instead of err[1].message.
	[331e745fac95]

	* test/events/logos-rpm/__init__.py, test/events/release-
	rpm/__init__.py:
	not testing cvars in Test_*RpmBuild* classes.
	[3f70fc709d68]

	* test/events/config-rpm/__init__.py, test/events/config-rpm/config-
	rpm.conf, test/events/theme-rpm/__init__.py, test/events/theme-rpm
	/theme-rpm.conf:
	added initial test suites for config-rpm and theme-rpm
	[db8769965aad]

	* test/events/logos-rpm/__init__.py, test/events/logos-rpm/logos-
	rpm.conf, test/events/release-rpm/__init__.py, test/events/release-
	rpm/release-rpm.conf, test/events/rpms.py:
	initial commit of logos-rpm and release-rpm suites.
	[632f3dba31b9]

2007-11-12  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/verify.py:
	verify: modified warning message for unittest python 2.4 compat
	[04ef9ef1f25e]

2007-11-12  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/event/verify.py:
	added missing import
	[c7d4889e8bd5]

	* lib/dimsbuild/event/verify.py:
	added VerifyObject._exc_info().

	* lib/dimsbuild/event/verify.py:
	- copied the function from unittest.py because in python2.4, the
	function has two leading underscores, and in python2.5, it has just
	one.
	[0955899633f9]

	* lib/dimsbuild/modules/core/rpms/release-rpm.py:
	test_diffs() doesn't print out debug messages.

	* lib/dimsbuild/modules/core/rpms/release-rpm.py:
	- not setting the debug parameter to True in the test_diffs() function
	call.
	[ce6394b73d6a]

2007-11-12  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/verify.py:
	Bug fix to verification code - incorrect test name sometimes listed
	on fails

	lib/dimsbuild/event/verify.py
	 * VerifyObject.unittest() now creates unittestFunctionTestCases for
	each test method it runs rather than passing itself with
	different method and documentation values. This allows the error
	and failure printout to display the correct method name in the
	case when the failure/error wasn't in the last method to be
	tested
	[5184920583f3]

	* lib/dimsbuild/constants.py, lib/dimsbuild/modules/core/installer
	/diskboot-image.py, lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/bootcfg.py, lib/dimsbuild/verify.py:
	Fixes for bugs 73 and 74

	lib/dimsbuild/constants.py
	 * added group names for (S)RPM_PNVRA_REGEX so that
	.match().group(<name>) works lib/dimsbuild/modules/core/installer
	/diskboot-image.py
	 * now uses the existing syslinux.cfg file as the source for its boot
	config argument modification rather than cvars['boot-config-
	file'] lib/dimsbuild/modules/core/software/comps.py
	 * added ARCH_PKGS, a dictionary mapping architecture to arch-specific
	packages
	 * added build_arch_set, a function that takes a base arch and returns
	a list of packages _not_ for that arch
	 * comps now automatically excludes packages that do not match the
	requested base arch (via ARCH_PKGS and build_arch_set, above)
	 * comps now checks to ensure that all groups with the 'repoid'
	attribute are specifying repositories that actually have
	groupfiles lib/dimsbuild/modules/core/software/pkglist.py
	 * added PkglistEvent.verify_pkglist_content, which checks to make sure
	all cvars['required-packages'] are included in cvars['pkglist']
	lib/dimsbuild/modules/shared/bootcfg.py
	 * added a 'cfgfile' argument to BootConfigObject.modify; this allows
	events to specify their own file to use instead of the default
	cvars['boot-config-file'] lib/dimsbuild/verify.py
	 * added an error message on log levels below 4 for errors in
	verification methods (previously printed nothing)
	[f8dead7d8e04]

	* lib/dimsbuild/event/__init__.py, test/events/autoclean/__init__.py,
	test/events/comps/__init__.py, test/events/core.py, test/events
	/diskboot-image/__init__.py, test/events/mixins.py, test/events
	/product-image/__init__.py, test/events/stage2-images/__init__.py,
	test/events/updates-image/__init__.py:
	lib/dimsbuild/event/__init__.py
	 * re-added in changed I already made; apparently I merged poorly
	test/*
	 * corrected references from 'origin' to 'test'; note - for testing to
	work, the path to the test folder must be added to the python
	path. We will likely want to investigate other solutions to this
	in the future
	[23ac2f2f3530]

2007-11-08  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/software/__init__.py:
	event: added suppress_run_message property

	Added new suppress_run_message variable to the Event class. If this
	variable is True, the event id is not displayed prior to executing
	the event's run function.

	lib/dimsbuild/event/__init__.py
	* __init__() - added suppress_run_message to method signature with a
	default value of False
	* __init__() - set self.suppress_run_function to passed in value
	* execute() - display event id in log prior to run function, unless
	self.suppress_run_message

	lib/dimsbuild/main.py
	* AllEvent - set suppress_run_message = True

	lib/dimbuild/modules/core/init.py
	* InitEvent - likewise
	* SetupEvent - likewise
	* OSMetaEvent - likewise

	lib/dimsbuild/modules/core/installer/__init__.py
	* InstallerEvent - likewise

	lib/dimsbuild/modules/core/rpms/__init__.py
	* RpmsEvent - likewise

	lib/dimsbuild/modules/core/software/__init__.py
	* SoftwareEvent - likewise
	[53fac22a2033]

	* lib/dimsbuild/modules/core/autoclean.py:
	autoclean: modified EventHandler mdwrite() to write all data,
	previously only wrote out differences
	[079505227571]

2007-11-08  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* test/__init__.py, test/events/__init__.py,
	test/events/autoclean/__init__.py,
	test/events/autoclean/autoclean.conf, test/events/comps/__init__.py,
	test/events/comps/comps.xml, test/events/comps/conf.exclude-
	packages, test/events/comps/conf.groups-by-repo,
	test/events/comps/conf.include-core-groups, test/events/comps/conf
	.include-groups, test/events/comps/conf.include-packages,
	test/events/comps/conf.multiple-groupfiles,
	test/events/comps/conf.supplied, test/events/core.py, test/events
	/diskboot-image/__init__.py, test/events/diskboot-image/diskboot-
	image.conf, test/events/diskboot-image/infile, test/events/diskboot-
	image/infile2, test/events/diskboot-image/outfile,
	test/events/mixins.py, test/events/pkglist/pkglist.conf, test/events
	/product-image/__init__.py, test/events/product-image/infile,
	test/events/product-image/infile2, test/events/product-
	image/outfile, test/events/product-image/product-image.conf,
	test/events/stage2-images/__init__.py,
	test/events/stage2-images/stage2-images.conf, test/events/updates-
	image/__init__.py, test/events/updates-image/infile, test/events
	/updates-image/infile2, test/events/updates-image/outfile,
	test/events/updates-image/updates-image.conf:
	initial commit of testing framework for dimsbuild

	No documentation yet, see me with questions. Framework is designed
	specifically to be very flexible and as non restrictive as possible.
	In most cases, you will find that dimsbuild itself is more
	restrictive in terms of what you can test than what the framework
	itself does and doesn't allow.

	test/__init__.py
	 * contains the main Event test superclass, EventTest. This is a
	subclass of unittest.TestCase; as such, it contains all the
	failIf*, failUnless*, and assert* methods
	 * the test folder contains subfolders, one per event, which are each
	individually capable of testing the specific event to which they
	refer, or as a part of a larger test process
	 * running this file (python test/__init__.py) will test all defined
	events (this will take a long time) test/events/*/__init__.py
	 * these files contain individual, Event-specific tests that should be
	run in concurrency with the standard set of event tests (see
	core.py and mixin.py)
	 * these files should define a make_suite() function which creates a
	test suite that can be run to test out the event completely
	 * these files should also define a main() method that performs the
	entire suite's set of tests to the specific event; this allows
	the event's tests to be performed as part of a larger execution
	process test/events/*/*conf*
	 * these are config files for the specific event; some events need only
	one config file for a full battery of tests while others need
	multiple test/events/*/*
	 * all remaining files are some form of file input for the event tests
	test/events/core.py
	 * contains a set of core tests that apply to all events; specifically,
	the behavior of events in various combinations of --force,
	--skip, and the absence thereof test/events/mixins.py
	 * contains sets of tests for each mixin used in dimsbuild (as with the
	mixins in other dimsbuild sections, it is highly likely this will
	be split into more specialized files as time goes on)
	[5671635dab0a]

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/verify.py,
	lib/dimsbuild/logging.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/shared/bootcfg.py,
	lib/dimsbuild/modules/shared/installer.py:
	lib/dimsbuild/callback.py
	 * removed check for NoneType on Event.logger.logfile (see logging.py
	below) lib/dimsbuild/event/__init__.py
	 * removed check for NoneType on Event.logger.logfile (see logging.py
	below) lib/dimsbuild/event/diff.py
	 * Event.diff.test_diffs() now returns True in the event that the
	computed diff set is empty (events always run in the default case
	if they don't use our special stuff)
	lib/dimsbuild/event/verify.py
	 * fixed Event.verifier.shortDescription() to prevent it from raising
	an exception in the case when the verification method in question
	has no docstring lib/dimsbuild/logging.py
	 * added NullLogger class, a simple class which acts as if routing
	output to /dev/null (write() and log() calls merely pass)
	 * changed make_log() to use the NullLogger class in the event when a
	logfile isn't specified instead of None; this means events no
	longer have to check Event.logger.logfile to see if it is None
	before using lib/dimsbuild/main.py
	 * modified logging calls to use dimsbuild's internal logger rather
	than the Event's logger (these techincally are the same thing,
	but this way is cleaner)
	lib/dimsbuild/modules/core/installer/bootiso.py
	 * now utilizes BootConfigMixin._process_*()
	lib/dimsbuild/modules/core/installer/diskboot-image.py
	 * now utilizes BootConfigMixin._process_*()
	lib/dimsbuild/modules/core/software/gpgcheck.py
	 * removed check that was causing gpgcheck to not run even when the
	Event spec indicates that it should. This may need further
	investigation as it is not the only event that behaves this way
	lib/dimsbuild/modules/extensions/iso.py
	 * now utilizes BootConfigMixin._process_*()
	lib/dimsbuild/modules/shared/bootcfg.py
	 * boot args are now treated internally as a list rather than a string,
	though cvars and config should still use strings
	 * added BootConfigMixin._process_method(), which accepts a list of
	args and appends the 'method=' boot arg in cases when appropriate
	(the 'web-path' cvar is set)
	 * added BootConfigMixin._process_ks(), which accepts a list of args
	and appends the 'ks=' boot arg in cases when appropriate (the
	'ks-path' cvar is set) lib/dimsbuild/modules/shared/installer.py
	 * corrected invalid calls of Event.fail* to Event.verifier.fail*
	[ace3794921be]

2007-11-08  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/validate.py:
	print complete path to schema file in case of failed validation.

	* lib/dimsbuild/validate.py:
	- printing BaseConfigValidator.curr_schema instead of the schema_file
	parameter
	[c1198cfe38f5]

2007-11-07  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/createrepo.py:
	* lib/dimsbuild/modules/shared/createrepo.py:
	- if the version of createrepo installed is 0.4.9, and no createrepo
	RPM is installed, don't pass --update to createrepo.
	[0c19e2d85623]

	* lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/extensions/installer/kickstart.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py:
	fixed some verify_*() functions and whitespace cleanup.
	[406ec219af92]

	* lib/dimsbuild/modules/shared/createrepo.py:
	fixed createrepo --update on older machines.

	* lib/dimsbuild/modules/shared/createrepo.py:
	- check 'createrepo --version'; if it is > 0.4.9, then can update for
	sure. If it is equal to 0.4.9, check the RPM version, and if the RPM
	version is >= 0.4.10, then can pass --update to createrepo.
	[bfe9233451e6]

2007-11-07  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py:
	event: reverted commit from yesterday - check again returns true by
	default
	[88050845cf5f]

2007-11-06  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/verify.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/core/compose.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/installer.py, lib/dimsbuild/verify.py:
	lib/dimsbuild/callback.py
	 * added test for logger.logfile before trying to log to it
	lib/dimsbuild/event/__init__.py
	 * changing an event's status to None is no longer subject to
	protection (or rather, changing status to None is allowed no
	matter what protection setting is specified)
	 * added check for logger.logfile before printing exception info to it
	 * added a simple _run flag to events to indicate their run method was
	called; this is a hack to get testing working for now; will
	investigate other ideas at a future time
	lib/dimsbuild/event/verify.py
	 * Event.verifier.unittest() now returns the result so it can be
	interpreted elsewhere in the program lib/dimsbuild/logging.py
	 * if a logfile isn't given, sets logger.logfile to None
	lib/dimsbuild/main.py
	 * changed Build._get_conf signature; now accepts an options instance
	instead of config paths directly; this greatly improved
	subclassing lib/dimsbuild/modules/core/compose.py
	 * added ComposeEvent, from os_compose.py
	lib/dimsbuild/modules/core/init.py
	 * added InitEvent.verify_directories_exist
	 * added OSMetaEvent here, from os_compose.py
	lib/dimsbuild/modules/core/publish.py
	 * removed conditional requirement 'gpgsign-public-key' from publish-
	setup event lib/dimsbuild/modules/core/software/comps.py
	 * added try/except blocks around xmltree.config.read code for when
	requested file does not exist; will have to investigate this
	further lib/dimsbuild/modules/core/software/pkglist.py
	 * added try/except blocks around xmltree.config.read code for when
	requested file does not exist; will have to investigate this
	further lib/dimsbuild/modules/shared/installer.py
	 * removed ImageModifyMixin._valitate_image()
	 * added ImageModifyMixin.verify_image; which does the same as
	_validate_image used to do lib/dimsbuild/verify.py
	 * changed log level of warnings from 0 to 1
	lib/dimsbuild/modules/core/os_event.py
	 * removed; split into compose.py (ComposeEvent) and init.py
	(OSMetaEvent)
	[8ac33882d316]

2007-11-06  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/download.py:
	download: display 'downloading packages' heading only if new repo
	pkgs
	[af2d45dd2414]

	* lib/dimsbuild/modules/core/rpms/custom-repo.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py:
	custom-repo: renamed 'localrepo' module/event -> 'custom-repo
	[4f3293e14713]

	* lib/dimsbuild/modules/core/software/download.py:
	download: downloading rpms (and displaying output) on a per-
	repository basis
	[5d28c809df91]

2007-11-06  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/extensions/sources.py:
	fixed SourceRepoEvent's verify_pkgsfiles_exist() function.

	* lib/dimsbuild/modules/extensions/sources.py:
	- added doc
	- fixed the failUnless() function call.
	[2103b2097e5a]

2007-11-06  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/repos.py:
	RepoEventMixin: tweaks to log output for downloading repodata files

	Was:
	 * fedora-base
	 * downloading input files
	   - comps.xml [=========================] 854 kB
	(00:00)
	   - filelists.xml.gz [=========================] 2.5 MB
	(00:00)
	   - other.xml.gz [=========================] 6.5 MB
	(00:00)
	   - primary.xml.gz [=========================] 844 kB
	(00:00)
	   - repomd.xml [=========================] 1.1 kB
	(00:00)

	Now:
	 * downloading repodata - 'fedora-base'
	   - comps.xml [=========================] 854 kB
	(00:00)
	   - filelists.xml.gz [=========================] 2.5 MB
	(00:00)
	   - other.xml.gz [=========================] 6.5 MB
	(00:00)
	   - primary.xml.gz [=========================] 844 kB
	(00:00)
	   - repomd.xml [=========================] 1.1 kB
	(00:00)
	[cdada697f522]

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: removed debug check function
	[887b3dbdade0]

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: now downloads keys and checks rpms on a per-repo basis
	[af82033e5215]

2007-11-06  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/main.py, lib/dimsbuild/validate.py:
	printing complete path to schema file if reading it failed.

	* lib/dimsbuild/validate.py:
	- when raising InvalidSchemaError, the first argument is now set to
	self.curr_schema instead of schema_file.
	[e34ebec7f178]

	* lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/validate.py, lib/dimsbuild/verify.py:
	removed unnecessary import.

	* lib/dimsbuild/modules/core/software/download.py:
	- removed shlib import
	[554b38d23e2f]

2007-11-06  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/modules/core/init.py:
	logging: event headers display only when check return true; check
	returns false by default

	More logging tweaks. With this change we go back to a quieter
	logging scheme where event names print only if the event enters the
	run function (more specifically, if the check function returns
	True). The log message is displayed by the event object rather than
	by individual events. We are continuing to print the event name
	rather than a more descriptive event action (e.g. 'embedding
	distribution-specific logos into installer images'). Having the
	event name display will make it easier for users/developers to map
	from run time activities to documentation and code. Descriptive
	messages can be provided within the individual event run functions.
	Again, let's live with this awhile and tweak again if needed.

	lib/dimsbuild/event/__init__.py
	* set level for log message at beginning of execute() from 1 to 5.
	* added new log message that prints the event id just prior to
	entering the run function
	* added a note about the change in behavior for the check function;
	i.e. by default check returns false

	lib/dimsbuld/event/diff.py
	* modified the test_diffs function to return false if len of diff_set
	!> 0

	lib/dimsbuild/modules/core/init.py
	* moved TEMP_DIR and METADATA_DIR folder creation (if not existing)
	from run to apply function
	* changed capitalization on first word of a log message for
	consistency
	[52a883bfdd89]

	* lib/dimsbuild/main.py:
	main: exposed parser object to apply_options function
	[6ea92086e344]

	* .hgignore:
	added .hgignore to omit python compiled and backup files
	[c0721097d2a5]

2007-11-05  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/software/gpgcheck.py:
	gpgcheck: bumped event version, minor fixes

	lib/dimsbuild/modules/core/software/gpgcheck.py
	* bumped event version number
	* using a list rather than a set to contain rpms by repo
	* if metadata value for 'checks' variable is not iterable, set checks
	= an empty dictionary
	[590f1b05a939]

	* lib/dimsbuild/callback.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/repo.py:
	gpgcheck: moved to 'core', modified display

	lib/dims/callback.py
	* modified layout of the SyncCallback class to align with
	BuildDepsolveCallback

	lib/dimsbuild/modules/core/software/gpgcheck.py
	* added file
	* modified display to group rpms by source repository for
	troubleshooting convenience

	lib/dimsbuild/modules/extensions/software/gpgcheck.py
	* removed file

	lib/dimsbuild/repo.py
	* fixed _get_gpgkeys() to return the value from the gpgkey (singular)
	key
	[f8417457fec2]

2007-11-05  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/event/fileio.py, lib/dimsbuild/event/verify.py,
	lib/dimsbuild/modules/extensions/sources.py:
	the downloaded RPMs have a mode of 644.

	* lib/dimsbuild/modules/core/software/download.py:
	- setting the default mode of the rpm to be 0644

	* lib/dimsbuild/modules/extensions/sources.py:
	- likewise
	[ed3282787451]

	* lib/dimsbuild/modules/core/software/download.py:
	download event not taking as long as before.

	lib/dimsbuild/modules/core/software/download.py:
	- creating a path object for each RPM that needs to be downloaded.
	[7cd5f814ee9f]

	* lib/dimsbuild/event/fileio.py, lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py:
	print messages during file-removal and release-rpm obsoletes
	*-release-notes.

	* lib/dimsbuild/event/fileio.py:
	- using callback in IOMixin.clean_eventcache()

	* lib/dimsbuild/modules/core/repos.py:
	- added fedora-, centos-, and redhat-release-notes to the list of
	items whose version is to be computed.
	[2ac82ad1f53a]

2007-11-05  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/repos.py:
	repos: fixed test condition of previous commit
	[14f7cf85214e]

	* lib/dimsbuild/modules/shared/repos.py:
	repos: detect yum variables in repo config and raise error

	Yum variables (e.g. "$releasever, $arch, $basearch, and $YUM0 -
	$YUM9) are ambiguous in the distribution build context. For example,
	should $releasever be the release number of a) the build machine, b)
	the distribution being built, or c) the base repo?. This change
	detects the presence of yum variables and raises a ValueError
	directing the user to replace yum variables with fixed values.
	[8e52f14ae71a]

2007-11-02  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/shared/repos.py, lib/dimsbuild/repo.py:
	repos: fixed repofile handling to deal with relative paths

	lib/dimsbuild/repo.py
	* modified RepoContainer object to accept event object, used to
	determine config file path for resolving relative paths
	* added support for resolving relative paths
	* removed try:catch block around opening repofile so that IO error
	will be raised if file does not exist

	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/shared/repos.py
	* modified RepoContainer instantiation, now passing event object
	[e5b73feec9c3]

	* lib/dimsbuild/event/verify.py:
	verify: added shortDescription() in VerifyObject class; needed for
	python 2.4 compat
	[9a0bda3a9b9f]

2007-11-02  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/verify.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/repos.py, lib/dimsbuild/modules/core/rpms
	/config-rpm.py, lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/config-rpm.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/verify.py:
	added verification for event output

	Summary: Added verification step to event output. Instead of
	checking that all output was properly created in the apply() method,
	there is a new verify() method that does this. Additionally,
	instead of raising a RuntimeError on failed verifies, merely warns
	the user and continues execution. This allows dimsbuild to complete
	tasks unrelated to the error so that subsequent executions are
	faster (since these other tasks have already been completed). In
	the event that continuing execution is impossible, dimsbuild will
	raise an exception normally; however, since the warning was printed
	out, the user should have a generally good idea about the reason for
	the error.

	lib/dimsbuild/event/__init__.py
	 * added VerifyMixin
	 * Event.execute() now calls Event.verify() after Event.apply()
	lib/dimsbuild/event/verify.py
	 * initial commit, defines VerifyMixin class
	 * VerifyMixin defines Event.verifier, the verify class, and
	Event.verify(), the method by which verification is performed
	 * VerifyObject is the class that performs verification. When it's
	unittest() method is called, it examines the Event object for
	methods starting with 'verify_'. It then calls these methods and
	stores the results
	 * below log level 4, all verification FAILs are reported to the user
	as warnings. At and above level 4, output is printed directly to
	the log for both FAILs and ERRORs lib/dimsbuild/modules/*
	 * removed all checking in *Event.apply() methods of output
	 * created *Event.verify_*() methods for each of the above checks
	lib/dimsbuild/modules/core/rpms/config-rpm.py
	 * moved to lib/dimsbuild/modules/core/rpms/config-rpm.py
	lib/dimsbuild/verify.py
	 * initial commit; defines BuildTestResult class
	 * BuildTestResult is essentially a unittest._TextTestResult class that
	outputs to a log object instead of a stream
	[aa11db6bb3bd]

2007-11-02  Kay Williams  <kwilliams@abodiosoftware.com>

	* lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/installer/kickstart.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/rpms.py:
	logging: print event name at beginning of event execution (log-level
	0)

	Summary: Previously, at the default log level (3), events tended to
	log information only when they entered their run functions. This
	approach was misleading for events which spend significant
	processing time in their setup functions (e.g. repos, download, and
	createrepo); giving the appearance that a prior event (e.g. auto-
	clean) was slow. Previously, at log level 4, events logged a
	message at the begging of event executing containing the event name
	('running %s'). This change moves the event execution message from
	log level 4 to 0 and changes the log message from 'running %s' to
	'%s'. This change also removes prior log level 0 messages from
	individual event run functions to avoid redundant log output.

	The resulting log output in the clean run or '--force ALL' case is
	more compact and less descriptive. This is a tradeoff of the above
	approach. We may want to modify some event names to make them more
	self-descriptive. We may also want to remove or consolidate some
	events, or consider removing some parent events. At any rate, in our
	documentation we will want to provide a reference equating an event
	name with the a description of the action it performs.

	Let's live with this approach awhile and see how we feel about it.
	We can tweak later if needed.
	[f612bf1b1bf8]

2007-11-02  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* lib/dimsbuild/callback.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/software/pkglist.py:
	various minor fixes
	[8212236821e4]

2007-11-01  Uday Prakash  <uprakash@abodiosoftware.com>

	* lib/dimsbuild/modules/shared/createrepo.py:
	fixed typo.

	* lib/dimsbuild/modules/shared/createrepo.py: had an extra alphabet
	('o' for the curious).
	[4cebd49a089b]

	* lib/dimsbuild/modules/shared/createrepo.py:
	createrepo --update always (loosely speaking) works.

	* lib/dimsbuild/modules/shared/createrepo.py:
	- using shlib.execute(), and in particular the underlying popen2
	python module, caues createrepo to hang in the case when createrepo
	  --update is not supported. Using execlib instead of shlib seems to
	fix the problem.
	[3e81dd7f36b8]

2007-10-31  Kay Williams  <kwilliams@abodiosoftware.com>

	* share/dimsbuild/schemas/distro.conf/comps.rng:
	comps.rng - removed obsolete 'core' attribute from 'group' element
	[39c268471c78]

	* lib/dimsbuild/modules/core/repos.py, lib/dimsbuild/modules/core/rpms
	/release-rpm.py:
	release-rpm: added provides for 'redhat-release = version'

	lib/dimsbuild/modules/core/repos.py
	* added 'release-versions' to the event provides list
	* added logic to set release-versions cvar, later used by release-rpm
	* consolidated multiple package version related helper functions into
	a single function

	lib/dimsbuld/modules/core/rpms/release-rpm.py
	* added 'release-versions' to the event requires list
	* including release versions when setting obsoletes and requires for
	the rpm
	[b9159071416d]

2007-10-31  Daniel Musgrave  <dmusgrave@abodiosoftware.com>

	* bin/dimsbuild, lib/dimsbuild/callback.py,
	lib/dimsbuild/constants.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/installer/kickstart.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/repos.py:
	minor API change to EVENTS list, miscellaneous corrections

	Details: bin/dimsbuild
	 * completely removed config processing from binary (yay)
	 * completely removed import_dirs processing from binary (yay)
	 * dimsbuild/lib is now assumed to be in the pythonpath
	 * specifically define our own --help option instead of using the
	optparse default; this allows us to parse the config files, read
	in all the options from each event, and then display help
	lib/dimsbuild/callback.py
	 * added ProgressBar.enabled = False when log messages are below log
	level 3 lib/dimsbuild/constants.py
	 * changed RPM_REGEX, SRPM_REGEX, RPM_PNVRA_REGEX, and SRMP_PNVRA_REGEX
	from string to regular expression objects
	lib/dimsbuild/logging.py
	 * file log now optional; passing logfile=None will disable file
	logging lib/dimsbuild/main.py
	 * Build.__init__ now handles all the config processing that was
	formerly performed by the dimsbuild bin wrapper
	 * as a consequence of the above, Build.__init__() no longer accepts
	mainconfig or distroconfig arguments
	 * Build now has its own logger, which is the same logger used by the
	Event superclass
	 * added Build._get_config(), the equivalent of the bin wrapper's
	_get_conf() lib/dimsbuild/modules/*
	 * changed EVENTS dictionary from dictionary of lists of Events to
	dictionary of lists of strings; this allows EVENTS to occur
	anywhere in file instead of only after every event declaration
	and also helps for unit testing
	lib/dimsbuild/modules/core/software/download.py
	 * modified the processed list to consider arch as well as nvr string -
	this allows dimsbuild to download multiple versions of arch-
	specific packages, like kernel
	 * updated DownloadEvent.error() method to deal with the 'debug' folder
	instead of the '.debug' folder
	lib/dimsbuild/modules/extensions/files.py
	 * updated FilesEvent.error() method to deal with the 'debug' folder
	instead of the '.debug' folder
	[6c326595d996]

2007-10-30  Uday Prakash  <uprakash@abodiosoftware.com>

	* build/setup.cfg:
	change dims-common to dimscommon

	* build/setup.cfg:
	- changed dims-common requirement to dimscommon
	[0a8eac21d931]

2007-10-29  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/publish.py, lib/dimsbuild/repo.py:
	[svn] dimsbuild/lib/dimsbuild/modules/core/publish.py
	 * removed hack code for modifying Event.files_callback; instead, event
	now defines its own callback instance and passes it to sync_input
	dimsbuild/lib/dimsbuild/repo.py
	 * added namespaces since xmltree is now namespace-sensitive
	 * automatically translates boolean values into '0' and '1' when
	running Repo.__str__() to maintain full compatability with yum
	[c7b3298d608b]

2007-10-24  uprakash  <uprakash>

	* lib/dimsbuild/locals.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/locals.py:
	- fixed the name of the file names that are used by RHGB; was creating
	main-file.png and system-file.png instead of main-logo.png and
	system-logo.png.
	[251c94627547]

2007-10-24  kwilliams  <kwilliams>

	* docsrc/comps.rng, docsrc/lib.rng,
	lib/dimsbuild/modules/core/software/comps.py,
	share/dimsbuild/schemas/distro.conf/comps.rng:
	[svn] Summary: Changes to comps configuration. The comps element
	now takes three elements: core, groups, and exclude. The core
	element contains package and group elements. Specified packages are
	added to the core group. Packages from the specified groups are
	also added to the core group. The groups container takes group
	elements, as before. One difference is that group elements no
	longer have a 'core' attribute. The exclude element is unchanged.
	This commit also includes comps and lib schema documentation
	updates.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/comps.rng
	* removed include container element
	* added core container element which takes zero or more interleaved
	group and package elements

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/comps.rng
	* _generate_comps()-changed the xpath for locating packages to add to
	the core group
	* _validate_repoids() - now look for group elements in both core and
	groups containers
	* _process_groupfile - updated logic for determining which groups are
	"core"

	dimsbuild/trunk/docsrc/lib.rng
	* exclude element - modified parent event from obsolete 'create-new'
	to comps
	* exclude element - modified 'see also' to include 'repos', 'repo' and
	'includepkgs'
	* includepkgs element - changed from 'include', updated documentation
	since this element is now only used within repo elements

	dimsbuild/trunk/docsrc/comps.rng
	* comps element - added core element, removed include element, updated
	documentation
	* groups element - removed core attribute, updated documentation
	* core element - added documentation
	[2f9f4a32550f]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/fileio.py:
	[svn] Summary: Removed '.' from beginning of debug folder name for
	easier troubleshooting.

	dimsbuild/trunk/lib/dimsbuild/event/__init__.py
	* execute() now removes folder named 'debug' if it exists (was
	'.debug')

	dimsbuild/trunk/lib/dimsbuild/event/fileio.py
	* IOMixin.error() now moves mddir contents into folder named 'debug'
	[1fd54a2d85e0]

2007-10-24  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/extensions/installer/__init__.py,
	lib/dimsbuild/modules/extensions/installer/kickstart.py,
	lib/dimsbuild/modules/extensions/iso.py,
	share/dimsbuild/schemas/distro.conf/kickstart.rng:
	[svn] Summary: Added the 'kickstart' event, which downloads a file
	and sets up control variables that other events can use for
	kickstart-related activities. Of note are the initrd events, which
	copy the kickstarts into the images that they create, and the iso
	and diskboot events, which append kernel arguments when the
	kickstart is used.

	Details: dimsbuild/lib/dimsbuild/modules/extensions/iso.py
	 * 'iso' event no longer conditionally requires 'kickstart-file'
	 * 'iso' event now conditionally requires 'ks-path'
	 * added cvars['srpms'] to the variables list for difftest
	 * adjusted kernel argument handling to look for 'ks-path' cvar
	dimsbuild/lib/dimsbuild/modules/core/installer/initrd-image.py
	 * 'initrd-image' event now conditionally requires 'kickstart-file' and
	'ks-path'
	 * added cvars['kickstart-file'] to the variables list for difftest
	 * InitrdImageEvent._generate() now copies the kickstart file found at
	cvars['kickstart-file'] to the location in the image specified by
	cvars['ks-path'], if both are defined
	dimsbuild/lib/dimsbuild/modules/core/installer/xen-images.py
	 * 'xen-images' event now conditionally requires 'kickstart-file' and
	'ks-path'
	 * added cvars['kickstart-file'] to the variables list for difftest
	 * XenImagesEvent._generate() now copies the kickstart file found at
	cvars['kickstart-file'] to the location in the image specified by
	cvars['ks-path'], if both are defined
	dimsbuild/lib/dimsbuild/modules/core/installer/diskboot-image.py
	 * 'diskboot-image' event no longer conditionally requires 'kickstart-
	file'
	 * 'diskboot-image' event now conditionally requires 'ks-path'
	 * added cvars['ks-path'] to the variables list for difftest
	 * adjusted kernel argument handling to look for 'ks-path' cvar
	dimsbuild/lib/dimsbuild/modules/core/installer/bootiso.py
	 * 'bootiso' event no longer conditionally requires 'kickstart-file'
	 * 'bootiso' event now conditionally requires 'ks-path'
	 * adjusted kernel argument handling to look for 'ks-path' cvar

	Added: dimsbuild/share/dimsbuild/schemas/distro.conf/kickstart.rng
	 * schema file for <kickstart> top level element
	dimsbuild/lib/dimsbuild/modules/extensions/installer/kickstart.py
	 * initial commit of 'kickstart' event. This event downloads the
	kickstart file specified in its config section and sets the
	values of two cvars: 'kickstart-file', the path on disk to the
	file it just downloaded, and 'ks-path', the path inside an initrd
	image this file should be put
	[b98e34764b6e]

2007-10-24  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/core/software/pkglist.py:
	[svn] Summary: pkglist event tweaks for easier troubleshooting.

	dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py
	* Removed '.' from beginning of depsolve folder name (i.e. now
	'depsolve')
	* Removed '.' from beginning of depsolve_file name (i.e. now
	'depsolve-results')
	* Changed location of yum.conf file from temp folder to mddir
	* Added yum.conf file to output data
	* Consolidated setting of output data to a single line immediately
	preceding write_metadata().
	[e94ec59d35ef]

	* docsrc/lib.rng, docsrc/repos.rng, docsrc/sources.rng,
	lib/dimsbuild/repo.py, share/dimsbuild/schemas/distro.conf/lib.rng,
	share/doc/examples/example-centos-base-5/distro.conf,
	share/doc/examples/example-fedora-base-6/distro.conf,
	share/doc/examples/example-fedora-base-7/distro.conf,
	share/doc/examples/example-redhat-base-5/distro.conf:
	[svn] Summary: NOTE - THIS COMMIT BREAKS EXISTING DISTRO.CONF FILES.
	Changed the name of two repo elements for symmetry with yum.repo
	config. The changed elements are path -> baseurl and include ->
	includepkgs. Removed obsolete type attribute on repo elements from
	schema files and documentation. Updated example distro.conf files.

	dimsbuild/trunk/share/doc/examples/*/distro.conf
	* removed type attribute
	* added base-repo element
	* changed 'path' to 'baseurl'

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/lib.rng
	* removed type attribute
	* added baseurl element
	* removed path element
	* added includepkgs element
	* removed include element

	dimsbuild/trunk/lib/dimsbuild/repo.py
	* __str__() - removed mapping from 'include' to 'includepkgs'
	* read_config() - now setting self['baseurl'] using baseurl rather
	than path element
	* read_config() - now setting self['includepkgs'] rather than
	self['include']

	dimsbuild/trunk/docsrc/lib.rng
	* added placeholder refsect for baseurl
	* removed type attribute from programlisting
	* removed path and include elements from programlisting
	* added baseurl and include elements to programlisting
	* fixed a typo in attributes description
	* removed refsection for type attribute
	* changed path to baseurl in example programlisting

	dimsbuild/trunk/docsrc/sources.rng
	* changed baseurl to path in example programlisting

	dimsbuild/trunk/docsrc/repos.rng
	* added placeholder refsect for base-repo element
	* updated repos container documentation to refer to base-repo element
	rather than type attribute
	[8b9a0642c8d0]

2007-10-23  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/shared/bootcfg.py:
	[svn] dimsbuild/lib/dimsbuild/modules/extensions/iso.py
	 * corrected boot args for 'ks=file:/blahblah' case
	 * kickstart-file cvar must now include leading '/'
	dimsbuild/lib/dimsbuild/modules/shared/bootcfg.py
	 * bootconfig now supports a (limited) macro system for specifying boot
	args; any arg that is automatically passed as a default
	('method', 'ks' for diskboot and bootiso, 'ks' for iso) is
	available in a macro-esque form by specifying '%{<name>}' in the
	bootarg section. For example, if you don't want to use the
	default boot args for bootiso, but you do want to use the method
	it would use, you could do something like:

	 <bootiso> <boot-config use-default="false">
	<!-- '%{method}' replaced at runtime with 'method=...' -->
	<append-args>ro root=LABEL=/ %{method}</append-args> </boot-
	config> </bootiso>

	dimsbuild/lib/dimsbuild/modules/core/installer/diskboot-image.py
	 * kickstart-file cvar must now include leading '/'
	dimsbuild/lib/dimsbuild/modules/core/installer/bootiso.py
	 * kickstart-file cvar must now include leading '/'
	[e8be05c2b26f]

2007-10-23  kwilliams  <kwilliams>

	* docsrc/lib.rng, docsrc/repos.rng,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/repos.py, lib/dimsbuild/repo.py,
	share/dimsbuild/schemas/distro.conf/lib.rng, share/doc/examples
	/example-redhat-base-5/distro.conf:
	[svn] Summary: Removed repodata-path config element as this approach
	was incompatible with supporting native yum.repo files as input. Now
	we treat the baseurl as the path to the repodata folder, and we
	locate the 'osdir' by looking for a folder named 'images' (which
	exists in all known versions of anaconda) either parallel to the
	baseurl or one level up.

	dimsbuild/trunk/share/doc/examples/example-redhat-base-5/distro.conf
	* removed repodata-path element; appended 'Server/' to path element.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/lib.rng
	* removed repodata-path element

	dimsbuild/trunk/lib/dimsbuild/modules/shared/repos.py
	* removed all references to repodata attribute
	* added logic in RepoEventMixin.read_config() to set osdir

	dimsbuild/trunk/lib/dimsbuild/modules/shared/installer.py
	* removed unused repoid parameter to FileDownloadMixin.__init__()
	* modified FileDownloadMixin.setup to use osdir rather than remoteurl

	dimsbuild/trunk/lib/dimsbuild/modules/core/sourcevars.py
	* modified to use osdir rather than remoteurl
	* modified to get initrd.img location from locals.py rather than using
	hardcoded value

	dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py
	* removed reference to repodata dir when determining the path to local
	repodata folders

	dimsbuild/trunk/lib/dimsbuild/modules/core/software/comps.py
	* likewise

	dimsbuild/trunk/lib/dimsbuild/repo.py
	* removed all references to repodata attribute

	dimsbuild/trunk/docsrc/lib.rng
	* removed reference to repodata-path element in programlisting

	dimsbuild/trunk/docsrc/repos.rng
	* removed documentation for repodata-path element
	[8cff55420614]

2007-10-23  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/repos.py, lib/dimsbuild/modules/core/rpms
	/config-rpm.py, lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/bootcfg.py,
	lib/dimsbuild/modules/shared/createrepo.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/repos.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/bootiso.rng,
	share/dimsbuild/schemas/distro.conf/diskboot-image.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] Summary: Removed filereader; replaced by equivalent Path
	methods

	Added support for configuring boot args per event. 'diskboot-
	image', 'bootiso', and 'iso' now support <boot-config> elements
	which can be used to configure the boot arguments to append to the
	isolinux.cfg/syslinux.cfg sections. These elements have a 'use-
	defaults' attribute which tells dimsbuild whether or not to use the
	(sensible) defaults for that image type; this attribute defaults to
	True if not found. boot-config elements can have two child
	elements: 'boot-args' and 'boot-config'. The text field of the
	'boot-args' element is a string of boot args to append to whatever
	is in the file pointed to by 'boot-config'. If 'boot-config' is
	absent, the existing file for the image is used; if 'boot-args' is
	absent, no user-specified args are appended (though others may be
	depending on the value of '@use-default' and cvars['boot-args'].

	dimsbuild/share/dimsbuild/schemas/distro.conf/iso.rng
	 * added support for <boot-config> elements
	dimssbuild/share/dismbuild/schema/distro.conf/diskboot-image.rng
	 * added support for <boot-config> elements
	dimsbuild/share/dimsbuild/schemas/distro.conf/lib.rng
	 * defined the <boot-config> element dimsbuild/lib/dimsbuild/*
	 * removed filereader imports; replaced by equivalent Path methods
	(read_lines, write_lines) dimsbuild/lib/dimsbuild/callback.py
	 * added BuildDepsolveCallback.groupAdded(), which prints out a header
	message before each group loop while pkgorder depsolving. This
	should help the user understand that the program isn't in an
	infinite loop in teh case when their package set is relatively
	small dimsbuild/lib/dimsbuild/modules/extensions/iso.py
	 * IsoSetsEvent now extends BootConfigMixin
	 * 'iso' event now requires 'boot-config-file'
	 * 'iso' event now conditionally requires 'boot-args' and 'kickstart-
	file'
	 * IsoSetsEvent now checks its entire config section in
	diff.test_diffs() rather than just 'sets/text()'
	dimsbuild/lib/dimsbuild/modules/shared/*
	 * added __all__ definitions to limit the 'from x import *' statement
	dimsbuild/lib/dimsbuild/modules/shared/__init__.py
	 * reorganized import structure; instead of __init__ defining each
	mixin, mixins have been moved into separate files based on their
	function. __init__ now merely imports * from each one
	dimsbuild/lib/dimsbuild/modules/core/installer/initrd-image.py
	 * adjusted error() method to hopefully catch missed unmounts
	dimsbuild/lib/dimsbuild/modules/core/installer/isolinux.py
	 * 'isolinux' event now provides 'boot-config-file'
	 * removed boot arg handling; now performed by the images themselves
	 * sets the 'boot-config-file' cvar to the location of the isolinux.cfg
	file dimsbuild/lib/dimsbuild/modules/core/installer/diskboot-
	image.py
	 * DiskbootImageEvent now extends BootConfigMixin
	 * 'diskboot-image' event now requires 'boot-config-file'
	 * 'diskboot-image' event now conditionally requires 'web-path', 'boot-
	args', and 'kickstart-file'
	 * adjusted error() method to hopefully catch missed unmounts
	 * boot arg handling now performed by BootConfigMixin
	dimsbuild/lib/dimsbuild/modules/core/installer/bootiso.py
	 * 'bootiso' event now requires 'boot-config-file'
	 * 'bootiso' event now conditionally requires 'web-path', 'boot-args',
	and 'kickstart-file'
	 * BootisoEvent now checks its config section in diff.test_diffs()
	 * boot arg handling is performed by BootConfigMixin
	dimsbuild/lib/dimsbuild/modules/core/installer/product-image.py
	 * adjusted error() method to hopefully catch missed unmounts
	dimsbuild/lib/dimsbuild/modules/core/installer/updates-image.py
	 * adjusted error() method to hopefully catch missed unmounts

	Added: dimsbuild/share/dimsbuild/schemas/distro.conf/bootiso.rng
	 * added a schema for bootiso as it now checks a config section
	dimsbuild/lib/dimsbuild/modules/shared/repos.py
	 * contains RepoEventMixin, formerly in __init__.py
	dimsbuild/lib/dimsbuild/modules/shared/createrepo.py
	 * contains CreaterepoMixin, formerly in __init__.py
	dimsbuild/lib/dimsbuild/modules/shared/bootcfg.py
	 * contains BootConfigMixin
	 * BootConfigMixin is responsible for parsing <boot-config> sections in
	the config file and modifying boot arguments in
	isolinux.cfg/syslinux.cfg files
	 * Events that extend BootConfigMixin should require 'boot-config-file'
	 * creates a 'bootconfig' attribute on the Event; this object's
	'boot_args' and 'modify' attributes are 'interesting'
	 * bootconfig.boot_args is the string that will be appended to every
	'append' line following a 'label' line that isn't 'append -'
	 * bootconfig.modify() is the method that performs the above operation.
	It expects a single argument, the file it should modify
	[4b7be3a5e71d]

2007-10-22  uprakash  <uprakash>

	* lib/dimsbuild/locals.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/locals.py:
	- the 'anaconda/syslinux-splash.png' file now gets installed to
	/usr/share/anaconda/pixmaps and /usr/lib/anaconda-runtime/boot/.
	[34a256cd876a]

	* lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/shared/__init__.py:
	- maintaining a list of files that will be generated if createrepo is
	run
	- maintaining a second list of files that will be generated if
	createrepo is run with the --database flag
	- the CreateRepoMixin.createrepo() function returns a list of files
	created as a result of running the createrepo executable.

	* dimsbuild/trunk/lib/dimsbuild/modules/extensions/sources.py:
	- added the list of files returned by CreateRepoMixin.createrepo() to
	self.DATA['output'], instead of listing the repodata/ folder as an
	output

	* dimsbuild/trunk/lib/dimsbuild/modules/core/software/createrepo.py:
	- likewise
	[fe2ec103f6de]

	* lib/dimsbuild/modules/shared/__init__.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/shared/__init__.py:
	- deleting an unrequired period from the error message.
	[719b4f8fec11]

	* lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py,
	share/dimsbuild/schemas/distro.conf/createrepo.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng:
	[svn] Summary: This commits adds support to optionally create
	compressed sqlite databases in the repodata folder.

	* dimsbuild/share/schemas/distro.conf/{sources.rng,createrepo.rng}:
	- added optional boolean-valued attribute 'database' to the
	<createrepo/> and <sources/> elements.

	* dimsbuild/trunk/lib/dimsbuild/modules/shared/__init__.py:
	- added the CreateRepoMixin class
	- currently, this class just has one function, createrepo(), that
	takes a few parameters that can be used to modify/update/create
	the repodata folder created. The parameters include: update -
	defaults to True, groupfile - defaults to None, pretty - defaults
	to False, and quiet: defaults to True.
	- if the event's config section has a database attribute set to True,
	the createrepo executable is executed with the '--database' flag
	that creates the compressed sqlite databases in the repodata/
	folder. If it is set to False, all the *sqlite.bz2 files are
	deleted from the repodata/ folder.

	* dimsbuild/trunk/lib/dimsbuild/modules/core/software/createrepo.py:
	- using the CreateRepoMixin

	* dimsbuild/trunk/lib/dimsbuild/modules/extensions/sources.py:
	- likewise
	[9e44c91ec570]

	* lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/__init__.py, lib/dimsbuild/repo.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/repo.py:
	- a repo element's include element contains a list of packages that
	should be included from the repository. Yum calls this option
	'includepkgs' in its .repo file, but we were writing it out as the
	'include' option. The 'include' option means something different
	in YumLand.
	[697df8311862]

2007-10-19  dmusgrave  <dmusgrave>

	* share/dimsbuild/schemas/distro.conf/sources.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/sources.rng
	 * added validation support for 'repofile' elements
	[2b2d20735e8d]

	* lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/sources.py:
	[svn] See previous commit message
	[2dabb87535ad]

	* lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/installer.py, lib/dimsbuild/repo.py,
	share/dimsbuild/schemas/distro.conf/repos.rng:
	[svn] Summary: Changes in the way the config file specifies repos.
	Repos can still be specified as they were before; that is, as xml
	elements. Additionally, you can use a 'repofile' element whos text
	value points to a yum .repo file for one or more repositories.
	Because of this change, the base repo may not be defined in a 'repo'
	element; thus, in order to specify the base repo, you must instead
	use a 'base-repo' element whos text value is the id of the repo to
	use as the base.

	Details: dimsbuild/share/dimsbuild/schemas/distro.conf/repos.rng
	 * added support for 'repofile' elements
	 * added support for 'base-repo' element
	 * allowed interleaving on elements; previously not allowed
	dimsbuild/lib/dimsbuild/modules/shared/installer.py
	 * corrected repo['baseurl'] to repo.remoteurl
	dimsbuild/lib/dimsbuild/modules/shared/__init__.py
	 * updated read_config() signature to read_config(repos=None,
	files=None). repos and files are both xpath queries in the config
	file that return a list of repo xml sections and repofile xml
	sections, respectively. The repo xml sections are converted into
	repo objects via the Repo.read_config() method, while the
	repofile sections are converted by RepoContainer.read()
	dimsbuild/lib/dimsbuild/modules/core/repos.py
	 * RepoEvent.validate() updated to check for 'base-repo' element
	 * RepoEvent.validate() updated to ensure that config has at least one
	'repo' element or at least one 'repofile' element
	 * cvars['base-repo'] is now computed by reading 'base-repo/text()'
	rather than 'repo[@type="base"]/@id'
	 * 'repos' event now supports getting repo information both from xml
	and .repo files
	dimsbuild/lib/dimsbuild/modules/extensions/sources.py
	 * added SourceReposEvent.validate(); ensures that config has at least
	one 'repo' element or at least one 'repofile' element
	 * 'source-repos' event now supports getting repo information both from
	xml and .repo files dimsbuild/lib/dimsbuild/repo.py
	 * corrected Repo['baseurl'] to Repo.remoteurl
	 * removed the sep argument to _get_gpgkeys(); now splits on all
	whitespace like the other _get_*() methods
	[b4bc14ad4231]

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/installer.py, lib/dimsbuild/repo.py:
	[svn] Summary: Two major changes:

	1) Event protection scheme changes: Events now can 'protect'
	enabling, disabling, forcing, and skipping individually or as a
	whole. This allows the 'init' event to be forced, but not skipped,
	for example. Since 'init' is the only event that actually uses this
	protection at all, we may decide to remove the entire concept of
	protection; it used to be a more useful concept in the older
	dimsbuild world but some of the motivations have gone away since.

	2) Repos handling rewrite: the RepoContainer class was rewritten and
	the Repo class was added. Basically, these two classes together
	allow a yum .repo file to be represented as a python object that can
	then be manipulated by other python code. The idea is based loosely
	around the ConfigParser object in the standard python library,
	though no code is actually imported.

	Some attempt was made to consolidate repo code into fewer locations
	to reduce confusion when trying to use these objects; however, such
	a thing is quite difficult due to the variety of places these
	objects are used. A future commit will include docstrings and/or
	comments in each file wtih directions to the other relevant
	locations to find repo-related code in order to assist other
	developers.

	I'm not entirely happy with how the whole Repo object works right
	now; there is a consistent strategy as far as the data storage is
	concerned (.repo file fields in the internal dictionary, program-
	related fields as attributes), but the implementation is a little
	kludgy. Furthermore, we (still) don't fully support all the
	features in the yum file, particularly multiple baseurls and
	mirrorlists. Both these features will be added in the future;
	however, they are out of the scope of the current project.

	A subsequent commit (in the next hour) will add support in the
	config file for specifying a yum .repo file in place of listing them
	inside the config object (how cool is that!).

	Details: dimsbuild/lib/dimsbuild/event/__init__.py
	 * added constant declarations for event properties; it makes more
	sense for them to be here because events are more likely to 'know
	about' these than they are to know about the ones in dispatch.py.
	Some are new definitions, others are merely the same as the ones
	from dispatch
	 * when attempting to modify event status in a way explicitly
	disallowed by event properties, raises an EventProtectionError
	 * Event.copy() no longer has the link argument; use Event.link()
	instead
	 * added Event.link(), which does the same as Event.copy(link=True)
	used to do
	 * callback (status bar printout) enabled by default on Event.copy()
	 * callback (status bar printout) disabled by default on Event.link()
	 * Event.cache(), Event.copy(), and Event.link() now pass kwargs onto
	sync; therefore, they now accept any parameter that sync accepts
	dimsbuild/lib/dimsbuild/event/fileio.py
	 * Event.io.sync_input() no longer has the copy argument; instead, it
	has the cache argument, which explicitly instructs dimsbuild to
	cache the results (essentially, the behavior is the opposite of
	before)
	 * Event.io.sync_input() now passes kwargs to underlying Event copying
	methods, allowing control over the callback object, for example
	dimsbuild/lib/dimsbuild/callback.py
	 * restructured callback classes slightly; added SyncCallback for use
	with Event.copy()
	 * CachedSyncCallback is now intended to be used only with
	Event.cache() dimsbuild/lib/dimsbuild/modules/*
	 * modified to reflect changes to event property names (see above)
	 * modified to reflect changes to Event.copy() and
	Event.io.sync_input() signatures (see above)
	 * modified to reflect changes to repo objects and repo containers (see
	below) dimsbuild/lib/dimsbuild/modules/shared/__init__.py
	 * complete rewrite of RepoEventMixin utilizing new RepoContainer and
	Repo classes
	 * functionality is largely the same, but in an optimized way
	dimsbuild/lib/dimsbuild/modules/core/software/pkglist.py
	 * pkglist yum repo file creation now handled by Repo's __str__()
	method dimsbuild/lib/dimsbuild/modules/core/software/download.py
	 * added a processed list for construction the syncinfo dictionary;
	this prevents rpms with the same NVR from being downloaded
	multiple times from different repositories
	dimsbuild/lib/dimsbuild/main.py
	 * added Event.link_handler, which points to None (meaning that
	Event.link() will not display status bars by default)
	dimsbuild/lib/dimsbuild/repo.py
	 * complete rewrite for streamlining, clarification, and simplification
	 * RepoContainer is now a subclass of dict. However, it also steals a
	great deal of code from ConfigParser objects; that is, it is
	capable of reading ConfigParser-style config objects and
	represents its internal data in the same format
	 * RepoContainer.__str__() now creates a string representation of
	itself and its child Repos in a manner suitable for reading by
	yum or other ConfigParser clients
	 * RepoContainers can be populated in 3 ways: 1) Adding repos
	separately via the add_repo(id, **kwargs) method 2) Reading
	dimsbuild-style config objects via the read_config(tree) method
	3) Reading a yum .repo file via the read(filename) method All 3
	of these methods can be used to populate a single repo; if a repo is
	defined with the same id more than once, the most recent definition
	takes precedence
	 * added a Repo class, also based on dict
	 * Repo.__str__() represents a Repo object in a manner readable by
	ConfigParser objects
	 * Repo.read_config() reads an appropriate section of an xml tree to
	populate its fields
	 * Repo maintains two parallel ways to store data - its dictionary
	fields are reserved for fields that also appear in the repo
	object it represents; 'baseurl', 'gpgkey', etc; its attributes
	are reserved for use internally by other python objects;
	'localurl', 'remoteurl', etc. Several of these are linked to one
	another; for example, Repo.remoteurl and Repo['baseurl'] are
	related via a property on the Repo class itself.
	[cca5311da1b9]

2007-10-18  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] * modules/shared/rpms.py:
	- keeping the build folder around

	* modules/core/rpms/{config-rpm,logos-rpm,release-rpm}.py:
	- adding the build folder as an output file

	* modules/extensions/rpms/theme-rpm.py:
	- likewise
	[8d75c89785c5]

	* lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/extensions/sources.py:
	[svn] * fileio.py:
	- removed the hackery in IOObject.sync_input() that was deleting the
	files that were output files the last time, but aren't needed
	anymore. The approach was causing more problems than solving.

	* sources.py:
	- remove SRPMs, that are no longer needed, before running createrepo

	* createrepo.py:
	- remove RPMs, that are no longer needed, before running createrepo
	[9e5028e406a7]

2007-10-18  kwilliams  <kwilliams>

	* docsrc/publish.rng, lib/dimsbuild/modules/core/publish.py,
	share/dimsbuild/schemas/distro.conf/publish.rng:
	[svn] Summary: Added 'use-hostname' option to the remote-webroot
	element for publish. This attribute determines whether the machine
	hostname or ip address is used when calculating the web_path. The
	default is 'false'.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/publish.rng
	* added optional 'use-hostname' attribute

	dimsbuild/trunk/lib/dimsbuild/modules/core/publish.py
	* changed _getIPAddress() to _get_host. The new function determines
	whether to use hostname or ipaddress and returns the correct value.

	dimsbuild/trunk/docsrc/publish.rng
	* added documentation for new attribute
	* removed documentation for obsolete repofile element
	[550dbc2829bb]

2007-10-17  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/extensions/iso.py:
	[svn] Summary: The iso event was not running when files in the os-
	content folder changed. The fix involved these changes: 1) the os-
	content event provide a cvar with the name of the manifest file, 2)
	the iso event adds the manifest file as input handler data (in
	addition to the package order file. As a result, when the manifest
	changes, the iso event runs, removes all existing iso sets, and
	regenerates them. Alternatively, the iso event could have used the
	osdir as input; the implemented approach is an optimization which
	allows differences to be calculated only for a single file.

	dimsbuild/trunk/lib/dimsbuild/modules/extensions/iso.py
	* listed manifest-file in the event 'requires' statement
	* appended manifest-file to the difftest DATA dictionary

	dimsbuild/trunk/lib/dimsbuild/modules/core/os_event.py
	* listed manifest-file in the event provides statement
	* set the manifest-file cvar
	[5b4e7acaeb3a]

	* lib/dimsbuild/splittree.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/splittree.py
	* Modified regular expression for excluding files from the first disc.
	The prior expression was excluding all paths at the first level that
	contained a '.'. This correctly excluded '.discinfo', but
	incorrectly excluded paths like 'ks.cfg'. '.manifest', '.treeinfo'.
	The new regular expression excludes files that end with '.discinfo',
	in addition to existing exclusions (i.e. paths that end with .rpm or
	SRPM, or the product name).
	[957668c99bb4]

	* lib/dimsbuild/modules/core/installer/isolinux.py:
	[svn]
	dimsbuild/trunk/lib/dimsbuild/modules/core/installer/isolinux.py
	* if config has changed, delete isolinux.cfg. This avoids writing the
	same boot-args to isolinux.cfg multiple times.
	[9ceb1d15a187]

	* bin/dimsbuild, lib/dimsbuild/main.py:
	[svn] Summary: Modified places in the code where import_dirs and
	Event.SHARE_DIRS variables were being extended. With the changes,
	we first extend the command line option variables (options.libpath
	and options.sharepath) and then set import_dirs and Event_SHARE_DIRS
	equal to their command line counterparts.

	Files modified: dimsbuld/trunk/lib/dimsbuld/main.py,
	dimsbuild/trunk/bin/dimsbuild
	[5052175029f0]

2007-10-17  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/validate.py, share/dimsbuild/schemas/dimsbuild.rng:
	[svn] dimbuild/share/dimsbuild/schemas/dimsbuild.rng
	 * updated schema; was way out of date
	 * removed 'plugins' element
	 * changed 'sharepath' element to 'sharepaths' element, which can
	contain one or more 'path' elements
	 * added 'cache' element, which can contain 'path' and 'max-size'
	elements dimbuild/lib/dimsbuild/validate.py
	 * updated to work with multi-path share paths
	dimbuild/lib/dimsbuild/modules/core/rpms/release-rpm.py
	 * updated to work with multi-path share paths
	 * corrected installinfo expansion to look for 3 items in tuple instead
	of 2 dimbuild/lib/dimsbuild/modules/core/rpms/logos-rpm.py
	 * updated to work with multi-path share paths
	dimbuild/lib/dimsbuild/main.py
	 * renamed Event.SHARE_DIR to Event.SHARE_DIRS; this variable is now a
	list of share paths instead of a single share path
	 * corrected xpath query for main config validation; main config files
	(/etc/dimsbuild.conf by default) are now being validated for real
	dimbuild/bin/dimsbuild
	 * changed --lib-path and --share-path to be append operations,
	allowing the user to specify more than one of each
	[8cddbe1831fd]

2007-10-16  uprakash  <uprakash>

	* lib/dimsbuild/event/__init__.py:
	[svn] * event/__init__.py:
	- in Python 2.5, the exception class hierarchy has been rearranged.
	The new BaseException class is the base class for Exception. The
	SystemExit and KeyboardInterrupt exceptions extend BaseException,
	but don't extend Exception. Due to this, in python 2.5 running
	dimsbuild was not creating the .debug folder in the case of a
	KeyboardInterrupt. Fixed.
	[bd0dfc300a9a]

	* lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] * rpms.py:
	- added support to specify the default mode in the install info

	* config-rpm.py:
	- setting the default mode for the configuration script to be 755
	[bb0b7a4d1086]

	* lib/dimsbuild/event/fileio.py:
	[svn] * dims-common/difftest.py:
	- the InputHandler and OutputHandler classes also save the mode of the
	files and return True if the mode of a file has changed.

	* dimsbuild/fileio.py:
	- now that an event's run() function gets called if one of its input
	file's mode has changed, the mode of all the files are updated
	correctly.
	- cleaned up the code a bit; divided IOObject.sync_info into two
	attributes: IOObject.sync_items and IOObject.chmod_items.
	IOObject.sync_items stores a mapping of source to destination
	files and IOObject.chmod_items stores a mapping of destination
	file to its desired mode.
	[eb558dc1d836]

	* lib/dimsbuild/modules/core/software/comps.py:
	[svn] * comps.py:
	- added the fallback attribute to an xpath() call
	[aefeb0b65dea]

	* lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/extensions/sources.py:
	[svn] * fileio.py:
	- fixed the issue with the mode attribute on path elements pointing to
	directories. Previously, the directories' mode wasn't being set to
	the mode attribute's value. This has been fixed. An
	open/unresolved issue is that if the mode of a path is changed,
	that path's mode doesn't get modified. I will look into ways to
	fix this and make it my next commit.
	- IOMixin.sync_input() deletes old output files that aren't listed as
	output files anymore. This was the reason why the result of the
	createrepo event (the repodata/ folder) had metadata for missing
	RPMs in it, because the RPM was still around at the point in time
	when createrepo was run.

	* sources.py, localrepo.py, createrepo.py:
	- createrepo always run in --update mode.
	[85062335db73]

2007-10-16  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/software/comps.py:
	[svn] dimsbuild/lib/dimsbuild/modules/core/software/comps.py
	 * added support for <grouplist> elements inside <group> elements
	(though since 2.6 yum has removed support; this may get removed)
	 * Renamed CompsPackage to PackageReq
	 * added GroupReq, representing a group requirement inside <grouplist>
	elements
	 * renamed CompsEvent._process_pkg_xml() to CompsEvent._dict_from_xml()
	 * added support for 'core=<boolean>' attributes on group elements in
	the comps section of the config file
	 * added support for specifying the destination group id in CompsEvent.
	_update_group_content(); if not specified, defaults to the groupid
	passed
	 * added localization support back; if LOCALIZED is enabled, the comps
	files generated will include localized versions of 'name' and
	'description' elements
	 * renamed CompsPackageSet to CompsReqSet because it is now used by
	both package and group lists for a group
	 * CompsGroup.__init__() now accepts a group list as well as a package
	list
	[39a455543aba]

2007-10-16  kwilliams  <kwilliams>

	* share/doc/examples/example-centos-base-5/distro.conf,
	share/doc/examples/example-fedora-base-6/distro.conf,
	share/doc/examples/example-fedora-base-7/distro.conf,
	share/doc/examples/example-redhat-base-5/distro.conf:
	[svn] Summary: Modified the version scheme of example distros from
	version-distro to distro-version, e.g. 7f -> f7, as the latter is
	more familiar/natural.
	[e337d579e3f1]

2007-10-15  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py, lib/dimsbuild/repo.py:
	[svn] * dims/:
	- whitespace cleanup

	* sources.py, createrepo.py:
	- if no RPMs have been removed and the event is run (which can happen
	only if RPMs are added, run createrepo in update-mode.
	- if RPMs have been removed, run createrepo from scratch.

	* localrepo.py:
	- always run createrepo from scratch, because if the localrepo event
	runs, then we know for sure that RPMs have been removed.
	[1a7ac70f470d]

	* lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/extensions/files.py:
	[svn] * dims/:
	- whitespace cleanup

	* files.py:
	- do nothing in FilesEvent.error() if there is no metadata file

	* comps.py:
	- added a fallback parameter to the xpath() function call
	[bb538fdee5e1]

2007-10-15  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng:
	[svn] Summary: 1) Fixed up 'dest' handling for rpms, which was
	previously downloading input files to the correct folder on the
	build machine, but writing the wrong install location to the spec
	file. 2) Added mode attribute to the 'script' element of config-rpm.
	3) Modified config-rpm 'script' behavior slightly so that instead of
	copying the 'script' into the post-install section of the RPM, the
	post-install section executes the 'script' from its location on
	disk.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/config-rpm.rng
	* 'script' element - added 'mode' attribute

	dimsbuild/trunk/lib/dimsbuild/modules/shared/rpms.py
	* 'InputFilesMixin._setup_download()' - calculates the default
	destination for installinfo items using the 'dest' attribute of the
	items parent element.
	* 'InputFilesMixin._setup_download()' - uses the xpath location
	specified in installinfo, without appending a 'path' element.
	* 'InputFilesMixin._get_files()' - populates key:values in the sources
	dictionary (used in writing the spec file) using folders:files found
	in the sources dictionary.

	dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/release-rpm.py
	* 'installinfo' dictionary - modified xpath constants to include
	'path' for elements which have 'path' children (all of them,
	actually, for release-rpm).

	dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/config-rpm.py
	* 'installinfo' dictionary - modified xpath constants to include
	'path' for the elements which have 'path' children (supporting-
	files).
	* '_getpscript() - writes a new file containing a path to the
	post_install_script. This file is later copied into the post install
	section of the spec file.
	[29c765ef437f]

2007-10-15  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/rpms/logos-rpm.py:
	[svn] * logos-rpm.py:
	- removed debug statement
	[13308f8ff1fc]

2007-10-15  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/modules/core/rpms/config-
	rpm.py, lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py:
	[svn] dimsbuild/lib/dimsbuild/modules/extensions/rpms/theme-rpm.py
	 * using setdefault
	 * tuple retruned for 'custom-rpms-info' now includes 'default'
	dimsbuild/lib/dimsbuild/modules/core/rpms/release-rpm.py
	 * using setdefault
	 * tuple retruned for 'custom-rpms-info' now includes 'default'
	dimsbuild/lib/dimsbuild/modules/core/rpms/logos-rpm.py
	 * using setdefault
	 * tuple retruned for 'custom-rpms-info' now includes 'default'
	dimsbuild/lib/dimsbuild/modules/core/rpms/localrepo.py
	 * using setdefault dimsbuild/lib/dimsbuild/modules/core/rpms/config-
	rpm.py
	 * using setdefault
	 * tuple retruned for 'custom-rpms-info' now includes 'default'
	dimsbuild/lib/dimsbuild/modules/core/software/comps.py
	 * total rewrite
	 * comps file is now created from scratch rather than being based on
	the original
	 * multiple group files defining the same group are combined together
	in the result by default. If you wish to include a subset of the
	groups, list the groups explicitly with the repoid attribute on
	the group element in the config file
	 * results are alphabetized (yay)
	 * localization removed for now to make the files smaller and more
	readible. A subsequent commit will allow localization to be
	included by setting a flag in the source
	[5c9ed85003da]

2007-10-15  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/sourcevars.py:
	[svn] * dims:
	- whitespace cleanup

	* logos-rpm.py:
	- late setting of LogosRpmEvent.fileslocals attribute; previously was
	setting the attribute in LogosRpmEvent.__init__(). This is bad
	because the control variable holding the value of the anaconda
	version is not set at this point, which causes the fileslocals
	attribute to hold incorrect values.
	[89ba926a22f5]

2007-10-15  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] Summary: Changed name of 'install-dest' attribute for rpm
	path-type elements to 'dest'. The motivation for this change is
	consistency across rpm and non-rpm path-type elements.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/config-rpm.rng
	* 'script' element - changed 'install-dest' to 'dest'
	* 'script' element - changed content type from 'element-path-with-
	install-dest' to 'text'. This breaks handling in rpm.py/config-
	rpm.py for script files for the moment; to be addressed in a
	subsequent commit.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/release-rpm.rng
	* 'omf' element - changed 'install-dest' to 'dest'
	* 'html' element - changed 'install-dest' to 'dest'
	* 'doc' element - changed 'install-dest' to 'dest'

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/rpms.rng
	* 'element-path-with-install-dest' - removed, 'element-path-with-dest'
	defined in lib.rng is now sufficient

	dimsbuild/trunk/lib/dimsbuild/modules/shared/rpms.py
	* 'InputFilesMixin._setup_download()' - changed 'install-dest' to
	'dest'
	* 'InputFilesMixin._get_files()' - changed 'install-dest' to 'dest
	[e8148c86a3d1]

2007-10-13  kwilliams  <kwilliams>

	* docsrc/lib.rng, docsrc/repos.rng, lib/dimsbuild/repo.py,
	share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] Summary: Removed unused 'username' and 'password' repo
	elements. Note - Added a separate action item on the todo list
	regarding investigating support for 'username:password@' url syntax
	in path elements.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/lib.rng
	* removed username and path elements

	dimsbuild/trunk/lib/dimsbuild/repo.py
	* repo class - removed username and password attributes

	dimsbuild/trunk/docsrc/lib.rng
	* removed documentation for username and path elements

	dimsbuld/trunk/docsrc/repos.rng
	* removed passing reference to username/password elements.
	[224f2264809d]

	* lib/dimsbuild/modules/core/rpms/release-rpm.py,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng:
	[svn] Summary: This commit includes two yum-repo changes for the
	release-rpm event: 1) the addition of user control over creation of
	the <product>.repo file and 2) the removal of the 'extra.repo'
	feature, a feature that auto-generated a single yum repo file
	containing sections for all of the input repositories. Three
	factors lead to the decision to remove the extra.repo feature.
	First, it needed fixes, e.g. to handle multiple gpgkeys. Second,
	even with these fixes, the feature was somewhat limited in that the
	set of repo attributes supported by dimsbuild is a subset of those
	allowed in a yum repo file. Third, there is a straightforward user
	alternative, create yum.conf files outside of dimsbuild and include
	them via the path mechanism. Together, these lead to the decision
	to remove the feature, at least for the first release.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/release-rpm.rng
	* 'yum-repos' element - removed 'include-input' attribute
	* 'yum-repos' element - added 'create-base' attribute

	dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/release-rpm.py
	* removed dims.repocreator import
	* removed logic to create extra.repo
	* added a test for the value of the create-base attribute prior to
	creating the base repofile
	[9f622d44477c]

2007-10-12  kwilliams  <kwilliams>

	* share/doc/examples/example-centos-base-5/distro.conf,
	share/doc/examples/example-fedora-base-6/distro.conf,
	share/doc/examples/example-fedora-base-7/distro.conf,
	share/doc/examples/example-redhat-base-5/distro.conf:
	[svn] Summary: Modified example distro.conf files to use consistent
	product, fullname and version text. Removed references to base
	distribution name in product and fullname for compliance with
	copyright policies. The new scheme distinguishes example
	distributions by appending the first letter of the of the base
	distribution to the version.

	New scheme: <fullname>Example</fullname> <product>example</product>
	<version>[ 5r | 5c | 6f | 7f]</version>
	[b231f8e27bcd]

	* lib/dimsbuild/locals.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/locals.py
	* added back install class for anaconda 11.1.0.7-1, this is needed for
	fedora 6-based distros
	[a87c1c4f2c22]

	* share/doc/examples/example-redhat-base-5/distro.conf:
	[svn] dimsbuild/trunk/share/doc/examples/example-redhat-
	base-5/distro.conf
	* changed fullname from 'Example 5' to 'Example Red Hat'
	[926668200378]

	* lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py, lib/dimsbuild/modules/core/rpms
	/config-rpm.py, lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] Summary: Yum repos were not being added to the release-rpm due
	to issues with variable naming and the level at which the repos were
	added. This commit gets yum repos working. Basically, with this
	fix we go back to the simple, sufficient, and also modular method of
	creating yum repos directly in the release-rpm module. It works,
	time to move on...

	dimsbuild/trunk/lib/dimsbuild/modules/shared/rpms.py
	* removed references to unused self.cvars['%s-content' % self.id]

	dimsbuild/trunk/lib/dimsbuild/modules/core/repos.py
	* removed repo file creation for "extras" repo

	dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/release-rpm.py
	* added repo file creation for distro and 'extras' repo files; the
	distro repo file is not created if the conditionally required 'web-
	root' cvar does not exist (i.e. publish module disabled).

	dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/config-rpm.py
	* removed references to unused self.cvars['%s-content' % self.id]

	dimsbuild/trunk/lib/dimsbuild/modules/core/publish.py
	* removed repo file creation for distro repo
	* added web-path cvar, currently used by release-rpm event, and future
	expected use by diskboot and bootiso events.
	[d68e43a456b4]

2007-10-11  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] * dims/:
	- miscellaneous whitespace cleanup

	* schemas/distro.conf/lib.rng:
	- added definition of the mode value
	- added (optional) mode attribute in element-path and element-path-
	with-dest

	* schemas/distro.conf/rpms.rng:
	- added (optional) mode attribute in element-path-install-dest

	* fileio.py:
	- added defmode parameter to sync_input to set the default mode for
	all the files that are to be sync'd.
	- added support for the optional mode attribute that the <path/>
	elements can have.

	* rpms.py:
	- passing the defmode parameter to IOMixin.sync_input() calls, if
	needed.
	[27100560b7e4]

2007-10-11  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py:
	[svn] dimsbuild/lib/dimsbuild/callback.py
	 * removed custom definitions for _cp_update and _cp_end in
	CachedSyncCallback; they are not necessary
	 * CachedSyncCallback._cache_end() now calls bar.update() and
	bar.finish()
	 * BuildDepsolveCallback.restartLoop() now calls bar.update() and
	bar.finish() - this should address the case Uday and Kay were
	seeing with depsolve permanently blocking on the last package
	[eb830c50ed31]

	* lib/dimsbuild/callback.py:
	[svn] dimsbuild/lib/dimsbuild/callback.py
	 * progressbar.py layout and API updates
	[329adbe2eec6]

2007-10-11  kwilliams  <kwilliams>

	* lib/dimsbuild/event/fileio.py:
	[svn] fileio.py
	* sync_input() now removes existing destination files prior to
	syncing. This ensures newer files are replaced with older ones as
	appropriate (e.g. when switching from custom logos back to the base
	distribution's logos)
	[e8ed88a8298b]

2007-10-10  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/repos.py, lib/dimsbuild/modules/core/rpms
	/logos-rpm.py, lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/core/repos.py:
	- the repos event sets up another control variable which is a list of
	tuples containing the name and version of logos rpms found in all
	the repositories.

	* dimsbuild/trunk/lib/dimsbuild/modules/core/rpms/logos-rpm.py:
	- the logos-rpm event uses the control variable set by the repos event
	to set up its provides and obsoletes.

	* dimsbuild/trunk/lib/dimsbuild/modules/shared/rpms.py:
	- had to change RpmBuildMixin._setup_build() to allow the late supply
	of an RPM's obsoletes, provides, and requires.

	* dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py:
	- fixed a bug in the pkglist event. When a required package was no
	longer required, the cache was modified to remove all the data of
	packages that required the previously-required package. However,
	depsolve was not running on packages that required previously-
	required packages and were required by other packages. This
	resulted in these packages being missing from the pkglist.
	[daaded2b5c61]

	* lib/dimsbuild/main.py, lib/dimsbuild/validate.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/validate.py:
	- don't need to specify the element name of the tree that is being
	validate. This is computed from the result of the xpath query.

	* dimsbuild/trunk/lib/dimsbuild/main.py:
	- don't specify the element name when calling ValidateMixin.validate()
	[6b185cad803a]

	* lib/dimsbuild/event/diff.py, lib/dimsbuild/main.py,
	lib/dimsbuild/validate.py, share/dimsbuild/schemas/distro.conf
	/diskboot-image.rng,
	share/dimsbuild/schemas/distro.conf/diskboot.rng,
	share/dimsbuild/schemas/distro.conf/initrd-image.rng,
	share/dimsbuild/schemas/distro.conf/initrd.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/product-image.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/updates-image.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng:
	[svn] * dimsbuild/trunk/share/dimsbuild/schemas/distro.conf:
	- renamed schema files as required

	* dimsbuild/trunk/lib/dimsbuild/validate.py:
	- modified the validation process to reflect the changes to an Event's
	config attribute. Previously, <EventClass>.config was a pointer to
	the entire config tree. Now, <EventClass>.config is a pointer to
	the section in the config file pertaining to the event. Due to all
	these changes, I don't need to add the <any-element/> definitions
	around the element's definition in the schema file. All that I
	need to do now is to remove the <distro/> element (and maybe the
	<optional/> element, if it exists) from around the element's
	definition.
	[d9704e636edf]

	* lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/*/rpms:
	- forcing the RPMS events' run() function to get called if there is no
	.dat file or the release number is 0.
	[edbf4ba4c658]

	* lib/dimsbuild/callback.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/callback.py:
	- removed DepsolveCallback, because the pkglist event uses the
	BuildDepsolveCallback, as before.
	[a897ac66104f]

2007-10-10  kwilliams  <kwilliams>

	* lib/dimsbuild/locals.py:
	[svn] locals.py
	* Commenting out entry for updates.img to use cpio format as this is
	not supported across all anaconda install methods, i.e. urlinstall.
	With this change, dimsbuild will always produce updates.img in ext2
	format.
	[81271a2f37d8]

2007-10-09  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/software/pkglist.py:
	[svn] *
	dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py:
	- removed the unrequired conditional requirement on custom-rpms. I had
	added this in to test out the relationship between custom-rpms and
	pkglist.
	[75f21238e2e0]

	* lib/dimsbuild/locals.py, lib/dimsbuild/magic.py,
	lib/dimsbuild/modules/core/installer/logos.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/locals.py:
	- for anaconda version >= 11.3.0.36-1, the splash image in the
	isolinux/ folder is a .png file but is still called splash.jpg.
	Added locals entries to the logos-rpm's locals dictionary and the
	installer-logos' locals dictionary to create a .png file and to
	verify the .png file, respectively.

	* dimsbuild/trunk/lib/dimsbuild/magic.py:
	- added magic data for .png files
	[b9c6175c0292]

	* lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py:
	[svn] * dims-common/trunk/lib/dims/depsolver.py:
	- the DepSolver class keeps track of the package --> deps mapping

	* dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py:
	- added an IDepSolver class that extends depsolver.DepSolver; this
	class adds the concept of a cached file to save the previous
	depsolve run's results and uses it when appropriate.
	[a16f318f13b9]

2007-10-09  kwilliams  <kwilliams>

	* lib/dimsbuild/locals.py, lib/dimsbuild/modules/core/installer
	/product-image.py:
	[svn] Summary: Modified custom install class to skip 'partition'
	step, in keeping with default Fedora, RedHat and Centos installs.
	This causes the installer to suppress the partitioning confirmation
	screen by default. Users can still get to this screen by selecting
	"Review and modify partitioning" in the preceding step ('parttype').

	locals.py
	* removed install class definitions for unsupported anaconda versions
	* set install class definition for earliest supported anaconda version
	(11.1.2.36-1) as the '0' item.
	* modified remaining install classes to include a setSteps function
	which calls dispatch.skipStep("partition")

	modules/core/installer/product-image.py
	* set version = 1
	[33961882f184]

2007-10-09  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/splittree.py:
	[svn] dimsbuild/lib/dimsbuild/splittree.py
	 * fixed a bug causing tree splitting to fail silently
	dimsbuild/lib/dimsbuild/modules/core/software/download.py
	 * download's error() method now no longer fails before the metadata
	file has been created
	dimsbuild/lib/dimsbuild/modules/core/installer/xen-images.py
	 * removed old XEN_OUTPUT_FILES variable
	dimsbuild/lib/dimsbuild/modules/core/installer/infofiles.py
	 * put the buildstamp file inside the buildstamp output directory
	instead of in the builddata folder
	[30a655aee1c9]

2007-10-08  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] * dims/:
	- miscellaneous whitespace cleanup

	* dims-common/trunk/lib/dims/depsolve.py:
	- DepSolver.resolveDeps() now returns a list of pkgtups

	* dimsbuild/trunk/lib/dimsbuild/modules/core/software/pkglist.py:
	- first attempt to get incremental dependency solving working
	- the custom rpms are depsolved first and added to the package sack.
	Then all the other required rpms are added to the package sack
	after depsolving. The result of depsolving each individual rpm,
	i.e. the mapping of the rpm and all the rpms the adds to the
	package sack is saved in a file. The next time pkglist is run, if
	a required rpm has been removed, all rpms that require it, have
	their cached data cleared out. This results in all the packages,
	that require the previously-required rpm, being depsolved again.

	* dimsbuild/trunk/lib/event/fileio.py:
	- passing the fallback parameter to the ConfigElement.xpath()

	* dimsbuild/trunk/lib/callback.py:
	- added a DepsolveCallback class that is used during the depsolving
	stage of pkglist.
	[3057b8e4f9a3]

2007-10-05  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/modules/core/rpms
	/config-rpm.py:
	[svn] dimsbuild/lib/dimsbuild/event/__init__.py
	 * modified DummyConfig object - used to always pretend it was empty,
	but now only pretends it is empty for relative queries (those that
	do not start with '/'). This allows events that don't have a
	config section (present or at all) to still query the config file
	in sections outside their own
	dimsbuild/lib/dimsbuild/modules/core/rpms/config-rpm.py
	 * modified two config calls that incorrectly had the '/' prefix
	[5a8961e3b801]

2007-10-05  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/modules/shared/__init__.py
	* another bug fix related to repo packages creation, now initializing
	'newid' to False.

	dimsbuild/trunk/lib/dimsbuild/modules/shared/rpms.py
	* fixed a bug related to including required pacakges in distro-
	specific rpms by initializing a variable to '' rather than to None
	[4dd1239263a0]

2007-10-05  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/splittree.py:
	[svn] dimsbuild/lib/dimsbuild/event/__init__.py
	 * modified Event.cache() so that it calls Event.copy() to do actual
	copying instead of duplicating code
	 * modified Event.copy() so that it makes use of the copy_handler
	argument instead of the link module's sync function
	dimsbuild/lib/dimsbuild/splittree.py
	 * modified Timber.link to allow linking across devices
	 * changed a few cp(link=True) calls to Timber.link to allow cross-
	device linking dimsbuild/lib/dimsbuild/callback.py
	 * added _link_xdev() method to BuildSyncCallback, allowing logging of
	link attempts that fail due to cross device errors (note - this
	doesn't currently work due to the fact that Event.copy doesn't
	set a callback object)
	dimsbuild/lib/dimsbuild/modules/core/installer/bootiso.py
	 * changed a <Path>.cp(link=True) call to Event.copy(link=True) to get
	get default cross-device handling
	dimsbuild/lib/dimsbuild/modules/core/installer/logos.py
	 * changed a <Path>.cp(link=True) call to Event.copy(link=True) to get
	get default cross-device handling dimsbuild/lib/dimsbuild/main.py
	 * Event.link_handler now sets allow_xdev=True, making cross-device
	linking work
	[1e3e2a3d428d]

2007-10-05  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/shared/__init__.py:
	[svn] Summary: fix to previous commit to handle the case when a
	NewEntry object is returned in diffdict
	[e45ad7d7d22d]

	* lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/__init__.py:
	[svn] Summary: Fixed a bug where the repo package file was not being
	regenerated when the user changed the id attribute for a repository.
	The fix involves creating a variable that contains the list of
	repoids and tracking changes to this variable via diff.

	repos.py, sources.py
	* added variables item to self.DATA so that the variables handler is
	created.

	dimsbuild/modules/shared/__init__.py
	* the 'read_config' function of 'RepoEventMixin' populates the
	'repoids' variable
	* the 'read_config' function of 'RepoEventMixin' adds 'repoids' as
	variable handler data
	* the 'read_new_packages' function of 'RepoEventMixin' determines if
	the repoid for the repo being processed is new; if so, it creates a
	packagelist. This test is in addition to an existing test to
	determine if the primary xml file changed.
	[87dcd3b709ac]

2007-10-05  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/locals.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/validate.py:
	[svn] Summary: Changed config behavior slightly. Event.config now
	returns the config object with the 'focus' element being the top-
	level element for that event instead of at the root of the config
	tree. This allows events to make xpath queries shorter by not
	requiring them to use '/distro/<id>' prior to every query.

	NOTE - validation is temporarily broken by this change. You must
	run dimsbuild with --no-validate for it to work until we resolve
	this issue.

	The above changes allow validation to be computed automatically for
	each event. Thus, the validate method now is no longer for schema-
	based config validation, but instead for any other validation the
	event wishes to perform.

	Renamed most meta events from all caps to no caps. At this point
	I'm planning on reserving all caps for pseudo-modules like ALL.

	release-rpm event no longer creates repo files. Instead, it looks
	for and uses the output of repos.py (extra.repo) and publish.py
	(<prod>.repo)

	Details: dimsbuild/lib/dimsbuild/validate.py
	 * changed name of ValidateMixin to BaseConfigValidator, because that's
	really what it is
	 * instead of passing a config file to be read, BaseConfigValidator now
	expects an already-read config object - this helps to avoid
	reading the same file twice
	dimsbuild/lib/dimsbuild/event/__init__.py
	 * changed Event.config from a pointer to a property - calls
	Event._get_config, which returns a section of the config file
	based on the python module of the event calling it
	 * added DummyConfig, an object that emulates a config object, but
	never matches any queries. This the Event.config property to
	return a config object for events that do not have top-level
	config elements
	 * the actual config object is now contained at Event._config; in order
	to access the config's source file, use Event._config.file
	 * removed event config validators; config validation is now handled in
	main.py dimsbuild/lib/dimsbuild/locals.py
	 * changed '%s'-style string replacement in install classes to
	%(<key>)s-style, allowing replacement to be more precise
	dimsbuild/lib/dimsbuild/modules/*
	 * adjusted config get, xpath, and pathexists expressions to reflect
	config changes. Changes took the form of '/distro/<id>/<extra>'
	-> '<extra>' dimsbuild/lib/dimsbuild/modules/extensions/iso.py
	 * moved config and variables into self.DATA during __init__, instead
	of adding them in the setup method
	dimsbuild/lib/dimsbuild/modules/shared/rpms.py
	 * I think _test_build is no longer necessary (or should always return
	True) because modules are no longer loaded if they are disabled
	dimsbuild/lib/dimsbuild/modules/core/repos.py
	 * now uses repocreator to create an 'extra.repo' file that can be
	included by the release rpm to include source repositories in yum
	updates dimsbuild/lib/dimsbuild/modules/core/rpms/release-rpm.py
	 * now gets repo files from publish.py and repos.py instead of
	generating them itself
	dimsbuild/lib/dimsbuild/modules/core/rpms/__init__.py
	 * renamed 'RPMS' event to 'rpms'
	dimsbuild/lib/dimsbuild/modules/core/init.py
	 * renamed 'SETUP' event to 'setup'
	 * removed old conditionally-comes-after 'validate'
	dimsbuild/lib/dimsbuild/modules/core/software/__init__.py
	 * renamed 'SOFTWARE' event to 'software'
	dimsbuild/lib/dimsbuild/modules/core/publish.py
	 * now generates a '<prod>.repo' file which can be used to get updates
	via yum from the build machine's publish folder
	 * renamed 'INSTALLER' event to 'installer'
	dimsbuild/lib/dimsbuild/main.py
	 * added config validation objects; instead of being handled in the
	events, config handling is done by main. This will change
	somewhat when Uday gets his hands on it; for one, validation
	should be done per module, not per event
	[94355a4ac803]

2007-10-05  kwilliams  <kwilliams>

	* lib/dimsbuild/constants.py,
	share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] Summary: Boolean type config elements now support variations
	of on/off in addition to true/false, yes/no and 1/0.

	share/dimsbuild/schemas/distro.conf/lib.rng
	* Added '[Oo]n' to the value-boolean-true data type
	* Added '[Oo]ff' to the value-boolean-false data type

	lib/dimsbuild/constants.py
	* Added 'On' and 'on' to the BOOLEANS_TRUE list
	* Added 'Off' and 'off' to the BOOLEANS_FALSE list
	[6a87753a665c]

2007-10-04  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py:
	[svn] Summary: Fixing calls to Event.error to provide event instance
	(self) as first argument) in these events: initrd-image.py, xen-
	images.py, diskboot-image.py, product-image.py, updates-image.py.
	[e21e05f7419b]

	* lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/extensions/files.py:
	[svn] files.py, download.py
	* Error functions now move self.mdfile to a .debug folder rather than
	removing it.
	[df52433091a1]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/fileio.py:
	[svn] Summary: To make debugging easier, the Event IOMixin error
	function now moves cached files to a '.debug' folder rather than
	deleting them. The Event base class execute function removes debug
	folders on subsequent runs.

	event/__init__.py
	* Tests if self.mddir/.debug exists,
	* If so, writes a log message (level 5) and remove the folder

	event/fileio.py
	* no longer calls clean_eventcache function
	* instead gets a list of items in self.mddir, creates
	self.mddir/.debug, and moves items into it
	[74578a582445]

2007-10-04  uprakash  <uprakash>

	* lib/dimsbuild/event/fileio.py:
	[svn] * dimsbuild/event/fileio.py:
	- IOMixin.clean_eventcache() doesn't do anything if the all
	parameter's value is False and there is no metadata file
	associated with the event.
	[20b9ac1c8837]

2007-10-03  kwilliams  <kwilliams>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py:
	[svn] Summary: Added error function in the Event IOMixin which
	cleans the event's cache folder. Removed similar error functions
	from many events. Added error functions to events that only download
	files; these event need only remove the metadata file since sync
	handles recovers nicely from partially downloaded files.

	event/__init__.py
	* added comment regarding new error function in IOMixin
	* removed test for error function from _handle_exception function,
	since it is now defined in the base class

	event/fileio.py
	* added error function which calls io.clean_eventcache(all=True)

	theme-rpm.py, logos-rpm.py, config-rpm.py, release-rpm.py
	* removed error function which removed the build_folder since the
	build_folder is located in the event cache.

	files.py, download.py
	* override base error function; calls diff.clean_metadata() instead

	gpgcheck.py, gpgsign.py, sources.py
	* removed error function which called self.clean()

	sourcevars.py
	* error function calls Event.error(e) in addition to cleaning up
	images in the tmp folder
	* removed call to previously-removed image.cleanup function

	pkglist.py
	* removed error function which removed depsolve folder (contained in
	event cache)

	initrd-image.py, xen-images.py, diskboot-image.py, product-image.py,
	updates-image.py
	* error function calls Event.error(e) in addition to cleaning up
	images in tmp folder
	[150842ed5f40]

	* lib/dimsbuild/modules/core/rpms/localrepo.py:
	[svn] localrepo.py
	* modified log messages
	* changed 'custom' -> 'distribution-specific'
	* moved rpm/srpm detail to log level 4
	[c59eb0a786f5]

2007-10-03  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/main.py:
	[svn] Summary: --force and --skip now operate at the module rather
	than the event level. The eventual goal is to remove the concept of
	events from the front end entirely; ideally, only a high-level user
	would even know they exist. Instead, we present modules that perform
	some concrete unit for the final build tree. (Note - in many cases
	there is a 1 to 1 mapping of modules to events, and since modules
	often have the same name as the events they define, this change is
	transparent in most cases.)

	Events can still be skipped and forced by using --skip-event and
	--force-event, respectively.

	This change introduces a kludge that might become a feature - since
	there is no 'ALL' module, --force ALL doesn't work out of the box.
	The fix is to fake it by creating a mapping from the nonexistant
	'ALL' module to the 'ALL' event. This fix brings the possibility of
	defining certain upper- level tasks like generating installer files,
	all software and custom rpms, or all publishing tasks and
	categorizing them into a pseudo module that can be
	enabled/disabled/forced/skipped through normal mechanisms.

	dimsbuild/lib/dimsbuild/event/__init__.py
	 * exceptions now always write their traceback to the logfile.
	Previously, traceback was only being written when it was
	displayed on the console dimsbuild/lib/dimsbuild/main.py
	 * added the necessary methods and auxiliary code to get forcing and
	skipping to work at the module level. See summary for details
	 * added error checking code for skip/force on modules and events so
	that tracebacks are suppressed on invalid ids
	dimsbuild/bin/dimsbuild
	 * --force and --skip now apply to modules
	 * added new --force-event and --skip-event, two hidden options for
	forcing and skipping events directly
	[4b1406de3881]

2007-10-03  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/comps.rng:
	[svn] * dimsbuild/trunk/modules/rpms:
	- fixed bug 72.
	- when I stopped keeping the build folder around once the RPM was
	built, the way the installinfo was being used needed to be
	modified, but wasn't. The input files are sync'd/created to/in
	<rpm input directory>/install/directory; they were being created
	in <rpm build directory>/type/of/file ('etc', 'gpg', 'repo' etc.).
	[4633eea2ca40]

2007-10-03  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/shared/rpms.py:
	[svn] dimsbuild/lib/dimsbuild/modules/shared/rpms.py
	 * removed the 'rpms-src' directory from builddata; all rpms now use
	the same mechanism that installer images do; that is, there is an
	<id>-content cvar which consists of a dictionary of destination,
	source list pairs which any event can modify in order to add
	files to an rpm. (Uday should probably test this to make sure it
	does what it advertises.) dimsbuild/lib/dimsbuild/modules/core/rpms
	/config-rpm.py
	 * updated to use new cvar instead of srcdir
	dimsbuild/lib/dimsbuild/modules/core/autoclean.py
	 * removed whitelisting of event mddir autocleaning; all folders are
	now subject to being autocleaned if they aren't listed as an
	enabled event in the config file (or through being default-on)
	[127c98a40c5f]

	* lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/xen-images.py:
	[svn] dimsbuild/lib/dimsbuild/modules/core/autoclean.py
	 * removed whitelist of 'images-src'
	dimsbuild/lib/dimsbuild/modules/core/installer/xen-images.py
	 * fixed former issue; xen's initrd.img should theoretically contain
	all the files of the standard initrd.img
	[293365169e37]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/repo.py:
	[svn] dimsbuild/lib/dimsbuild/*
	 * did same setdefault() replacement as my previous lib commit; see
	commit 2271's commit message for details
	dimsbuild/lib/dimsbuild/event/fileio.py
	 * fixed a potentially very dangerous scoping issue in setup_sync where
	a call that specified both xpath and path arguments would product
	bogus destinations for the path arguments
	dimsbuild/lib/dimsbuild/modules/shared/installer.py
	 * Events that use ImageModifyMixin now automatically create a
	<id>-content control variable. This is a dictionary of
	destination to source list that can be used to include one or
	more sources in the specified destination
	 * removed the whole 'images-src' directory; all events must place
	their input inside the correct cvar in order for it to be
	included in the output
	 * corrected call to _validate_image() inside check(); was missing '()'
	 * removed the automatic setting of <id>-changed cvar; unused
	 * all events that build images should conditionally-requires
	<id>-content to ensure that all modifications are included
	dimsbuild/lib/dimsbuild/modules/shared/rpms.py
	 * slight logging change dimsbuild/lib/dimsbuild/modules/core/installer
	/initrd-image.py
	 * 'initrd-image' event no longer provides 'initrd-file'
	 * 'initrd-image' event now provdies 'isolinux-files'
	 * 'initrd-image' event no longer comes-before 'isolinux'
	 * 'initrd-image' event now comes-after 'isolinux'
	 * 'initrd-image' event now conditionally-requires 'initrd-image-
	content'
	 * sets the value of self.cvars['isolinux-files']['initrd.img'] to the
	value this event computes
	dimsbuild/lib/dimsbuild/modules/core/installer/isolinux.py
	 * 'isolinux' event no longer proviedes 'vmlinuz-file' or 'isolinux-
	dir'
	 * 'isolinux' event now provides 'isolinux-files'
	 * removed redundant setup_sync() calls; all this is handled by
	FileDownloadMixin
	 * now creates a cvar with a dictionary of file id to file paths for
	each file contained in the isolinux directory - this allows
	subsequent events to modify files on a file by file basis
	dimsbuild/lib/dimsbuild/modules/core/installer/xen-images.py
	 * 'xen-images' event no longer requires 'initrd-file'
	 * 'xen-images' event now conditionally-requires 'initrd-image-content'
	 * copies 'initrd-image-content' to 'xen-images-content' so that
	modifications to the normal initrd are also applied to the xen
	version (this doesn't seem to be working, will fix later)
	dimsbuild/lib/dimsbuild/modules/core/installer/diskboot-image.py
	 * 'diskboot-image' event no longer requires 'initrd-file'
	 * 'diskboot-image' event now requires 'installer-splash'; NOTE - this
	is an artificial dependency I think, which should be investigated
	 * 'diskboot-image' event now conditionally-requires 'diskboot-image-
	content'
	 * adjusted event to use the 'isolinux-files' cvar for its initrd
	source dimsbuild/lib/dimsbuild/modules/core/installer/infofiles.py
	 * corrected BASE_VARS to cvars['base-vars']
	dimsbuild/lib/dimsbuild/modules/core/installer/bootiso.py
	 * 'bootiso' event no longer requires 'initrd-file' or 'isolinux-dir'
	 * 'bootiso' event now requires 'isolinux-files'
	 * adjusted event to use 'isolinux-files' for its input
	dimsbuild/lib/dimsbuild/modules/core/installer/product-image.py
	 * 'product-image' event no longer conditionally-comes-after 'logos'
	 * 'product-image' event now conditionally-requires 'product-image-
	content' dimsbuild/lib/dimsbuild/modules/core/installer/logos.py
	 * 'installer-splash' now provides 'product-image-content'
	 * _copy_pixmaps() method now copies pixmaps from rpm temp folder to
	the output directory so they can be linked later
	dimsbuild/lib/dimsbuild/modules/core/installer/pxeboot-images.py
	 * 'pxeboot-images' event no longer requires 'vmlinuz-file' or 'initrd-
	file'
	 * 'pxeboot-images' event now requires 'isolinux-files'
	 * adjusted event to use the 'isolinux-files' cvar for its input
	dimsbuild/lib/dimsbuild/modules/core/installer/updates-image.py
	 * 'updates-image' event no longer conditionally-comes-after
	'installer-logos'
	 * 'updates-image' event now conditionally-requires 'updates-image-
	content'
	[b62ad11c49ff]

2007-10-03  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/core/os_event.py:
	[svn] os_event.py
	* Minor log message change from "composing output tree" to "composing
	os tree".
	[8ca6d9796a7c]

	* lib/dimsbuild/modules/core/software/comps.py:
	[svn] comps.py
	* fixed index error bug in for loop; needed to pop item from list
	after processing.
	[6146af8c003a]

2007-10-02  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py,
	lib/dimsbuild/modules/extensions/rpms/__init__.py,
	lib/dimsbuild/modules/shared/__init__.py:
	[svn] Added missing __init__.py in extensions/rpms
	[f20c13fe0531]

2007-10-02  uprakash  <uprakash>

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/core/installer/initrd-
	image.py, lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/validate.py:
	[svn] * dimsbuild/validate.py:
	- if the schema being used to validate a section of the config file
	that is not defined by the schema, then raise an exception.

	* dimsbuild/modules:
	- miscellaneous whitespace cleanup
	[bf6684a8c54f]

2007-10-02  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/rpms/default_theme.py,
	lib/dimsbuild/modules/extensions/rpms/theme-rpm.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/extensions/sources.py,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/theme-rpm.rng:
	[svn] Summary: renamed extension modules to match their config top-
	level element names, as with the previous commit. Also renamed
	'default-theme- rpm' to 'theme-rpm', 'default' being somewhat
	unnecessary
	[95a215500fa7]

	* lib/dimsbuild/modules/core/installer/diskboot-image.py,
	lib/dimsbuild/modules/core/installer/diskboot.py,
	lib/dimsbuild/modules/core/installer/initrd-image.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/product-image.py,
	lib/dimsbuild/modules/core/installer/product.py,
	lib/dimsbuild/modules/core/installer/pxeboot-images.py,
	lib/dimsbuild/modules/core/installer/pxeboot.py,
	lib/dimsbuild/modules/core/installer/release-files.py,
	lib/dimsbuild/modules/core/installer/release.py,
	lib/dimsbuild/modules/core/installer/stage2-images.py,
	lib/dimsbuild/modules/core/installer/stage2.py,
	lib/dimsbuild/modules/core/installer/updates-image.py,
	lib/dimsbuild/modules/core/installer/updates.py,
	lib/dimsbuild/modules/core/installer/xen-images.py,
	lib/dimsbuild/modules/core/installer/xen.py,
	lib/dimsbuild/modules/core/rpms/config-rpm.py,
	lib/dimsbuild/modules/core/rpms/config.py,
	lib/dimsbuild/modules/core/rpms/logos-rpm.py,
	lib/dimsbuild/modules/core/rpms/logos.py,
	lib/dimsbuild/modules/core/rpms/release-rpm.py,
	lib/dimsbuild/modules/core/rpms/release.py:
	[svn] Summary: Renamed all modules so that they correspond to their
	config top-level element names.

	WARNING: this makes some events have 'illegal' names as far as
	python is concerned for direct importing (specifically, they contain
	the '-' character). However, the only time this is a problem is if
	you are trying to directly import these modules using the import
	statement, which doesn't happen in dimsbuild (and, incidentally,
	doesn't work anyway due to the complex environment required. If we
	determine for some reason that we really don't like this
	restriction, I suggest converting the '-' to '_' in the filenames
	only, and having dimsbuild handle the conversion back to '-'
	internally.

	Rationale behind '-' vs '_': '-' is easier to type, easier to see,
	and more commonly used outside of programming circles than '_'. '-'
	also occurs much more commonly in xml document tag names.
	[7f02efe206d6]

	* lib/dimsbuild/locals.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/diskboot.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/pxeboot.py,
	lib/dimsbuild/modules/core/installer/release.py,
	lib/dimsbuild/modules/core/installer/stage2.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/config.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos.py,
	lib/dimsbuild/modules/core/rpms/release.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/repo.py,
	lib/dimsbuild/validate.py:
	[svn] Summary: A lot of whitespace changes - somebody's editor likes
	to help out and put a bunch of whitespace at the end of some lines;
	I got rid of all the ones I found
	[354b38a934fa]

	* lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/rpms/default_theme.py,
	lib/dimsbuild/modules/core/sources.py,
	lib/dimsbuild/modules/extensions/rpms/default_theme.py,
	lib/dimsbuild/modules/extensions/sources.py:
	[svn] dimsbuild/lib/dimsbuild/modules/core/rpms/default_theme.py
	 * moved; default_theme is now an extension module
	dimsbuild/lib/dimsbuild/modules/core/autoclean.py
	 * output message moved from run() to setup() so it prints in the right
	spot dimsbuild/lib/dimsbuild/modules/core/sources.py
	 * moved; sources is now an extension module
	[af0856f886ed]

	* lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/xen.py,
	share/dimsbuild/schemas/distro.conf/initrd.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/xen.rng
	 * renamed to 'initrd.rng' to better reflect its 'owner'
	dimsbuild/lib/dimsbuild/modules/core/installer/isolinux.py
	 * isolinux now 'owns' the '/distro/initrd-image' section of the config
	file; it performs validation
	dimsbuild/lib/dimsbuild/modules/core/installer/xen.py
	 * xen no longer validates '/distro/initrd-image'
	[9f163793c4e1]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/loader.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/diskboot.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/release.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/config.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/sources.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/validate.py:
	[svn] dimsbuild/lib/dimsbuild/event/diff.py
	 * removed DiffMixin.var_changed_from_value(); no longer needed
	dimsbuild/lib/dimsbuild/event/__init__.py
	 * removed DEBUG flag from here; instead imports the DEBUG flag from
	main.py dimsbuild/lib/dimsbuild/modules/*
	 * updated logging messages to not reflect the underlying event
	structure, but instead to refer to the actual process
	dimsbuild/lib/dimsbuild/modules/extensions/iso.py
	 * 'ISO' event no lnoger provides 'iso-enabled'
	 * 'iso-sets' event no longer conditionally requires 'sources-enabled'
	 * removed conditional run logic
	dimsbuild/lib/dimsbuild/modules/extensions/software/gpgsign.py
	 * 'gpgsign-setup' event no longer provides 'gpgsign-enabled'
	 * 'gpgsign' event no longer requires 'gpgsign-enabled'
	 * removed conditional run logic
	 * gpgsign wasn't correctly observing the 'gpgsign-passphrase' cvar;
	this has been corrected
	dimsbuild/lib/dimsbuild/modules/core/rpms/localrepo.py
	 * 'localrepo' event no longer requires 'sources-enabled'
	dimsbuild/lib/dimsbuild/modules/core/sources.py
	 * 'source-repos' event no longer provides 'sources-enabled'
	 * removed conditional run logic
	dimsbuild/lib/dimsbuild/modules/core/software/createrepo.py
	 * 'createrepo' event no longer conditionally-requires 'gpgsign-
	enabled'
	 * 'createrepo' event now conditionally-requires 'gpgsign-public-key'
	(temporarily?) dimsbuild/lib/dimsbuild/main.py
	 * added DEBUG flag, replacing the one in event/__init__.py, with the
	same functionality
	 * raise statements now obey this flag
	 * removed eval_modlist(); no longer needed
	[68f181676563]

2007-10-02  uprakash  <uprakash>

	* lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/sources.py:
	[svn] * dimsbuild/modules:
	- always running createrepo with the --update flag, so that if the
	repodata folder already exists and an RPM is unchanged (same
	timestamp and size), then the RPM's metadata is not recomputed.
	This reduces I/O operations in the case of a few new or modified
	RPMs.
	[ba60969e3a9c]

2007-10-01  uprakash  <uprakash>

	* lib/dimsbuild/main.py, lib/dimsbuild/validate.py:
	[svn] * dimsbuild/validate.py:
	- raise an Exception instead of printing a warning if an unknown top-
	level element is found.
	[ee5d9dbe9e09]

	* lib/dimsbuild/modules/core/rpms/default_theme.py:
	[svn] * dimsbuild/trunk/core/rpms/default_theme.py:
	- the default value for the default theme RPM's enabled attribute is
	True
	[6fca0e75bebb]

	* bin/dimsbuild, lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/misc.py, lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/product.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/repo.py,
	lib/dimsbuild/splittree.py, lib/dimsbuild/validate.py:
	[svn] * dims/:
	- dims-common/lib/dims/xml --> dims-common/lib/dims/xmllib
	[f4148ed3105f]

	* bin/dimsbuild, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/misc.py, lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/installer/product.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/shared/rpms.py, lib/dimsbuild/repo.py,
	lib/dimsbuild/splittree.py, lib/dimsbuild/validate.py:
	[svn] * dims-common/trunk/lib/dims/xml:
	- 'xml' is a temporary module name for this module, will be changed in
	the next commit.
	- the 'xml' module has all xml related python modules: tree, config,
	merge, imerge, and serialize; they were xmltree, configlib,
	xmlmerge, imerge and and xmlserialize respectively.
	- it's just a code cleanup of all the xml modules.
	- the biggest change in this commit is in the config file reading
	process. Now, a Content Handler is used to read the config file,
	which expands macros in the tree right away and deletes all the
	macro elements from the resulting tree. This removed all the
	special handling that needs to be done for the <macro/> elements.
	- the result of saxification preserves line numbers, something that
	wasn't happening before.
	- the API of XmlTreeElement and ConfigTreeElement remain unchanged.

	* dims-common/trunk/lib/dims/locals.py:
	- removed because unused

	* dims-common/trunk/lib/dims:
	- fixed imports in modules using the XML-related modules.

	* dimsbuild/trunk/lib:
	- Likewise

	* dimsbuild/trunk/lib/dimsbuild/validate.py:
	- removed the hackery around /distro/macro
	- look at the disabled modules' list to look for top-level elements,
	the validate() functions for which weren't called. This could use
	some improvement.
	[b62cf94a417d]

	* lib/dimsbuild/modules/extensions/software/gpgcheck.py:
	[svn] * dimsbuild/extensions/software/gpgcheck.py:
	- changed the class name from GPGCheckEvent to GpgCheckEvent for
	consistency
	[7981457b652f]

	* share/dimsbuild/schemas/distro.conf/isolinux.rng:
	[svn] * dimsbuild/schemas/distro.conf/isolinux.rng:
	- removed extra <optional> element in schema
	[3882306fb157]

2007-10-01  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/event/loader.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/core/files.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/diskboot.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product.py,
	lib/dimsbuild/modules/core/installer/release.py,
	lib/dimsbuild/modules/core/installer/stage2.py,
	lib/dimsbuild/modules/core/installer/updates.py,
	lib/dimsbuild/modules/core/installer/xen.py,
	lib/dimsbuild/modules/core/iso.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config.py,
	lib/dimsbuild/modules/core/rpms/default_theme.py,
	lib/dimsbuild/modules/core/rpms/logos.py,
	lib/dimsbuild/modules/core/rpms/release.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/core/software/gpgsign.py,
	lib/dimsbuild/modules/core/sources.py,
	lib/dimsbuild/modules/extensions/files.py,
	lib/dimsbuild/modules/extensions/iso.py,
	lib/dimsbuild/modules/extensions/software/__init__.py,
	lib/dimsbuild/modules/extensions/software/gpgcheck.py,
	lib/dimsbuild/modules/extensions/software/gpgsign.py,
	lib/dimsbuild/modules/lib/__init__.py,
	lib/dimsbuild/modules/lib/installer_lib.py,
	lib/dimsbuild/modules/lib/rpms_lib.py,
	lib/dimsbuild/modules/shared/__init__.py,
	lib/dimsbuild/modules/shared/installer.py,
	lib/dimsbuild/modules/shared/rpms.py,
	share/dimsbuild/schemas/distro.conf/main.rng:
	[svn] Summary: Began moving events from 'core' to 'extensions' as
	determined appropriate. Currently, gpgsign, gpgcheck, iso, and
	files modules are moved. This will also contain the two extension
	rpm modules once I figure out what they are.

	Details:
	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/main.rng
	 * removed <modules> and <plugins> sections
	dimsbuild/trunk/lib/dimsbuild/event/loader.py
	 * modified Loader to no longer examine MODULES lists, but instead to
	load all python modules beneath each tree according to standard
	default-on and default-off processes
	dimsbuild/trunk/lib/dimsbuild/modules/core/*
	 * removed MODULES list, where appropriate
	 * corrected import statements of lib imports to 'shared'
	dimsbuild/trunk/bin/dimsbuild
	 * added --enabled-modules to the list of filtered args

	dimsbuild/lib/dimsbuild/modules/extensions/*
	 * moved from core to extensions; these are now classified as 'default-
	off' modules, meaning their code is only loaded and executed if
	an appropriate section is found in the config file (or if
	explicitly loaded at the command line, tho most/all will fail
	without accompanying config)

	dimsbuild/lib/dimsbuild/modules/shared/installer.py
	 * renamed from installer_lib.py
	dimsbuild/lib/dimsbuild/modules/shared/rpms.py
	 * renamed from rpms_lib.py

	dimsbuild/lib/dimsbuild/modules/shared
	 * renamed from 'lib' to avoid confusion
	[d3680e6f1cf7]

	* bin/dimsbuild, lib/dimsbuild/event/loader.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/core/__init__.py,
	lib/dimsbuild/modules/core/autoclean.py,
	lib/dimsbuild/modules/core/files.py,
	lib/dimsbuild/modules/core/init.py,
	lib/dimsbuild/modules/core/installer/__init__.py,
	lib/dimsbuild/modules/core/installer/bootiso.py,
	lib/dimsbuild/modules/core/installer/diskboot.py,
	lib/dimsbuild/modules/core/installer/infofiles.py,
	lib/dimsbuild/modules/core/installer/isolinux.py,
	lib/dimsbuild/modules/core/installer/logos.py,
	lib/dimsbuild/modules/core/installer/product.py,
	lib/dimsbuild/modules/core/installer/pxeboot.py,
	lib/dimsbuild/modules/core/installer/release.py,
	lib/dimsbuild/modules/core/installer/stage2.py,
	lib/dimsbuild/modules/core/installer/updates.py,
	lib/dimsbuild/modules/core/installer/xen.py,
	lib/dimsbuild/modules/core/iso.py,
	lib/dimsbuild/modules/core/os_event.py,
	lib/dimsbuild/modules/core/publish.py,
	lib/dimsbuild/modules/core/repos.py,
	lib/dimsbuild/modules/core/rpms/__init__.py,
	lib/dimsbuild/modules/core/rpms/config.py,
	lib/dimsbuild/modules/core/rpms/default_theme.py,
	lib/dimsbuild/modules/core/rpms/localrepo.py,
	lib/dimsbuild/modules/core/rpms/logos.py,
	lib/dimsbuild/modules/core/rpms/release.py,
	lib/dimsbuild/modules/core/software/__init__.py,
	lib/dimsbuild/modules/core/software/comps.py,
	lib/dimsbuild/modules/core/software/createrepo.py,
	lib/dimsbuild/modules/core/software/download.py,
	lib/dimsbuild/modules/core/software/gpgcheck.py,
	lib/dimsbuild/modules/core/software/gpgsign.py,
	lib/dimsbuild/modules/core/software/pkglist.py,
	lib/dimsbuild/modules/core/sources.py,
	lib/dimsbuild/modules/core/sourcevars.py,
	lib/dimsbuild/modules/extensions/__init__.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/lib.py,
	lib/dimsbuild/modules/lib/__init__.py,
	lib/dimsbuild/modules/lib/installer_lib.py,
	lib/dimsbuild/modules/lib/rpms_lib.py,
	lib/dimsbuild/modules/os_event.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/__init__.py,
	lib/dimsbuild/modules/software/comps.py,
	lib/dimsbuild/modules/software/createrepo.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/software/pkglist.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/diskboot.rng,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/gpgsign.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/isolinux.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/publish.rng,
	share/dimsbuild/schemas/distro.conf/release-files.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] Warning - this commit is a result of svn's retarded insistence
	that you can't move a file a second time until after it has been
	committed. Check out and use at your own risk

	Summary: Initial commit of the concept of 'default-on', 'default-
	off' for modules. Created two subfolders of modules, 'core' and
	'extensions', which are to be used to contain modules according to
	the following rough heuristic:

	 * core modules are modules that are required for dimsbuild to
	complete successfully (comps.py, pkglist.py) or those that are
	deemed important enough in the process as to be required for a
	distribution to be 'complete' (rpms/release.py, publish.py).
	Core modules are 'default-on', meaning that unless specified
	otherwise, they are loaded and executed normally.
	 * extension modules are modules that extend, modify, or otherwise
	manipulate the output of dimsbuild in a non-process critical way
	(files.py, iso.py). Extension modules are 'default-off', meaning
	that they have to be explicitly enabled in the config file or at
	the command line in order for them to run

	Currently all modules are classfied as 'core'; this will be adjusted
	on a module-by-module basis in the future.

	Modules can be disabled/enabled in two ways. First, any top-level
	element in the config file is automatically enabled by default,
	unless the 'default' attribute is set to False. Modules that aren't
	explicitly listed in the config file are treated according to their
	type; core modules are loaded, extension modules are not. Secondly,
	the command line options --enable-module and
	--disable-module can be used to explicitly enable and disable
	modules.

	Also created a third subfolder of modules, 'lib'. This folder
	should contain any and all shared library files for all modules.

	All events are now listed in their config files as top level items.
	Both the code and schemas have been updated to reflect this.

	All schemas modified slightly in an attempt to make them less
	vulnerable to status changes (especially optional) and more parallel
	to the files they are compared to. Instead of indenting at each
	level of xml, indents only occur when the underlying XML document
	being checked would indent. This means that the entire document
	doesn't have to be readjusted whenever an <optional> tag is removed,
	for example. It also makes the schema and the XML document itself
	roughly parallel in structure. Its primary disadvantage is it is
	somewhat more difficult to read. I've tried to counteract this with
	liberal use of newlines, but if we don't like it, we can revert this
	change (as usual).
	[555e3d251049]

2007-10-01  kwilliams  <kwilliams>

	* docsrc/comps.rng, lib/dimsbuild/modules/software/comps.py,
	share/dimsbuild/schemas/distro.conf/comps.rng:
	[svn] Summary: Added 'core' attribute to 'group' elements in 'comps'
	schema. If true, packages from the group are appended to the core
	group, otherwise the group itself is appended to the comps file.
	The former ensures packages of type 'mandatory' or 'default' are
	installed in both manual and kickstart installs. The latter allows
	the group to be optionally selected during manual installs, and
	requires the group to be listed in the packages section of the
	kickstart file for kickstart installs. The default value is true.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/comps.rng
	* added core attribute to comps schema

	dimsbuild/trunk/docsrc/comps.rng
	* added documentation for core attribute

	dimsbuild/trunk/lib/dimsbuild/modules/software/comps.xml
	* added support for core attribute
	* separated groups processing two steps: first a groups variable is
	populated, then group contents are added to the comps file. This
	allows stand alone groups to be sorted alphabetically in the
	resulting comps file (after the core element which comes first).
	[b6d161a736b9]

2007-10-01  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/callback.py,
	lib/dimsbuild/event/__init__.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/software/gpgsign.py:
	[svn] dimsbuild/lib/dimsbuild/callback.py
	 * readjusted callback messages so that truncation is enabled
	explicitly where required
	 * BuildSyncCallback.sync_start sets its progress bar's fo to None at
	log threshold 2 and below - this disables progress bar output
	 * BuildSyncCallback.start() output message adjusted slightly at
	threshold 2
	 * removed all draw arguments to callback methods; these are all
	handled by the bar.fo change, above
	dimsbuild/lib/dimsbuild/modules/software/gpgsign.py
	 * modified logging messages slightly dimsbuild/lib/dimsbuild/main.py
	 * fixed bug in cache clearing dimsbuild/lib/dimsbuild/logging.py
	 * default log message no longer truncates output - if you wish to
	limit the length of one of the strings you log, try
	log(format='%(message).75s'), where 75 is the number of
	characters to print
	 * added threshold attribute to log container; equal to the console
	log's threshold dimsbuild/bin/dimsbuild
	 * --log-level option argument now parsed as an integer
	 * removed --err-level option
	 * changed behavior of --disable-module, --skip, and --force; instead
	of accepting a space-separated list of modules/events, these all
	accept a single argument. If you want to disable/skip/force more
	than one, simply use this option more than once. TODO - consider
	adding shortened forms for all of these to make this easier; may
	need to consider posix compliance on shortened form
	 * removed __append_cb, as it is no longer needed due to above change
	[1dc9198f9777]

2007-09-28  uprakash  <uprakash>

	* lib/dimsbuild/modules/lib.py:
	[svn] * dimsbuild/modules/lib.py:
	- missed adding the gpgkeys attribute to the Repo object being
	created.
	- always adding the repo.pkgsfile as an output of the repo event, if
	run() gets called, even if the primary xml hasn't changed.
	[fbd6deb4e7f4]

	* lib/dimsbuild/validate.py:
	[svn] * dimsbuild/validate.py:
	- any macro elements inside the element being validated was causing an
	InvalidConfigError exception to be raised. This is because I wasn't
	deleting the macro elements in the tree underneath the element being
	validated. Fixed.
	- any macro elements outside of the element being validated don't
	cause this error because of the <any-element/> definition around
	them.
	[81e3f86dab96]

2007-09-28  dmusgrave  <dmusgrave>

	* lib/dimsbuild/main.py, lib/dimsbuild/validate.py:
	[svn] dimsbuild/lib/dimsbuild/main.py
	 * fixed botched merge
	[6a4ffac7a57b]

2007-09-28  uprakash  <uprakash>

	* lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/lib.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/comps.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/pkglist.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py, lib/dimsbuild/repo.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] * dimsbuild/event/__init__.py:
	- deleted the RepoMixin class; using/creating control variables
	instead, as required.

	* dimsbuild/schemas/distro.conf:
	- changed the 'install-path' attribute to 'install-dest.'

	* dimsbuild/repo.py:
	- added a RepoContainer class that contains all the Repo objects that
	are created using RepoContainer.add_repo().
	- deleted the RepoFromXml factory function. Its functionality has been
	moved over to RepoEventMixin in modules/lib.py.

	* dimsbuild/modules:
	- all the events that were extending RepoMixin and were calling the
	RepoMixin.getBaseRepoId() function, now require the 'base-repoid'
	control variable (that is provided by the 'repos' event) and use
	it instead of making the function call.

	* dimsbuild/modules/lib.py:
	- added a RepoEventMixin that uses the RepoContainer class and adds
	Repo objects to the container on reading the config file section
	related to the Event class extend RepoEventMixin. Also has
	functions to sync the repodata folder of the input repository, and
	re-read the primary.xml.gz file of the repository that has changed
	since the last run of dimsbuild.

	* dimsbuild/modules/rpms:
	- all the events that build RPMs provide 'custom-rpms', 'custom-
	srpms', and 'custom-rpms-info' all three of which are required by
	the RPMS/localrepo event.
	- changed 'install-path' attribute lookups to 'install-dest' attribute
	lookups.

	* dimsbuild/modules/rpms/localrepo.py:
	- the localrepo event instantiates the RepoContainer class and uses it
	to populate the localrepo's Repo object and localrepo-source's Repo
	object.
	[ef832382634a]

2007-09-28  dmusgrave  <dmusgrave>

	* bin/dimsbuild, etc/logrotate.d/dimsbuild, lib/dimsbuild/callback.py,
	lib/dimsbuild/event/__init__.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/sources.py:
	[svn] Summary: Major logging system rewrite. Eliminated the error
	logger; all logging is now handled by the primary logger. Log
	system now inherits from the dims- common logging module. Dimsbuild
	now generates, in addition to its normal output, a logfile in
	/var/log which contains all output from all log levels. This logfile
	is intended to be managed via use of logrotate (see dimsbuild inside
	etc/logrotate.d). Logging improved greatly for most events,
	especially in error cases.

	Details: dimsbuild/lib/dimsbuild/event/__init__.py
	 * added status as a property on Events - setting status correctly
	propagates changes to all children
	 * added skipped/forced properties, which operate by comparing the
	expected value with Event.status
	 * added some logging messages detailing event method calls
	 * removed Event.errlog, Event.errorlogger; all logging is now handled
	by the normal logger dimsbuild/lib/dimsbuild/callback.py
	 * callbacks now log a completed progress bar to the logfile upon
	successful completion of depsolving/downloading
	 * BuildSyncCallback now expects a relpath argument; as before, all
	sync printouts are now printed relative to this path
	dimsbuild/lib/dimsbuild/modules/software/gpgcheck.py
	 * slightly modified gpg check logging statements to reflect modified
	API dimsbuild/lib/dimsbuild/main.py
	 * all errlogger calls rerouted to logger
	 * added _log_header and _log_footer methods to Build class that print
	out header/footer stuff to the log before the build process
	starts and after it completes, respectively
	dimsbuild/lib/dimsbuild/logging.py
	 * now based primarily on the Logger and LogContainer classes in dims-
	common's logging.py
	 * removed BuildLogger class
	 * added Logger class, LogContainer class, both of which extend the
	classes of the same name in the dims-common module
	 * modified API slightly - calling Logger.log() applies formatting to
	the given message and by default appends a newline character to
	the end. Logger.write(), on the other hand, writes its message
	exactly, without modification, to the log files.
	 * Logger class is created with a format, timefmt, and possibly fmtvals
	arguments. The format is a sprintf-style format string that is
	applied to all messages before writing to the log files. timefmt
	is a strftime-style format string that is used if the format
	string specifies a %(time)s variable. Finally, fmtvals is a
	dictionary that can be used to define more available variables
	for replacement
	 * new function make_log(), returns a LogContainer consisting of a
	console logger (for printing to the screen) and a log file logger
	(for printing to a log file) dimsbuild/bin/dimsbuild
	 * added new option --log-file, which allows the user to specify a
	location to use for the log file

	dimsbuild/etc/logrotate.d/dimsbuild
	 * added this config file, which instructs logrotate to rotate the
	default dimsbuild log file once it reaches 500kB in size
	[4050e5fc8dc8]

2007-09-28  kwilliams  <kwilliams>

	* docsrc/comps.rng, lib/dimsbuild/modules/software/comps.py,
	share/dimsbuild/schemas/distro.conf/comps.rng:
	[svn] Flattened comps schema to remove 'create-new' and 'use-
	existing' container elements. Now the schema defines a choice of
	content, either text (the path to an existin comps file) or a group
	of elements ('groups', 'include' and 'exclude', all optional ).
	Modified schemas/distro.conf/comps.rng, docsrc/comps.rnt, and
	comps.py.
	[f24dfd1c5dfd]

2007-09-27  uprakash  <uprakash>

	* bin/dimsbuild:
	[svn] * dims-common/trunk/lib/xmltree.py:
	- raises a more user-friendly message if the XML tree being read in is
	not well-formed.
	[11a2c948caad]

	* lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dimsbuild/modules/rpms:
	- the rpms elements look at the 'install-path' attribute instead of
	the 'dest' attribute.
	- got rid of the RpmBuildEvent class because it was not actually
	required. It got replaced by RpmBuildMixin, which is more concise
	in what it does (i.e. has methods that can be used to build rpms
	and nothing else)
	- the localrepo event comes after all the other RPMS' children.
	[561e2d3eb977]

	* lib/dimsbuild/main.py, lib/dimsbuild/validate.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/diskboot.rng,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/isolinux.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/release-files.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] * dimsbuild/validate.py:
	- the validation process now validates the entire configuration file
	against the schema provided. To accomplish this, the schema is
	modified to allow any element around the element (and any its
	parents) defined in the schema file. Also, to get helpful error
	messages, optional elements are removed, because the validation
	takes place only if the element is there in the config file.
	- as a side effect of this change, we can add the definition of the
	rpms and installer elements in the config file, when required. The
	schemas have been modified to reflect this.
	[aa180fe80a03]

2007-09-27  kwilliams  <kwilliams>

	* lib/dimsbuild/event/fileio.py:
	[svn] Summary: Replaced 'remove_output' function with
	'clean_eventcache' function. Default operation of the
	clean_eventcache function is to compare contents of the event cache
	(aka mddir) with files listed in the output section of the events
	metadata files and remove differences. When called with 'all=True',
	the function removes all files in the event cache folder.

	In addition, modified isolinux to provide an 'isolinux-dir' cvar
	which is consumed by the bootiso event. Previously bootiso was
	using a hardcoded value.
	[6b5d53771675]

	* lib/dimsbuild/event/fileio.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/os_event.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/comps.py,
	lib/dimsbuild/modules/software/createrepo.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/software/pkglist.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] Summary: Replaced 'remove_output' function with
	'clean_eventcache' function. Default operation of the
	clean_eventcache function is to compare contents of the eventcache
	(aka mddir) with files listed in the output section of the metadata
	[299ec713365f]

2007-09-26  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/constants.py,
	lib/dimsbuild/event/__init__.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/os_event.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py:
	[svn] dimsbuild/lib/dimsbuild/event/__init__.py
	 * added a global DEBUG flag - when this is enabled, error messages are
	fully propagated, including their tracebacks. When disabled,
	tracebacks are suppressed and the user only sees the final error
	message. The intended use for this is for developer needs versus
	user confusion - devs want to see the errors and users don't
	 * added Event._log_unhandled_error(), a function which prints out a
	generic unhandled exception-type message
	 * added new Event.status attribute; this attribute handles propagating
	status changes to all children (apply_flowcontrol is no longer
	necessary) dimsbuild/lib/dimsbuild/constants.py
	 * removed OPT_*; no longer necessary
	dimsbuild/lib/dimsbuild/modules/autoclean.py
	 * AutocleanEvent.eventinfo no longer stores eventid -> eventid
	mappings (how silly is that), but instead eventid -> event
	mappings. This means we no longer have to traverse the event
	tree for eventid lookups dimsbuild/lib/dimsbuild/modules/os_event.py
	 * renamed 'os' event to 'os-compose' to both match event class name
	(OSComposeEvent) and to eliminate some ambiguity in its purpose and
	relation to the 'OS' event
	dimsbuild/lib/dimsbuild/modules/software/gpgcheck.py
	 * fixed gpg checking output so there is always a space between the rpm
	name and the status text. Also increased the width allotted to
	the name from 40 to 70 characters dimsbuild/lib/dimsbuild/main.py
	 * Build class now extends object
	 * broke up __init__() tasks into individual methods (computing
	import_dirs, disabled_modules)
	 * build.__init__() no longer calls dispatch.process(until="init"); no
	longer necessary now that applyopt isn't an event
	 * new methods Build._compute_import_dirs() and
	Build._computed_disabled_modules() which handle exactly what they
	say they handle
	 * updated terminology to reflect 'clean' to 'force' change
	 * removed automatic printing of event tree; event tree is now only
	printed if the options.list_events is set (controlled by the
	'--list-events' cli option)
	 * added a great deal of error handling for schemas and config files.
	Theoretically, no errors can get through related to config/schema
	reading and validation
	 * removed Build.get_mdlr_events(); no longer needed
	 * renamed Build.make_event_superclass() to
	Build._seed_event_defaults() dimsbuild/bin/dimsbuild
	 * major reorganization of options - added OptionGroups (config,
	logging, module, and event) and assigned parents to each option
	 * tightened up metavar names
	 * added option --disable-module; allows modules to be disabled
	directly at the command line exactly as if they were listed in
	the config file's modules section
	 * added option --list-events; causes dimsbuild to print out its event
	tree and exit
	 * changed option --clean to --force to better reflect what the average
	user would expect this option to be named
	 * changed option --errlog-level to --err-level so that it is the same
	length as --log-level
	 * a config file is no longer required to see the help output of the
	parser. If a config file is specified and the file exists, it is
	parsed and used before printing -h output; otherwise, it is
	ignored. (there may be a difference in output, as the config
	file may point to modules that add command line options which in
	turn affect the output of -h)
	 * added error handling on config file reading; goal of no tracebacks
	 * renamed append_events_callback to __append_cb, seeing as it isn't
	only used in event options
	 * added __read_conf(), a config reading helper that handles excepting
	exceptions and printing common output
	[b6ab360c1c70]

2007-09-26  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software/gpgcheck.py:
	[svn] gpgcheck.py
	*
	[ec3dcf5b3ecf]

2007-09-25  uprakash  <uprakash>

	* lib/dimsbuild/event/locals.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/locals.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/rpms:
	- using the new locals handling scheme

	* dimsbuild/trunk/lib/dimsbuild/locals.py:
	- added locals for RPMS

	* dimsbuild/trunk/lib/dimsbuild/event/locals.py:
	- added properties for RPMS locals
	[7a7250b88520]

2007-09-25  dmusgrave  <dmusgrave>

	* lib/dimsbuild/validate.py:
	[svn] dimsbuild/lib/dimsbuild/validate.py
	 * improved error handling; errors now include entire error stack, line
	numbers, and file name (line number output is screwy now because
	we're validating strings, not files; they always print 0)
	[020f2987788e]

2007-09-25  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] Summary: More event tweaking. Created publish-setup event
	which validates, reads config and sets up 'publish-path' and 'web-
	path' control variables. Eliminated repofile event, moved repofile
	creation (back) into release-rpm; simpler and more intuitive since
	repofile creation deals with both input and publish repos.

	release.py
	* added requires for 'web-path' cvar
	* added distro/repos as config data
	* added 'web-path' as variable data
	* added _generate_repo_files function
	* removed 'release-rpm-contents' requires; no longer used

	publish.py
	* created publish-setup event
	* publish-setup provides 'web-path', 'publish-path', and 'publish-
	content'; the latter of which is an empty set later populated by os,
	sources, and iso events
	* moved validation from publish to publish-setup event
	* modified publish event to the publish-path cvar rather than config
	[55377e38fca4]

	* lib/dimsbuild/modules/software/gpgcheck.py:
	[svn] gpgcheck.py
	* Moved statement appending homedir to output data ahead of
	remove_output function as a temporary fix to avoid homedir being
	removed on subsequent runs
	[cc16921c24c2]

	* lib/dimsbuild/modules/software/gpgsign.py:
	[svn] gpgsign.py
	* fixed up cvar assignment; conversion to path objects
	* fixed up log message to be more resilient by using self.id in
	message text
	* moved output data append statement for homedir outside of
	conditional statement to fix bug with removal of homedir on
	subsequent runs
	[ec0561baa887]

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] lib.py
	* added 'diff' prefix to has_changed functions
	[b7cff78efbaa]

	* lib/dimsbuild/modules/os.py:
	[svn] os.py
	* removed extraneous module
	[a82eb8d36494]

2007-09-24  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/os_event.py:
	[svn] Summary: Renamed compose.py, which contains OS (meta) and os
	(compose and manifest) events, to os_event.py.
	[b3ed1721f6a2]

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/os.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/__init__.py,
	lib/dimsbuild/modules/software/comps.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/software/pkglist.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] Summary: Fairly substantial changes to event organization
	including 1) divided the MAIN parent event into task indicative
	SETUP, RPMS and OS events, 2) eliminated 'output' folder containing
	redundant hardlinks; output can now be found in 'os', 'sources', and
	'iso' metadata folders, or in publish_dir. We'll live with these for
	awhile and fine-tune if anything drives us nuts.

	Details:
	* New publish-content cvar is provided by os, sources, and iso events
	and required by publish event.
	* New os-content cvar is provided by files.py, SOFTWARE, and INSTALLER
	events and required by 'os' event which performs the compose
	function and generates the manifest file
	* Pkglist and comps modules moved into the software module
	* Provides, requires, comes_before and comes_after properties modified
	for many events
	* EVENT property modified for many modules
	[782ba1e6e619]

	* lib/dimsbuild/modules/rpms/config.py:
	[svn] config.py
	* removed debug check function
	[e8c1c1fa99f9]

2007-09-24  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/loc.py:
	[svn] dimsbuild/lib/dimsbuild/modules/installer/loc.py
	 * removed; no longer necessary under new local processing system
	[a7aaa6f70720]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/event/locals.py,
	lib/dimsbuild/locals.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/loc.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/createrepo.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] Summary: Greatly improved locals handling in dimsbuild
	modules. Locals are no longer stored in XML form, but in nested
	dictionaries. This has the primary advantage of being significantly
	more compact. Additionally, developers do not have to be familiar
	with XPath in order to use them (of course, said developers do have
	to know XPath in order to use the config file). A locals mixin
	provides a 'locals' object to each event which contains several
	common locals dictionaries that can be queried for locals
	information. As before, this info is anaconda version based.

	Grouped DiffMixin and IOMixin methods and attributes inside 'dummy'
	classes as an experiement. The purpose of this change is to resolve
	some naming conflicts, to more closely associate methods with their
	purpose, and to provide prospective developers with hints as to
	where to find the functions in the the first place. We can revert
	this change if we don't like it.

	Details: dimsbuild/trunk/lib/dimsbuild/event/diff.py
	 * added DiffObject, the 'dummy' class that contains all the diff
	methods and attributes
	 * DiffMixin now defines 'diff', a DiffObject containing all diff
	methods
	 * _diff_set, _diff_handlers, and _diff_tester renamed to diff_set,
	handlers, and tester, respectively
	 * setup_diff renamed to setup, _add_handler renamed to add_handler
	dimsbuild/trunk/lib/dimsbuild/event/__init__.py
	 * Event now imports and uses Locals Mixin
	dimsbuild/trunk/lib/dimsbuild/event/fileio.py
	 * added IOObject, the 'dummy' class taht contains all the I/O methods
	and attributes
	 * IOMixin now defines 'io', an IOObject containing all I/O methods
	 * _syncinfo renamed to sync_info
	 * this file should be revisited; it contains a _lot_ of references to
	DiffMixin methods, and thus is not standalone
	dimsbuild/trunk/lib/dimsbuild/locals.py
	 * removed old XML definitions of locals
	 * replaced with new dictionary-based locals
	 * added LocalsDict, a dictionary-like class that performs incremental
	merging of its contents based on the index value it is passed
	 * LocalsDicts are recursively mergeable, meaning that nested
	dictionaries are update()d instead of merely replaced when
	calling LocalsDict.update(). Any element that is set to None is
	removed from the dictionary; this allows a dictionary to remove
	elements it no longer needs when update() is called
	dimsbuild/trunk/lib/dimsbuild/modules/*
	 * updated all calls to diff objects by inserting the diff dummy
	object; for example, 'self.test_diffs()' becomes
	'self.diff.test_diffs()'
	 * updated all calls to IO objects by inserting the io dummy object;
	for example, 'self.setup_sync()' becomes 'self.io.setup()'
	 * all modules except for rpms/logos.py use the new locals system
	dimsbuild/trunk/lib/dimsbuild/modules/manifest.py
	 * fixed indentation error
	dimsbuild/trunk/lib/dimsbuild/modules/installer/*
	 * removed locals declarations, where they existed
	dimsbuild/trunk/lib/dimsbuild/modules/installer/loc.py
	 * added xml versions of locals declarations. This file has been
	obsoleted and will be removed in a subsequent ocmmit
	dimsbuild/trunk/lib/dimsbuild/modules/installer/lib.py
	 * removed _register_file_locals() and _register_image_locals() - these
	were remnants of an older, hackish solution to the problem that
	the anaconda- version cvar isn't set at event instantiation time.
	The new locals system allows us to do away with them entirely
	 * FileModifyMixin requires that its 'file_locals' attribute be set
	prior to running FileModifyMixin.setup(). This should point to a
	dictionary of file object dictionaries - these must contain a
	minimum of a 'path' key- value pair.
	 * ImageModifyMixin requires that its 'image_locals' attribute be set
	prior to running ImageModifyMixin.setup(). This should point to
	a file object dictionary - it must contain 'path' and 'format'
	key-value pairs, and may also contain 'zipped' or 'virtual'
	booleans.

	dimsbuild/trunk/lib/dimsbuild/event/locals.py
	 * initial commit; defines a LocalsMixin class that events use
	 * a dummy 'locals' object contains the following locals objects:
	'files', 'buildstamp_fmt', 'discinfo_fmt', 'logos', and
	'installclass'. These are all properties that return values
	based on the anaconda version of the distribution in question -
	thus, the locals object can't be used before the 'anaconda-
	version' cvar is set
	[8b41a75c6847]

2007-09-24  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] Summary: Restructured run secitons of default_theme, config,
	logos, and release events so that write_metadata is called when the
	events are enabled. This prevents disabled events from running
	every time.
	[0f517a120559]

2007-09-23  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py:
	[svn] Summary: Fine tuned the provides, requires relationship
	between manifest and iso from 'manifest-changed' to 'manifest-file',
	since the file is actually what is used by the iso-sets event.
	[0e24d66a39e1]

	* lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] Summary: Cleaned up some provides and requires statements.
	Modified localrepo to create its 'packages' files during the run
	function (so they are handled by test_diffs and remove_output Event
	functions)

	rpms/lib.py
	* listed 'custom-rpms', 'custom-srpms' and 'custom-rpms-info' control
	variables as provides

	rpms/localrepo.py
	* listed 'custom-rpms', 'custom-srpms' and 'custom-rpms-info' as
	requires
	* listed 'repos', 'source-repos', 'included-packages' and 'excluded-
	packages' as provides
	* moved packages creation to run function

	rpms/release.py
	* listed 'input-repos' rather than 'repos' as requires (to eliminate
	circular dependency with localrepo; release.py needs to locate
	gpgkeys and create yum config for input-repos (the ones specified in
	the distro.conf file), but not for the localrepo

	repos.py
	* added a separate 'input-repos' provide which release.py uses as a
	requirement.
	[d53f88292cbc]

	* lib/dimsbuild/modules/pkglist.py:
	[svn] pkglist.py
	* added depsolve folder to pkglist output
	[ab098167dd52]

	* lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/repo.py:
	[svn] Summary: Eliminated separate repomd and repo-content events
	for repos and sources. Now, in their setup functions, the 'repos'
	and 'source-repos' events call readRepoData which downloads a repomd
	file to a temp folder, reads the contents, and deletes the file.
	The downside of this approach is that the repomd files are
	downloaded twice. It's a reasonable tradeoff; the files are small
	and the separate event just to download them is overkill.
	[021cf5c765b0]

2007-09-21  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/repos.py:
	[svn] repos.py
	* removed REPOS meta event
	* eliminated shared repos folder, repos folder is now owned
	exclusively by the repos-content event
	* renamed repomd event to repos-setup and repo-content to repos-
	content (similar naming change coming to source repo events shortly)
	[43f38f535642]

	* lib/dimsbuild/modules/comps.py:
	[svn] comps.py
	* changed requires from local-repodata to repos
	[2be42126fb86]

	* lib/dimsbuild/modules/pkglist.py:
	[svn] pkglist.py
	* added error function which removes .depsolve folder so that it won't
	be left in an inconsistent state
	* changed requires from local-repodata to repos, since the actual
	requirement is for the repos cvar
	[8cbc5b17bbc0]

2007-09-21  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py, lib/dimsbuild/validate.py,
	share/dimsbuild/schemas/distro.conf/logos.rng:
	[svn] * dimsbuild/modules:
	- added the <installer/> and <rpms/> elements back into the config
	file
	- renamed 'installer-logos' to 'logos' (which is what it used to be).
	Also, fixed the schema to reflect this change.
	[6f5b92975e79]

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/rpms/lib.py:
	[svn] * dimsbuild/modules/rpms/lib.py:
	- in the distro.dat, keeping track of the pva corresponding to the
	RPMs. This way the distro.dat can keep track of data for multiple
	builds whose config files are in the same folder.
	[ea51c5195a6e]

2007-09-21  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/repo.py:
	[svn] * dimsbuild/modules/repos.py:
	- instead of the Repo object keeping having individual attributes for
	primaryfile, groupfile, filelists, etc. it has a single attribute
	which is a dictionary. The key to the dictionary is type of file
	('primary', 'primary_db', 'filelists', 'filelists_db' etc.) and
	the value is the basename of the file it is pointing to.
	- in yum (version ~= 3.2.5-3) it seems to be the case that if there is
	a primary.sqlite.bz2 file specified in the repomd.file it needs that
	file to be there in the repodata and doesn't fallback to the
	primary.xml.gz if it is not there.

	* dimsbuild/modules/{repos,comps,sources}.py:
	- modified to reflect the changes in the Repo class.
	[33d5581dce65]

	* lib/dimsbuild/modules/sources.py:
	[svn] sources.py
	* moved write_metadata() from apply to run functions to correct events
	so they don't run every time
	[83c0671abbcd]

2007-09-20  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/logging.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/software/createrepo.py,
	lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py, lib/dimsbuild/splittree.py,
	lib/dimsbuild/validate.py:
	[svn] Summary: Logging updates - separated log level from
	formatting; events are now expected to format their output how then
	want before calling log functions. The logging module defines a few
	standardized formatting functions for this purpose.

	As a result of this change, many log messages had their level and/or
	format changed.

	dimsbuild/lib/dimsbuild/event/fileio.py
	 * remove_output() no longer sorts on file basename, but entire
	filename dimsbuild/lib/dimsbuild/splittree.py
	 * fixed a bug caused in split_rpms() when an rpm is linked more than
	once into the output tree (not entirely sure why this hasn't
	appeared until now) dimsbuild/lib/dimsbuild/callback.py
	 * removed logging variables and classes; these are moved to logging.py
	 * FilesCallback has a new attribute, relpath
	 * instead of printing file basenames on deleting files and
	directories, FilesCallback now prints the relative path from
	relpath to the file as a means of better file differentiation
	dimsbuild/lib/dimsbuild/main.py
	 * errlog moved to BuildLogger dimsbuild/lib/dimsbuild/logging.py
	 * initial commit; module related to logging features of dimsbuild
	[ebdcc4245211]

2007-09-20  uprakash  <uprakash>

	* lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/modules/sources.py:
	- the 'sources' task now has three events associated with it. One
	event downloads and reads the repomd.xml and sets up the Repo
	objects. The second event downloads all the files referred to in
	the repomd.xml and reads the primary.xml.gz. The third event
	downloads all the needed source rpms.

	* dimsbuild/modules/repos.py:
	- fixed a typo

	* dimsbuild/modules/rpms/localrepo.py:
	- changed the log message displayed when the local rpms and srpms are
	being copied.
	[12b78bed0c14]

2007-09-20  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/comps.py:
	[svn] comps.py
	* No longer creating a distro-specific group
	* Instead, included packages (from config or cvars) are added to the
	'core' group
	* This addresses an area of potential user confusion. Specifically,
	since the distro-specific group was created quietly in the
	background, the user would not be aware of the group name or even
	that it exists. This is problematic for kickstart installs, where
	all groups must be listed explicitly.
	* A side effect of this change is that in a non-kickstart install for
	a distribution containing only the core and base groups, the "task
	selection" screen shows an empty box for "Select the software to be
	installed on your system". This is because anaconda suppresses the
	"Default" and "Everythign" checkboxes if the only contained groups
	are core and base.
	* Lastly, added 'fullname', which is used in the distro-specific
	category description as variable handler data
	[490d2b590c37]

	* lib/dimsbuild/modules/software/createrepo.py:
	[svn] createrepo.py
	* added cvar['comps-file'] as input handler data to fix a bug where
	createrepo wasn't running when the comps file changed
	[32a6167c939d]

2007-09-19  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/publish.py:
	[svn] Summary: Changes to compose.py and publish.py to get publish
	working on subsequent runs (publish was using difftest but only
	testing for changes to the PUBLISH_DIR variable; thus it was only
	being run on
	--clean publish, --clean ALL, or firstrun)

	compose.py
	* exposes composed-tree cvar

	publish.py
	* uses fileio functions to sync from composed tree to publish dir
	[bfb93c2fe39a]

	* lib/dimsbuild/modules/software/gpgsign.py:
	[svn] gpgsign.py
	* fixed bug with conversion of gpgsign-public-key and gpgsign-private-
	key cvars to path elements in the case when no keys were specified
	in config
	[60261309a848]

	* lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/software/createrepo.py:
	[svn] Summary: Added product, fullname, and base-vars to difftest
	data for events that use these variables. This allows (admittedly
	high-end-user) scenarios such as changing the product config element
	and renaming an existing cache folder, to avoid recopying rpms from
	the cache.
	[f3ec9609d879]

	* lib/dimsbuild/modules/software/gpgsign.py:
	[svn] gpgsign.py
	* added conditionally_comes_after gpgcheck
	* moved validate function from gpgsign to gpgsign-setup event
	[4cc1f788a52e]

2007-09-19  dmusgrave  <dmusgrave>

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/software/createrepo.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py:
	[svn] dimsbuild/lib/dimsbuild/modules/init.py
	 * 'MAIN' event no longer requires 'init'
	 * 'MAIN' event now conditionally-comes-after 'init'
	dimsbuild/lib/dimsbuild/modules/software/*
	 * whitespace, tabs
	dimsbuild/lib/dimsbuild/modules/installer/product.py
	 * 'product-image' event no longer conditionally-requires 'logos'
	 * 'product-image' event now conditionally-comes-after 'logos'
	dimsbuild/lib/dimsbuild/modules/installer/release.py
	 * 'release-files' event no longer conditionally-requires 'gpgsign'
	 * 'release-files' event now conditionally-comes-after 'gpgsign'
	dimsbuild/lib/dimsbuild/modules/installer/logos.py
	 * 'installer-logos' event no longer conditionally-requires 'gpgsign'
	 * 'installer-logos' event now conditionally-comes-after 'gpgsign'
	dimsbuild/lib/dimsbuild/modules/installer/updates.py
	 * 'updates-image' event no longer conditionally-requires 'installer-
	logos'
	 * 'updates-image' event now conditionally-comes-after 'installer-
	logos' dimsbuild/lib/dimsbuild/modules/autoclean.py
	 * 'autoclean' event now comes-before 'MAIN'
	dimsbuild/lib/dimsbuild/modules/comps.py
	 * 'comps' event no longer conditionally-requires 'RPMS'
	 * 'comps' event now conditionally-comes-after 'RPMS'
	[59e31eae29d0]

2007-09-19  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/release-rpm.rng:
	[svn] added eula element in the release-rpm schema file
	[70277a46b4e7]

	* lib/dimsbuild/event/validate.py, lib/dimsbuild/main.py,
	lib/dimsbuild/validate.py:
	[svn] * dimsbuild/lib/validate.py:
	- moved validate.py out of the event folder.
	[9fea213a111b]

	* bin/dimsbuild, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/validate.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/validate.py,
	share/dimsbuild/schemas/dimsbuild.rng:
	[svn] * dimsbuild/trunk/share/schemas/dimsbuild.rng:
	- made the schema-version attribute optional.

	* dimsbuild/trunk/lib/event/validate.py:
	- added MainConfigValidator and ConfigValidator classes to validate
	dimsbuild.conf and distro.conf respectively. This file will move
	one folder up in a (near-)future commit.

	* dimsbuild/trunk/lib/event/__init__.py:
	- the Event class doesn't extend ValidateMixin anymore, instead in
	main.py Event gets the MainConfigValidator() and ConfigValidator()
	tacked on to it.

	* dimsbuild/trunk/bin/main.py:
	- added --no-validate option
	- renamed --validate option --validate-only

	* dimsbuild/trunk/lib/main.py:
	- added support for --no-validate and --validate-only options
	- adding MainConfigValidator (Event.mcvalidator) and ConfigValidator
	(Event.validator) objects to Event class.

	* dimsbuild/trunk/lib/modules/*:
	- in the validate() functions of the event classes, using
	self.validator.validate() instead of self._validate().
	[ca4109fa213d]

2007-09-19  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software/createrepo.py:
	[svn] createrepo.py
	* fixed bug where contents of repodata folder were being listed in the
	'rpms' cvar
	* removed unnecessary error function
	[78fb7eec87d4]

	* lib/dimsbuild/modules/software/__init__.py:
	[svn] __init__.py
	* changed name of module from software to download, see previous
	commit
	[66e7afb13406]

	* lib/dimsbuild/modules/software/download.py,
	lib/dimsbuild/modules/software/software.py:
	[svn] Summary: Renamed software.py to download.py; svn required this
	in a separate step.

	Note: Logging for download, gpgsign, and createrepo events is still
	a work in progress. For example, at present if you have both
	checking and signing enabled you will see the list of rpms fly by a
	total of 4 times. We should be able to collapse this to three:
	downloading, checking, signing.
	[31bce3185954]

2007-09-19  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py:
	[svn] dimsbuild/lib/dimsbuild/modules/installer/release.py
	 * fixed typo in xpath expression
	[90977495d018]

2007-09-19  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software/createrepo.py:
	[svn] (continuing from previous partial commit) Summary: Separated
	software event into three events: download, gpgcheck, and gpgsign.
	The primary benefit is that if checking or signing fail, the the
	events can correctly calculate newsign and newcheck vars on
	subsequent runs without needing to clear downloaded rpms from the
	builddata folder and start again. Created software module that
	contains these three events, plus the createrepo event. Combined
	gpgsign-setup and gpgsign events into a single file. Moved gpgsign
	homedir creation, as well as config validation and key download,
	from gpg-setup to gpgsign event. The gpg-setup event simply sets
	cvars for use by release-rpm and gpgsign events.
	[8ba3bcf7dfd4]

	* lib/dimsbuild/modules/gpgsign.py, lib/dimsbuild/modules/software.py,
	lib/dimsbuild/modules/software/__init__.py,
	lib/dimsbuild/modules/software/gpgcheck.py,
	lib/dimsbuild/modules/software/gpgsign.py,
	lib/dimsbuild/modules/software/software.py:
	[svn] Summary: Separated software event into three events: download,
	gpgcheck, and gpgsign. The primary benefit is that if checking or
	signing fail, the the events can correctly calculate newsign and
	newcheck vars on subsequent runs without needing to clear downloaded
	rpms from the builddata folder and start again. Created software
	module that contains these three events,
	[2fa2f4d9af9d]

2007-09-18  uprakash  <uprakash>

	* lib/dimsbuild/event/validate.py, lib/dimsbuild/modules/gpgsign.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/validate.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/diskboot.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] * dimsbuild:
	- added top-level element validation
	- fixed schemas to reflect the new top-level element names
	- changed some of the events' IDs
	- added validate() functions to diskboot-image, isolinux and publish
	event classes
	[6698631ed78f]

2007-09-18  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/autoclean.py:
	[svn] dimsbuild/lib/dimsbuild/modules/autoclean.py
	 * autoclean now automatically removes folders in the metadata
	directory that are not going to be used in the current build
	cycle. For example, if the rpms module is disabled on subsequent
	builds after the first, autoclean will automatically remove the
	associated builddata folders that were created the previous run
	[8a0c20a1a848]

2007-09-18  uprakash  <uprakash>

	* lib/dimsbuild/modules/validate.py:
	[svn] changed a reference to HookExit to EventExit
	[fa7d3d6e0c0a]

2007-09-18  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] lib.py
	* moving setup_diff earlier in setup function
	[48266460d70a]

	* lib/dimsbuild/modules/rpms/localrepo.py:
	[svn] localrepo.py
	* only add repo object for localrepo if rpms exist
	[d512603e1947]

2007-09-18  dmusgrave  <dmusgrave>

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py:
	[svn] dimsbuild/lib/dimsbuild/modules/autoclean.py
	 * adjusted methods slightly; functionality the same
	dimsbuild/lib/dimsbuild/main.py
	 * added AllEvent, the top-level event for all dimsbuild events.
	Changing the version of this event causes all children (in this
	case, all events) to run.
	[570f1f330b9d]

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/event/validate.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/autoclean.py,
	lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/gpgsign.py,
	lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/validate.py:
	[svn] Summary: Event function renaming - the five API functions
	_run, _clean, _check, _setup, and _apply become run, clean, check,
	setup, and apply, respectively. Also, many events have had their
	helper functions prefixed with a '_' to further help the
	distinction.
	[96e340fe062d]

2007-09-18  uprakash  <uprakash>

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] * dims-common/trunk/lib/xmltree.py:
	- xmltree.py doesn't care about whitespace anymore. Reverted the
	XmlTreeElement._str() function to be how it used to before we were
	modifying the distro.conf file, which is, every indent level is 2
	more spaces than the previous indent level.

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- the RPMS events do not modify the distro.conf file anymore but
	instead write out the release numbers to a 'distro.dat' file. We
	could change this file's name if we don't like it.
	[fd54ca821461]

2007-09-18  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/autoclean.py, lib/dimsbuild/modules/clean.py:
	[svn] dimsbuild/lib/dimsbuild/modules/clean.py
	 * renamed to autoclean.py
	 * this event now only handles auto-forcing events when their version
	changes
	[3594078ed346]

	* lib/dimsbuild/event/diff.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/clean.py,
	lib/dimsbuild/modules/compose.py, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/manifest.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] Summary: Reverted part of previous changes - no longer builds
	inside temporary directory, but instead back in cache. Output is
	still routed to individual metadata folders and recomposed at the
	end, however. This solves an issue with the build process halting
	early and recomputing its results.

	Details: dimsbuild/lib/dimsbuild/event/diff.py
	 * no longer links all former outputs to /tmp/dimsbuild/build
	dimsbuild/lib/dimsbuild/event/fileio.py
	 * added exists() clause to sync_input() so that it downloads input
	files when either the input has changed or the output doesn't
	exist dimsbuild/lib/dimsbuild/modules/rpms/release.py
	 * 'release-rpm' event no longer requires 'gpgsign-public-key'
	 * 'release-rpm' event now conditionally-requires 'gpgsign-public-key'
	dimsbuild/lib/dimsbuild/modules/compose.py
	 * removed MDSetupEvent and CacheOutputEvent
	 * moved ComposeEvent.composed_tree to the cache
	 * ComposeEvent no longer sets a 'composed-tree' cvar; this provide
	merely indicates that the tree has been composed at
	Event.DISTRO_DIR/'output' dimsbuild/lib/dimsbuild/modules/clean.py
	 * removed extra event forcing from clean event
	dimsbuild/lib/dimsbuild/main.py
	 * removed Event.BUILD_DIR, adjusted Event.DISTRO_DIR to be rooted in
	Event.CACHE_DIR instead of Event.TEMP_DIR
	[4608d29d0a1a]

2007-09-17  uprakash  <uprakash>

	* lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dimsbuild/modules/rpms/:
	- now works with the new API changes

	* dimsbuild/modules/publish.py:
	- the repofile event looks at a hard-coded value to figure out where
	to output the .repo file to. Changed this value for now. TODO:
	change this to a control variable.
	[a4291674297d]

2007-09-17  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/installer/release.py:
	[svn] release.py
	* narrowed scope of requires from 'software' to 'rpms-directory'
	[96add99f0ff3]

	* lib/dimsbuild/modules/comps.py:
	[svn] comps.py
	* removed debug print statement
	[c3227f8b298a]

2007-09-17  uprakash  <uprakash>

	* lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/rpms/lib.py:
	[svn] * dimsbuild/modules/iso.py:
	- defining self.isodir after the return statement causes an
	AttributeError in the case where iso is disabled.
	[514f4a019aeb]

	* lib/dimsbuild/modules/installer/isolinux.py:
	[svn] * dimsbuild/modules/installer/isolinux.py:
	- removed an extra single quote.
	[c39fc37f55e8]

2007-09-17  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event/__init__.py, lib/dimsbuild/event/diff.py,
	lib/dimsbuild/event/fileio.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/compose.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/gpgsign.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	share/dimsbuild/schemas/distro.conf/main.rng:
	[svn] Summary: Building is now performed in a temporary directory
	(currently '/tmp/dimsbuild/build'), then cached to
	'/var/cache/dimsbuild' after it completes. The Event superclass now
	dynamically modifies the values of SOFTWARE_STORE and OUTPUT_DIR
	depending on the eventid, meaning that all events now generate
	output in a subfolder of METADATA_DIR. A new event, compose, takes
	this output and 'composes' it into a common output tree that can be
	cached and published.

	Event superclass mixin now defines _clean() and _check() behavior
	defaults; subclasses can skip implementing these if they do not need
	anything beyond the default behavior

	Open issues:
	 * the concept of 'caching' versus 'composing' should be separated;
	they are different ideas
	 * METADATA_DIR should be modified to be consistent with the behavior
	of SOFTWARE_STORE and OUTPUT_DIR
	 * something needs to be put into place for events like iso and
	manifest, which need a normal build tree but still need to store
	output inside their own subfolder of METADATA_DIR
	 * I'd really rather name _clean, _run, _check, etc without the leading
	underscore, and name other event functions with it
	 * RPMS events are not converted to new model (Uday)
	 * gpg signing is problematic due to two events playing with one output
	folder (Kay)

	dimsbuild/share/dimsbuild/schemas/distro.conf/main.rng
	 * made 'default' attribute on 'modules' element optional
	 * added <text/> node for module elements
	dimsbuild/lib/dimsbuild/event/diff.py
	 * added DiffMixin._clean(), DiffMixin._check(), some default
	implementations of these functions for events that require diff
	functionality
	 * when an OutputHandler is added to the _diff_handlers dictionary,
	DiffMixin now automatically attempts to link all the output from
	the previous run to the output folder so that normal diff()ing
	can occur. Files that do not exist are ignored
	 * modified default behavior of test_diffs() so that events that do not
	make use of diff()ing can still call this function without
	resulting in an error dimsbuild/lib/dimsbuild/event/__init__.py
	 * added mddir, mdfile properties, which are dynamically-computed
	locations in METADATA_DIR for storing metadata
	 * redefined SOFTWARE_STORE, OUTPUT_DIR from their static values to a
	dynamic directory location in METADATA_DIR, as above
	 * added default behavior for _clean()
	dimsbuild/lib/dimsbuild/event/fileio.py
	 * added default behavior for _clean()
	 * modified default behavior of remove_output() so that events without
	an output diff handler can still call remove_output()
	dimsbuild/lib/dimsbuild/modules/repos.py
	 * added missing PROPERTY_META onto the REPOS meta event
	dimsbuild/lib/dimsbuild/modules/iso.py
	 * removed IsoMixin; wasn't really necessary
	 * added IsoSetEvent._apply(), which copies the generated iso sets from
	the metadata directory into the composed tree
	dimsbuild/lib/dimsbuild/modules/software.py
	 * moved 'gpg-*' requirements to conditional requirements so that gpg
	signing can be disabled, if desired
	dimsbuild/lib/dimsbuild/modules/publish.py
	 * (temporarily?) removed input and output handlers for publishing;
	simply rm()ing and cp(link=True)ing works just fine, and removes
	a whole host of complexities
	dimsbuild/lib/dimsbuild/modules/installer/bootiso.py
	 * converted to use FileIOMixin functions
	dimsbuild/lib/dimsbuild/modules/installer/lib.py
	 * removed ImageHandler; methods merged into ImageModifyMixin
	dimsbuild/lib/dimsbuild/modules/clean.py
	 * changed terminology from 'hook' to 'event'
	 * removed _clean_all; clean is no longer responsible for doing
	anything other than automatic event version forcing
	dimsbuild/lib/dimsbuild/main.py
	 * removed default definitions of SOFTWARE_STORE and OUTPUT_DIR - these
	are now autocomputed by the events at runtime

	dimsbuild/lib/dimsbuild/modules/compose.py
	 * added new events for 'composing' a tree from individual outputs
	contained inside the metadata folder
	 * also currently contains an output cacher, which stores the output in
	a cache directory
	[640b5363abd5]

2007-09-17  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/gpgsign.py:
	[svn] gpgsign.py
	* renamed call to function - self.clean -> self._clean
	[d9af3a6da963]

	* lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py:
	[svn] updates.py, xen.py
	* removed validate_image from check function; validation in the run
	function is sufficient
	[9a05c85eadc5]

	* lib/dimsbuild/modules/comps.py:
	[svn] comps.py
	* modified attribute name from "repo" to "repoid" to align with schema
	[917a0aa03e9a]

2007-09-14  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/installer/diskboot.py:
	[svn] diskboot.py
	* oops, meant to remove a comment prior to last commit
	[0538c638df18]

	* lib/dimsbuild/modules/installer/diskboot.py:
	[svn] diskboot.py
	* changed remove_output() to remove_output(all=True); this forces the
	event to start with the original diskboot image each time, avoiding
	issues like the bug where boot-args specified in config were being
	appended to syslinux.cfg on each run.
	* removed unnecessary conditionally-requires on isolinux-changed; the
	initrd-file is all that diskboot needs from isolinux and diskboot
	tracks it separately
	* removed test for valid_image() in check function; this is
	unnecessary since the image was validated at creation time and
	testdiffs verifies the file size/timestamp
	[e7e6a261643d]

2007-09-13  kwilliams  <kwilliams>

	* lib/dimsbuild/event/fileio.py:
	[svn] fileio.py
	* sync_input uses ['input'].diffdict to determine which items to sync
	[9d559d7b94d1]

	* lib/dimsbuild/modules/software.py:
	[svn] software.py
	* fixed issue where outdated output files were not being removed by
	moving remove_output() ahead of sync_input(), as it should have been
	all along...
	[37cc395515c5]

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] rpms/lib.py
	* fixed an issue where the output rpm filenames were incorrectly
	calculated by moving output data population from the setup function
	to the run function (by that time the release variable has been
	incremented)
	[4abe99dc0604]

	* lib/dimsbuild/modules/publish.py:
	[svn] publish.py
	* modified repo-file to track changes in product variable
	[44c85ddf905d]

2007-09-13  dmusgrave  <dmusgrave>

	* lib/dimsbuild/diff.py, lib/dimsbuild/event/__init__.py,
	lib/dimsbuild/event/diff.py, lib/dimsbuild/event/fileio.py,
	lib/dimsbuild/event/validate.py, lib/dimsbuild/fileio.py,
	lib/dimsbuild/validate.py:
	[svn] dimsbuild
	 * done renaming and moving event files for now - this revision should
	be safe for checkout and use
	[88fc105099e4]

	* bin/dimsbuild, lib/dimsbuild/callback.py, lib/dimsbuild/diff.py,
	lib/dimsbuild/difftest.py, lib/dimsbuild/event.py,
	lib/dimsbuild/event/__init__.py, lib/dimsbuild/fileio.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/locals.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/__init__.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/gpgsign.py,
	lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/lib.py,
	lib/dimsbuild/modules/manifest.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/locals.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/rpms/rpmlocals.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/validate.py, lib/dimsbuild/repo.py,
	lib/dimsbuild/resolve.py, lib/dimsbuild/validate.py:
	[svn] dimsbuild
	 * merged with revision 2144 of dem-event-superclass
	 * this revision WILL NOT WORK, so don't try
	[6cc1c8f3febc]

2007-09-12  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] lib.py
	* fixed dest path for files from rpms-src folder
	[4a12b623f505]

	* lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/repos.py:
	[svn] repos.py
	* split repos event into REPOS parent, repomd and repo-content
	* REPOS parent creates builddata repos folder (local-repodata)
	* repomd downloads and reads repomd.xml files
	* repo-content downloads comps, primary, filelist, and other xml
	files; reads primary.xmls; and sets anaconda-version

	pkglist.py
	* modified yum.conf generation to include repodata_path
	[1cb6024b348b]

	* lib/dimsbuild/modules/iso.py:
	[svn] iso.py
	* removed extraneous print statement
	[c9ba52e1d7c4]

2007-09-11  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	share/dimsbuild/schemas/distro.conf/diskboot.rng,
	share/dimsbuild/schemas/distro.conf/isolinux.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] * dimsbuild/schemas/distro.conf/xen.rng:
	- removed extraneous items and using lib.rng

	* dimsbuild/schemas/distro.conf/{diskboot,isolinux}.rng:
	- initial commit of these schema files that have definitions for the
	<boot-args/> and the <path/> elements.

	* dimsbuild/modules/installer/{isolinux,diskboot}.py:
	- added hooks on the validate event to validate the <diskboot.img> and
	<isolinux> elements in distro.conf.
	[9e34f019e131]

	* lib/dimsbuild/modules/gpgsign.py, lib/dimsbuild/modules/software.py:
	[svn] * dims-common/trunk/lib/dims/mkrpm:
	- code cleanup of the module following the conventions found in other
	dims-common modules.
	- changed the name of factory functions to have the first letter
	capitalized.
	- might break rpmsign.py in smaller files in the future because it is
	getting to be a big file.

	* dimsbuild/trunk/lib/dimsbuild/modules/{gpgsign,software}.py:
	- changed the name of functions to the new ones in dims.mkrpm.
	[932dce6070d3]

2007-09-10  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/lib.py:
	[svn] * modules/installer/lib.py:
	- the files in /path/to/builddata/images-src/image/ were not being
	written to the image. Fixed.
	[b50ac9012b14]

2007-09-10  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software.py:
	[svn] software.py
	* misc cleanup/organization
	* software event caches, gpgchecks, outputs and signs
	* createrepo event only runs createrepo, and only when output rpms
	change (thus, software validation can be enabled,disabled w/out
	causing createrepo to run)
	* note checking currently happens on all rpms (not just new ones);
	this will be addressed post event infrastructure changes
	[16eb825ac4c0]

2007-09-10  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event.py:
	[svn] dimsbuild/lib/dimsbuild/event.py
	 * updated to work with modifications to lib's tree.py
	[943754fcf9b7]

2007-09-07  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/software.py:
	[svn] Summary: Tightened up requires/difftest for pkgorder event.
	Previously pkgorder required/checked the pkglist cvar. Now it
	requires/tests the contents of the repodata-directory, obtained from
	a cvar set by the software createrepo event.

	software.py
	* createrepo event now provides repodata-directory
	* SOFTWARE meta event also provides repodata-directory

	iso.py
	* removed pkglist requires; added repodata-directory requires
	* parallel changes to self.DATA population
	* minor change to use pva as the repoid in the temp YUMCONF file
	[2c90f4748b0c]

	* lib/dimsbuild/modules/installer/diskboot.py:
	[svn] diskboot.py
	* added config to self.DATA
	[2c8aef8194c6]

2007-09-07  uprakash  <uprakash>

	* lib/dimsbuild/interface.py:
	[svn] * lib/dimsbuild/interface.py:
	- backed out changes to EventInterface._setup_sync() because the
	directory to which the files are to be downloaded/copied might
	have files from other events. Therefore, the event can't own the
	entire directory.
	[4836a96ad620]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] * lib/dimsbuild/difftest.py:
	- deleted the InputHandler.filelists attribute because it used to be a
	cache of the result returned by {spider,osutils}.find() but is no
	longer needed in the new scheme of things.

	* lib/dimsbuild/interface.py:
	- improved EventInterface._setup_sync() that doesn't need to call
	findpaths() on each of the Path objects. This is because we needed
	to call {spider,osutils}.find() before to figure out where each of
	the input files are going to be downloaded/copied to.

	* lib/dimsbuild/modules/software.py:
	- some optimization: 1. calling HttpPath._update_stat() only if the
	RPM is in the package list, 2. setting the 'st_mode' attribute on
	the Path object's stat to identify it as a regular file. This way
	we ensure that no remote calls are made.

	* lib/dimsbuild/modules/sources.py:
	- changes similar to the ones in software.py
	[0ced64ca7300]

2007-09-06  kwilliams  <kwilliams>

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/gpgsign.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] Summary: Additional round of changes related to gpgkey
	validation and signing.

	software.py
	* created new SOFTWARE meta event
	* split prior software event into 'download' and 'createrepo' events;
	'download' handles downloading and validating rpms; 'createrepo'
	handles signing rpms and running createrepo
	* added error functions to remove output folders

	repos.py
	* removed repo.gpgkey downloading and homedir creation, this is now
	handled by the software download event

	gpgsign.py
	* removed gpgsign-keys-changed control variable

	interface.py
	* changed var_changed_from_true function to var_changed_from_*value*
	to allow testing for any prior value
	* removed testing for the existence of a file prior to adding it to
	the sync items list; this is needed due to recent and future changes
	our output removal strategy.
	* changed sync_input and list_output to return sorted values

	iso.py, sources.py
	* updated to use new var_changed_from_value function
	[354cb80d9b45]

	* lib/dimsbuild/modules/pkglist.py:
	[svn] pkglist.py
	* fixed variable name rddirs_changed -> rddir_changed
	* this will make pkglist notice changes in the localrepo folder again
	[c46be3c51c4a]

2007-09-06  uprakash  <uprakash>

	* lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/modules/{software,sources}.py:
	- before calling EventInterface.setup_sync() creating Path objects
	for each of the RPMs that are to be downloaded and setting their
	st_size and st_mtime (these two values are read in from the
	primary.xml.gz)
	- this way no remote calls are made to get the stats of these RPMs
	[1a79a05cb882]

2007-09-06  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/lib.py:
	[svn] config.py
	* fixed variable name self.id -> self.name

	lib.py
	* removed debug parameter
	[6ad37b52da32]

2007-09-05  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng:
	[svn] * dimsbuild/schemas/distro.conf: added 'release' elements to
	all the rpm schema files.
	[2e1ba217236e]

	* lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/localrepo.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/rpms/rpmlocals.py:
	[svn] * dimsbuild/modules/rpms:
	- code cleanup. Things have changed a lot since the RPMS events were
	first written. This commit makes (better) use of some of the
	functions available.
	- there is no RpmsHook.post() function anymore. Instead a new event
	'localrepo' has been added that does what the post() used to do.
	This is a step closer to getting rid of all the pre() and post()
	functions from all the hooks.
	[d8c2f168f319]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/difftest.py:
	- also catching XMLSyntaxError when the file is being read

	* dimsbuild/modules/sources.py:
	- fixed a comment
	[1cb4eaa1e3b2]

	* lib/dimsbuild/modules/init.py:
	[svn] * dimsbuild/modules/init.py: changed MainHook (a hook on the
	MAIN event) to InitHook (a hook on the init event). This is
	because the directories that the MainHook used to create needed to
	be created before the clean event.
	[3ca8bac5c369]

2007-09-05  dmusgrave  <dmusgrave>

	* lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/software.py,
	lib/dimsbuild/modules/sources.py:
	[svn] dimsbuild/lib/dimsbuild/interface.py
	 * removed EventInterface.INPUT_STORE and EventInterface.CACHE_DIR -
	both are unused dimsbuild/lib/dimsbuild/modules/iso.py
	 * changed hook id of IsoHook from 'iso' to 'iso.ISO'
	dimsbuild/lib/dimsbuild/modules/init.py
	 * added MainHook, which is responsible for making TEMP_DIR,
	SOFTWARE_STORE, and METADATA_DIR directories
	dimsbuild/lib/dimsbuild/modules/installer/release.py
	 * changed lists into sets, where appropriate
	dimsbuild/lib/dimsbuild/modules/clean.py
	 * modified code for recreating TEMP_DIR, SOFTWARE_STORE, and
	METADATA_DIR, as the _init_directories() interface function no
	longer exists dimsbuild/lib/dimsbuild/modules/sources.py
	 * changed lists into sets, where appropriate
	dimsbuild/lib/dimsbuild/main.py
	 * renamed Builder.IMPORT_DIRS to Builder.import_dirs
	 * removed Builder.INPUT_STORE; no longer used
	 * changed lists into sets, where appropriate
	 * removed Builder._init_directories()
	[c893e3c438ac]

2007-09-04  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/rpms/release.py:
	[svn] release.py
	* backing out prior change, dest folders created automatically for
	sync'd files
	[6ec7b37118e3]

	* bin/dimsbuild:
	[svn] dimsbuild (binary)
	* removed 'buildgroup' option parser group; no longer necessary after
	removal of --with-comps and --with-pkglist command line options
	[88fcd52c5d88]

	* lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/modules/software.py
	* replaced 'new-rpms' control variable with 'rpms' control variable,
	the latter being a complete list of rpms included in the
	distribution; consuming events (i.e. iso-sets) use the new variable
	to accomplish internal calculations as to when rpms have changed;
	the latter approach avoids false negatives by consuming events when
	program flow is interrupted (i.e. CTRL+C)
	* added id='rpms' for sync-related operations; for resiliance if
	additional sync items added in future

	dimsbuild/trunk/lib/dimsbuild/modules/sources.py
	* replaced 'input-source-repos-changed' control variable with 'srpms'
	control variable.
	* use new rpms control variable to determine when sources event should
	run

	dimsbuild/trunk/lib/dimsbuild/modules/iso.py
	* added conditional requires for 'srpms' cvar
	* fixed up logic for calculating oldsets/newsets

	dimsbuild/trunk/lib/dimsbuild/modules/rpms/release.py
	* fixed up unrelated bug where the dest variable was not being set

	dimsbuild/trunk/lib/dimsbuild/modules/pkglist.py
	* variable name cleanup - renamed rm_dirs to rm_dir

	dimsbuild/trunk/lib/dimsbuild/modules/comps.py
	* now tracking groupfiles as input
	* minor code reorganization
	[25bb24061435]

2007-09-04  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/gpgsign.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py, lib/dimsbuild/splittree.py:
	[svn] Summary: EventInterface.setup_sync() now populates input and
	output handler structs itself; all event hooks modified so that they
	no longer do this themselves, unless required for some other reason.
	Furthermore, setup_sync() no longer accepts a list of (src, dst)
	tuples; instead, it takes a list of src items and a single dst for
	all of them. In the event that two or more sources need to go to
	multiple destinations, then setup_sync() needs to be called more
	than once with a different dst value each time.

	dimsbuild/lib/dimsbuild/splittree.py
	 * bug fix dimsbuild/lib/dimsbuild/callback.py
	 * renamed callback functions in FileCallback to be more consistent
	with other callback functions
	dimsbuild/lib/dimsbuild/interface.py
	 * modified setup_sync() signature; dst attribute is now the second arg
	 * setup_sync() now returns a list of inputs as well as a list of
	outputs
	 * _setup_sync() now appends output to the output struct automatically
	dimsbuild/lib/dimsbuild/modules/repos.py
	 * more consistent handling of 'homedir' concept
	dimsbuild/lib/dimsbuild/modules/sourcevars.py
	 * make use of id argument to setup_sync() to clearly identify the
	value to be used by the initrd_out variable
	dimsbuild/lib/dimsbuild/modules/pkglist.py
	 * make use of id argument to setup_sync() to clearly identify the
	value to be used by the pkgtlistfile variable
	dimsbuild/lib/dimsbuild/modules/comps.py
	 * make use of id argument to setup_sync() to clearly identify the
	value to be used by the comps_out variable
	dimsbuild/lib/dimsbuild/modules/sources.py
	 * bugfix in findpaths() expression
	 * variable rename to prevent masking of 'rpm' import
	[35b59679a041]

2007-08-31  kwilliams  <kwilliams>

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/meta.py:
	[svn] Summary: Removed repos-changed cvar and repo.changed property

	dimsbuild/trunk/lib/dimsbuild/modules/repos.py
	* no longer sets repos-changed cvar
	* no longer uses repos-changed cvar to determine whether to process
	repo.md and packages files in apply fn; the files are quick to read
	so we do it every time even though this may duplicate work from the
	run function

	dimsbuild/trunk/lib/dimsbuild/interface.py
	* removed self.changed property in the repo class

	dimsbuild/trunk/lib/dimsbuild/modules/rpms/meta.py
	* no longer sets repo.changed property
	* no longer sets repos-changed cvar
	[b240c1a5d47e]

	* lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/software.py,
	share/dimsbuild/schemas/distro.conf/pkglist.rng:
	[svn] Summary: Package list related changes. Primarily, removed
	check for repo-changed and instead monitor local repodata folders
	(provided by repos event) as input. In general, the latter approach
	is more robust. For example, if the user cancels program operation
	between the repos and pkglist events, the pkglist event will never
	receive a "repo-changed" notice; whereas if it tracks the repodata
	folders directly, test diffs will accurately report the change.
	Other changes listed below.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/pkglist.rng
	* removed path child element; consistent with user-provided pkgorder
	files, the pkglist file is specified directly within the parent
	element.

	dimsbuild/trunk/lib/dimsbuild/modules/software.py
	* removed cvars['pkglist-file'] as an input file
	* added cvars ['pkglist'] as an input variable

	dimsbuild/trunk/lib/dimsbuild/modules/pkglist.py
	* removed command line support for --with-pkglist
	* removed pkglist-changed and pkglist-file provides; remaining provide
	is pkglist (cvar)
	* removed conditional requires on repos-changed (discussed in summary)
	* moved pkglist related builddata files (.md, pkglist, .depsolve/)
	under single parent directory
	* reorganized copy/generate pkglist conditional code in setup and run
	functions to remove an indent level
	* calculate which depsolve folders to remove based on difftest data
	(rather than repo.changed propert on repo objects - todo consider
	removing repo.changed property)
	[b80430f2d550]

	* lib/dimsbuild/modules/comps.py:
	[svn] comps.py
	* moved calculation of groupfiles variable to setup function
	* added groupfiles variable to self.DATA['variables']
	* removed requirement on repos-changed cvar; tracking changes to
	groupfiles is more specific, avoids false positives
	[a52f315d6455]

	* docsrc/gpg.rng, docsrc/gpgsign.rng, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/gpgsign.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py,
	share/dimsbuild/schemas/distro.conf/gpg.rng,
	share/dimsbuild/schemas/distro.conf/gpgsign.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] Misc gpg signing and gpg validation changes.

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/lib.rng
	* allow one or more gpgkey children in a repo parent element

	dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/gpgsign.rng
	dimsbuild/trunk/docsrc/gpgsign.rng
	* renamed gpg.rng -> gpgsign.rng

	dimsbuild/trunk/lib/dimsbuild/interface.py
	* support for multiple gpgkey, include, and exclude values per repo
	* renamed repo.gpgkey -> repo.gpgkeys since there can be more than one
	* added homedir property for repo objects; value set by the repos
	event

	dimsbuild/trunk/lib/dimsbuild/modules/repos.py
	* creates gpg homedirs when gpgkeys change
	* create packages files only when primary xmls change
	* changed cvar name input-repos-changed -> repos-changed for symmetry
	with other cvars provided by the repo event

	dimsbuild/trunk/lib/dimsbuild/modules/rpms/release.py
	* removed "config: /distro/repos/repo/gpgkey" from self.DATA
	* added "variables: cvars[\'gpg-public-key\' to self.DATA
	* syncing gpg-public-key and eulapy files using interface sync
	functions

	dimsbuild/trunk/lib/dimsbuild/modules/rpms/lib.py
	* added log message when rpm events are cleaned
	* removed debug parameter on testdiffs

	dimsbuild/trunk/lib/dimsbuild/modules/gpgsign.py
	* renamed from gpg.py
	* cvars renamed as well

	dimsbuild/trunk/lib/dimsbuild/modules/software.py
	* laid groundwork for checking rpm signatures, checking not yet
	enabled, future commit
	* modified to reflect gpgsign cvar name changes

	dimsbuild/trunk/lib/dimsbuild/modules/publish.py
	* modified to reflect gpgsign cvar name changes

	dimsbuild/trunk/lib/dimsbuild/modules/pkglist.py;
	dimsbuild/trunk/lib/dimsbuild/modules/comps.py
	* modified to reflect repo-changed cvar name change
	[5fa01f644cfc]

2007-08-31  uprakash  <uprakash>

	* lib/dimsbuild/modules/rpms/meta.py:
	[svn] * dimsbuild/modules/rpms/meta.py: the Repo.split() function
	has been removed, not using it anymore.
	[79032bad7d8c]

2007-08-31  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/splittree.py:
	[svn] dimsbuild/lib/dimsbuild/splittree.py
	 * completely removed osutils; replaced du calls with getsize() calls
	[5e2e8fbf707c]

	* lib/dimsbuild/callback.py, lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/splittree.py:
	[svn] dimsbuild/lib/dimsbuild/*
	 * modified modules to take advantage of the newly-overriden __mod__
	function in path objects
	[8eed95234680]

	* lib/dimsbuild/callback.py, lib/dimsbuild/constants.py,
	lib/dimsbuild/difftest.py, lib/dimsbuild/event.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/loc.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/rpms/rpmlocals.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/validate.py, lib/dimsbuild/splittree.py:
	[svn] Summary: Updated dimsbuild to work with pps Path objects.
	Cleanup of many extra import statements. Updating of type checking
	to better perform with subclasses.

	dimsbuild/lib/dimsbuild/*
	 * cleaned up imports
	 * typechecking on strings now looks for subclasses; typechecking on
	lists now looks for '__iter__' attribute
	 * removed most usage of osutils; replaced by path objects
	dimsbuild/lib/dimsbuild/difftest.py
	 * removed getMetadata(), expandPaths(), getFileList(); replaced by
	Path.findpaths() dimsbuild/lib/dimsbuild/splittree.py
	 * renamed Timber.unified_tree to Timber.u_tree;
	Timber.unified_source_tree to Timber.u_src_tree;
	Timber.split_tree to Timber.s_tree
	 * osutils not completely replaced in this file; du() implementation in
	path objects is not complete dimsbuild/lib/dimsbuild/callback.py
	 * adjusted FilesCallback so that it doesn't actually perform any I/O
	operations dimsbuild/lib/dimsbuild/constants.py
	 * added RRM_REGEX, SRPM_REGEX, regular expressions which match RPMs
	and SRPMs, respectively dimsbuild/lib/dimsbuild/interface.py
	 * removed custom DiffTest handlers; dimsbuild now uses the defaults,
	as the customizations are no longer necessary
	 * one feature that is lost in this conversion is deletion of renamed
	files in subsequent dimsbuild runs. This will be fixed once the
	work on alternate build roots in completed
	dimsbuild/lib/dimsbuild/main.py
	 * fixed reading of distro-specific config for module and plugin
	imports
	[fa6d1f2470b8]

2007-08-29  uprakash  <uprakash>

	* lib/dimsbuild/main.py:
	[svn] * dimsbuild/main.py: added some RPMs to the list of RPMs that
	need to be checked for.
	[7a11239006ad]

2007-08-28  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/gpg.py, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/sources.py:
	[svn] More consistency and bug fixes to iso.py, gpg.py, and
	sources.py. Major change was to write metadata in *-disabled case to
	avoid entering run functions on subsequent runs.
	[42794396d239]

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/sources.py:
	[svn] Added new var_changed_from_true() interface function used by
	primarily by sources, iso, and (future) software, to determine when
	existing output and builddata should be cleaned because a feature
	(e.g. sources, iso, or gpgsign) has become disabled. This function
	should probably be generalized and combined with existing
	has_changed(). I'll look at this for a future commit. Fixed a few
	additional consistency and ui issues, and a few bugs along the way.

	interface.py
	* added var_changed_from_true()
	* removed getRepoData(), which previously sync'd repodata/ to a local
	folder and called readRepoData. Client events are now syncing via
	interface.sync and calling readRepoData directly.

	sources.py
	* changed 'source-include' cvar to 'sources-enabled' for parity with
	'iso-enabled', 'gpg-enabled", ...
	* source-repos and sources events now difftest on sources-enabled, so
	that run is called on changes. Consequently this allows
	write_metadata to move to the run function (where it should be :-)).
	* source-repos and sources events now clean prior output in the run
	function only when sources-enabled changes from true to false
	(tested using var_changed_from_true())
	* removed extraneous getRepoData function call from source-repos setup
	function. It was duplicating sync and readRepoData actions already
	occuring in the run function

	rpms/meta.py
	* added conditional requires for sources-enabled and source-repos
	cvars
	* removed conditional requires for rpm-source-files (no longer used?)

	iso.py
	* makes use of var_changed_from_true()
	* looks for sources-enabled (rather than source-include)
	* write_metadata moved to run function
	* newsets/oldsets now read from metadata (rather than reading config
	directly/finding splittree folders in the file system)
	* _delete_isotree() now removes both splittree builddata and iso
	output folders. Also, uses interface remove_output rather than
	osutils.rm (to get logging features)
	* tweaked splittree message log levels

	comps.py
	* removed unused CacheManager import
	[96a32773c1e6]

2007-08-27  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py:
	[svn] iso.py
	* added back checks for iso-enabled in run functions of pkgorder and
	iso-sets
	[d6a760bf916f]

	* lib/dimsbuild/modules/iso.py:
	[svn] iso.py
	* pkgorder and iso-sets run functions now only clean if iso-enabled
	changes from true to false
	[4ca573783d37]

	* lib/dimsbuild/modules/installer/logos.py:
	[svn] logos.py
	* oops, didn't mean to include logos.py in prior commit. Reverting.
	[e53f28ab6ac3]

	* docsrc/gpg.rng, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py,
	share/dimsbuild/schemas/distro.conf/gpg.rng:
	[svn] Modifications related to gpg key handling.

	schemas/distro.conf/gpg.rng
	* gpgsign enabled attribute is now optional

	docsrc/gpg.rng
	* now states the default value of gpgsign enabled attribute is true

	gpg.py
	* changed event id from gpg to gpg-setup
	* added missing cvars to event provides statement
	* added new gpg-keys-changed cvar used by software
	* made event modular
	* for better control and consistency, now use interface functions to
	download public and private keys (rather than letting rpmsign do
	this)
	* set passphrase if specified in configuration, otherwise let
	downstream events (namely software) prompt for it

	software.py
	* misc provides/requires cleanup
	* prompt for passphrase if cvar does not exist, and set cvar (thus
	software both requires and provides the passphrase cvar - dispatch
	dependency resolving handles this just fine - which is cool!)
	* Only discard existing rpms if gpg-sign state goes from enabled to
	disabled. Otherwise, simply resign all existing rpms.

	rpms/release.py
	* now requires and difftests on gpg-public-key cvar rather than
	/distro/gpgsign config
	[77ea4e5f56b5]

2007-08-27  uprakash  <uprakash>

	* lib/dimsbuild/modules/sources.py,
	share/dimsbuild/schemas/distro.conf/sources.rng:
	[svn] * dimsbuild/schemas/distro.conf/sources.rng: changed element
	name from 'source' to 'sources.'

	* dimsbuild/modules/sources.py:
	- changed event name from 'source' to 'sources' to be consistent
	- SourceRepoHook.srcrepos was being declared only if the sources was
	enabled in the config file, but in SourceRepoHook.apply() it was
	being set to a control variable even if sources was disabled,
	causing an AttributeError being raised. Fixed.
	[aaac72c905fb]

	* lib/dimsbuild/modules/clean.py:
	[svn] * dimsbuild/modules/clean.py: enabled debug for HookHandler.
	[cbae39fab014]

2007-08-24  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/callback.py: FilesCallback.sync_file() takes in an
	extra copy parameter, which if set to True calls EventInterface's
	copy() function instead of cache().

	* dimsbuild/interface.py:
	- added EventInterface.copy() that simply copies the source file to
	the destination without caching it.
	- completed a TODO item for EventInterface.setup_sync() that now sets
	the default ID for anything to be the xpath query or the filepath.
	- EventInterface.list_output() now takes in a list of IDs and the
	output file list contains the output files corresponding to these
	IDs.

	* dimsbuild/modules:
	- hooks now use self.interface.copy() when they don't need the files
	to be cached.

	* dimsbuild/modules/installer:
	- modules now use the EventInterface.list_output() function in their
	hooks to make sure that those files exist.
	[4be71fedfc24]

	* lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/modules/sources.py: modified the SourceRepoHook so
	that the input stores' repositories are downloaded only if they
	have changed. It works similar to how RepoHook works.
	[fed6549f6c80]

	* lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py:
	[svn] * dimsbuild/modules/installer:
	- hooks that extend ImageModifyMixin do not need to add output files
	in self.DATA themselves. Calling
	ImageModifyMixin.register_images_locals() does this for them.
	Also, if an image is virtual and is not found in the base input
	repository, the output file added has no source associated with
	it. If the virtual image is found, there is a source associated with
	it.
	[c239bba07f75]

	* lib/dimsbuild/modules/installer/lib.py:
	[svn] * dimsbuild/modules/installer/lib.py:
	- wasn't listing the images as an output file.
	[980b80c396f6]

	* lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py:
	[svn] * dimsbuild/modules/iso.py:
	- fixed assert statement to not check the input files list; this list
	used to be returned by setup_sync() but isn't anymore.

	* dimsbuild/modules/pkglist.py:
	- Likewise
	[7abc36a7f5d7]

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/installer/lib.py:
	[svn] * dimsbuild/interface.py:
	- closing the object returned by urlopen() if the site is found

	* dimsbuild/modules/installer/lib.py:
	- ignoring HTTPErrors for files that are virtual (e.g. product.img,
	that might not exist on the server)
	[b4e7eccbd260]

2007-08-24  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/difftest.py
	* modified mdread functions in config and variables handlers to read
	all nodes from the md file, without regard to values in self.DATA.
	This allows events to append items to self.DATA between mdread() and
	diff().
	[2e0c0575ac55]

2007-08-24  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] * dimsbuild/callback.py:
	- added formats for log levels 3 and 4.
	- the FilesCallback now not only prints statements, but also syncs the
	files and removes them if needed.
	- the BuildSyncCallback._cp_start() function now uses the 'seek'
	parameter instead of 'position.'

	* dimsbuild/interface.py:
	- the EventInterface.setup_sync() function now takes a list of
	2-tuples for xpaths: the xpath query and output directory's
	prefix. It also takes in a list of 2-tuples for paths, for output
	directories. The input directory for relative path can be
	specified with the 'iprefix' parameter. Also, each setup_sync()
	call can be given an ID, that can be used to retrieve the list of
	files corresponding to the ID and/or just sync files corresponding
	to it.
	- EventInterface.setup_sync() just returns the list of output files.
	- TODO: the default ID should be the path or xpath specified and not
	the string 'default.'

	* dimsbuild/modules:
	- fixed all hooks so that all the 'xpaths' parameters to the
	EventInterface.setup_sync() is a list of 2-tuples.
	- fixed all hooks so that it only expects the output files.

	* dimsbuild/modules/installer:
	- fixed all the installer hooks to use the new functions in
	EventInterface
	- moved all metadata files and output files related to these hooks
	in /path/to/builddata/INSTALLER.
	[a67c1e08f87f]

2007-08-23  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/software.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] Consistency pass over all (non RPM and INSTALLER) events to
	complete the following: 1) add "Cleaning x event" message at the
	beginning of each clean function 2) move write_metadata into the run
	function and 3) for events with config-able enable/disable states,
	call the clean function when the event is disabled. Additional
	modifications to infofiles and gpg modules (see below).

	repos.py, software.py, iso.py, sourcevars.py, files.py, manifest.py,
	publish.py, infofiles.py, pkglist.py, gpg.py, comps.py and
	sources.py
	* see above

	infofiles.py
	* see above
	* treeinfo - removed anaconda version check - no harm in writing the
	file for all versions
	* treeinfo - added base-vars and product-path as input variables

	gpg.py
	* added clean function
	* modified run function to create gpg homedir only if gpg-enabled
	* additional modifications forthcoming to download public and secret
	key via interface functions
	[794f374a9687]

2007-08-22  uprakash  <uprakash>

	* lib/dimsbuild/modules/publish.py:
	[svn] * dimsbuild/modules/publish.py:
	- moved the PublishHook to use the new functions that are available in
	EventInterface to sync and remove files.
	[ef76e6059179]

	* lib/dimsbuild/modules/pkglist.py:
	[svn] * dimsbuild/modules/pkglist.py:
	- deleting .depsolve folder if the user has provided the package list
	and the .depsolve folder exists.
	- deleting a repository's depsolve metadata (.depsolve/<repo id>) if
	the repo has changed (if repo.changed is set to True)
	[4b299c0fe0a6]

	* lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/meta.py:
	[svn] * dimsbuild/modules/rpms/meta.py:
	- the RPMS post hook doesn't delete the .depsolve/localrepo folder;
	this is taken care of by the pkglist event which deletes the
	repo's depsolve metadata if it has changed (it looks at the
	repo.changed flag to figure this out).

	* dimsbuild/modules/rpms/lib.py:
	- using EventInterface.remove_output() instead of
	RpmBuildHook._delete_old_files().
	[e5c1ee94486c]

2007-08-22  kwilliams  <kwilliams>

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/repos.py:
	[svn] Reorganized repos event to use interface functions for syncing
	repodata folder contents. Modified the repo class in interface.py to
	store packagefile (.pkgs) location.

	* interface.py added self.pkgsfile variable

	* repos.py
	- moved all repos related content under the same parent -
	builddata/repos
	- modified setup to set variables (not sync files)
	- modified clean to remove output (in addition to metadata)
	- modified run to download repodata folders, read repomd.xml files,
	create .pkgs files, set input-repos-changed (if input files changed
	but not if output was deleted), and write metadata
	- modified apply to take advantage of the pkgsfile variable and other
	changes
	[73d417d5fd1c]

2007-08-22  uprakash  <uprakash>

	* lib/dimsbuild/interface.py:
	[svn] * dimsbuild/interface.py:
	- added a 'link' parameter to EventInterface.sync_input() so that
	files can be linked instead of copied.
	- added some type-checking to EventInterface.setup_sync() to ensure
	that the 'xpaths' and 'paths' parameters are lists.
	[c99de9239879]

	* lib/dimsbuild/interface.py:
	[svn] * dimsbuild/interface.py:
	- added back the PrimaryXmlContentHandler that speeds up the reading
	of the primary.xml.gz by quite a bit. The PrimaryXmlContentHandler
	keeps track of whether a <package> element has been seen. So we
	know which package element the location, size, and file elements
	are related to and can use this information.
	[e857b962482e]

2007-08-21  uprakash  <uprakash>

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] * dimsbuild/difftest.py:
	- reverted the InputHandler so that it always computes the time, and
	size of the input files. The InputHandler that accepts time and
	size for files is dimsbuild-specific, so that has been moved to
	interface.py.

	* dimsbuild/interface.py:
	- renamed EventInterface.getFileLists() to (the more accurate)
	EventInterface.setup_sync()
	- fixed a bug in EventInterface.sync_items() because of which, if
	nothing was to by sync'd, None was being returned instead of an
	empty list.
	- moved the InputHandler from difftest to here. This InputHandler
	class can accept a time and size for each of the input files; in
	this case, the size and mtime is not recomputed.

	* dimsbuild/modules/:
	- changed references of EventInterface.getFileLists() to
	EventInterface.setup_sync()

	* dimsbuild/modules/iso.py:
	- modified the pkgorder event to use the new functions in
	EventInterface
	- cleaned up the IsoSetsHook class

	* dimsbuild/modules/pkglist.py:
	- modified the pkglist hook to use the new functions in EventInterface
	- deleted the repogen event. It is no longer required as we have
	direct access to the Repo objects via control variables and can
	create the .repo file for depsolving if and when needed.

	* dimsbuild/modules/rpms/meta.py:
	- deleted the post-repogen hook.
	[450a0be69563]

	* share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] * dimsbuild/schemas/iso.rng: added <interleave> element around
	<set>...</set> and <pkgorder>...</pkgorder>.
	[cfe9befa8305]

2007-08-21  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software.py:
	[svn] software.py
	* added conditional logic to sign rpms if gpg-enabled
	[a450a7e6615b]

2007-08-20  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/pkglist.py:
	[svn] Changes in comps event to bring it up to speed with current
	hook model. A few related changes were required in the pkglist hook
	as well.

	comps.py
	* removed --with-comps command line argument
	* added anaconda-version as a test variable
	* create a comps containing folder in builddata for comps.md,
	comps.xml
	* setup function adds comps file to input/output data (if user-
	supplied file)
	* setup function add generated comps file to output data (if no user-
	supplied file)
	* setup function computes self.comps_out var containing the name of
	either the user-supplied or generated comps file. This variable is
	used later by the apply function.
	* clean function uses interface.remove_output
	* check function now uses diff_test to determine if output file is
	missing
	* run function no longer sets the comps-changed control variable,
	pkglist was the consumer of this variable and instead it tests for
	diffs in the required-packages variable (which is what it really
	consumes)
	* run function writes metadata
	* apply function uses self.comps_out var to set the comps-file cvar
	and to read the comps file in order to set the required-packages
	cvar

	pkglist.py
	* removed conditional requires in *repogen* hook on comps-changed.
	This was likely a bug since the pkglist hook actually consumed
	comps-changed.
	* setup the pkglist hook to track changes to the required-packages
	variable via diff_test (rather than using the comps-changed control
	variable)
	[db10ad9b3a6d]

2007-08-20  uprakash  <uprakash>

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/interface.py: got rid of the 'parent' parameter to
	EventInterface.remove_output().

	* dimsbuild/modules/*:
	- all the events that were specifying the parent parameter to
	remove_output aren't doing so anymore.
	[7995fde817e7]

	* lib/dimsbuild/modules/manifest.py:
	[svn] * dimsbuild/modules/manifest.py:
	- modified the manifest event to compute the size and mtime for all
	the files that are its inputs. This data is then provided to the
	inputhandler which doesn't recompute the size and mtime and just
	uses what's provided to it.
	[2857838fa4ba]

	* lib/dimsbuild/modules/software.py:
	[svn] * dimsbuild/modules/software.py: fixed reference path to cvars
	attribute.
	[7fc4e60ffa71]

	* lib/dimsbuild/modules/gpg.py:
	[svn] * dimsbuild/modules/gpg.py: renamed the 'gpgcheck' event to
	'gpg.'
	[2a9bcbcea632]

2007-08-20  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/software.py:
	[svn] software.py
	* modified the createrepo function to use comps-file control variable
	rather than a hard-coded value
	[876c5c1f20d8]

	* lib/dimsbuild/modules/installer/product.py:
	[svn] product.py
	* modified _generate_installclass to use the comps-file cvar rather
	than a hard-coded value
	[40e5ea68c3cd]

	* lib/dimsbuild/modules/clean.py:
	[svn] clean.py
	* moved write_metadata from apply to run function
	[28ed3c856bfe]

2007-08-20  uprakash  <uprakash>

	* lib/dimsbuild/callback.py, lib/dimsbuild/difftest.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/manifest.py,
	lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/difftest.py:
	- renamed all the difference dictionaries to be the same variable
	name. It is _always_ called <DiffTestHandler>.diffdict now. Made
	changes in all the hooks to use this.
	- the InputHandler accepts mtime and size values for input files. If
	provided, these values are used instead of computing it.

	* dimsbuild/callback.py: added FilesCallback to print out messages
	while syncing files, removing files or removing empty directories.
	Can be overridden by hooks if they want something else printed.

	* dimsbuild/interface.py:
	- EventInterface.remove_output() uses os.removedirs() instead of my
	implementation of what os.removedirs() does.
	- using the FilesCallback in EventInterface.sync_input() and
	EventInterface.remove_output()
	- deleted the PrimaryXmlContentHandler class. Instead reading the
	primary.xml to get each of the RPM's name, size and last-modified
	time.
	- Repo.writeRepoContents() now writes a comma-separated value (file,
	size, mtime) instead of just the file name.
	- Repo.readRepoContents() now accepts a 'repofile' parameter which is
	file with comma-separated values. If provided, this file is read to
	populate information about the repository. If not provided, the
	store's primary.xml file is read.

	* dimsbuild/modules/repos.py:
	- made changes in the ReposHook.apply() to not use the filereader
	module anymore; using Repo.readRepoContents() instead.

	* dimsbuild/modules/software.py:
	- using the new EventInterface functions -- sync_input() and
	remove_output() instead of ListCompareMixin
	- the software event is responsible for signing the RPMs as well

	* dimsbuild/modules/gpg.py:
	- the gpgcheck event now sets up a gpg home directory that can be used
	by the software event to sign RPMs. This home directory is always
	kept around and modified if either the public or secret key is
	updated.

	* dimsbuild/modules/manifest.py:
	- temporary fix in the ManifestHook.run() function that forces a call
	to InputHandler.diff() if EventInterface.test_diffs() hasn't been
	called. This happens when ManifestHook.clean() runs, which results
	in EventInterface.run() getting called without
	EventInterface.check()

	* dimsbuild/modules/sources.py:
	- broke the sources event into two: source-repos and source.
	- the former is similar to the repos event and the latter is similar
	to the software event.
	[49c8d7ec73bb]

2007-08-20  kwilliams  <kwilliams>

	* lib/dimsbuild/event.py:
	[svn] event.py
	* removed conditional logic for skipping check on --clean
	[65050f4c6e4e]

2007-08-17  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] Changed events that set self.DATA['variables'] to use
	variables in the interface object rather than the hook object (which
	is no longer accessible due to moving DiffMixin into the interface).
	Changed files include:

	iso.py rpms/release.py rpms/logos.py publish.py
	installer/isolinux.py installer/xen.py installer/diskboot.py
	installer/infofiles.py installer/product.py installer/logos.py
	installer/updates.py
	[aac9baf6bc04]

	* lib/dimsbuild/modules/sourcevars.py:
	[svn] sourcevars.py
	* moved to new interface functions for getFileLists, remove_output,
	and sync_input
	[a564fccaadf5]

	* lib/dimsbuild/modules/sources.py:
	[svn] sources.py
	* don't setup source repos if source not enabled.
	[b608dcdcb589]

	* share/doc/conf/example-centos-base-5/distro.conf, share/doc/conf
	/example-fedora-base-6/distro.conf, share/doc/conf/example-fedora-
	base-7/distro.conf, share/doc/conf/example-redhat-
	base-5/distro.conf, share/doc/examples/example-centos-
	base-5/distro.conf, share/doc/examples/example-fedora-
	base-6/distro.conf, share/doc/examples/example-fedora-
	base-7/distro.conf, share/doc/examples/example-redhat-
	base-5/distro.conf:
	[svn] dimsbuild/trunk/share/doc/conf
	* renamed to dimsbuild/trunk/share/doc/examples
	[161dfce2b754]

	* bin/dimsbuild, conf/dimsbuild.conf, conf/example-centos-
	base-5/distro.conf, conf/example-fedora-base-6/distro.conf, conf
	/example-fedora-base-7/distro.conf, conf/example-redhat-
	base-5/distro.conf, runfromsource.cfg,
	share/dimsbuild/schemas/dimsbuild.rng, share/doc/conf/example-
	centos-base-5/distro.conf, share/doc/conf/example-fedora-
	base-6/distro.conf, share/doc/conf/example-fedora-
	base-7/distro.conf, share/doc/conf/example-redhat-
	base-5/distro.conf:
	[svn] This commit includes a variety of config related changes and
	cleanup. Major changes include changing the default location of
	distro.conf files, changing the default location of dimsbuild.conf
	and making it optional, and beginning to remove command line options
	for distro-specific user files (e.g. comps.xml, pkglist, pkgorder)
	which are generally handled in the distro.conf file.

	Adjustments pending as we try out the current scheme, see what
	works/doesn't.

	Following is a detailed description of changes by file.

	share/doc/conf/
	* moved example distro.conf folders from conf/ to this location
	* removed outdated dimsbuild.conf, which we will no longer include by
	default
	* note - the name of this folder will change to share/doc/examples in
	a subsequent commit

	share/dimsbuild/schemas/dimsbuild.rng
	* removed "default" element - dimsbuild now looks for a file named
	distro.conf in the current folder if no file is specified on the
	command line.

	runfromsource.cfg
	* added confpath=False parameter for dimsbuild since dimsbuild.conf is
	now optional

	bin/dimsbuild
	* changed --config parameter to --distro-conf
	* changed --conf-path parameter to --dimsbuild-conf
	* updated help messages
	* removed publishgroup for software store publish options, since
	--with-pkgorder is no longer exposed via command line
	* updated logic for locating distro.conf
	* updated logic for locating dimsbuild.conf
	* made dimsbuild.conf optional, if no file exists on disk, an empty
	shell file-like-object is created and provided to configlib
	[e8ae26007fa3]

2007-08-16  uprakash  <uprakash>

	* lib/dimsbuild/difftest.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/difftest.py: if IOError,
	SAXParseException or ValueError is raised in
	DiffTest.read_metadata(), pass it; this is similar to how
	addHandler() ignores these exceptions.
	[6fc76b40f2b3]

	* lib/dimsbuild/interface.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/interface.py: raise an
	exception when an input file is missing.
	[0ee76177799e]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/lib.py,
	lib/dimsbuild/modules/manifest.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] * dimsbuild/trunk: merged branches/files[@rev=2035] with
	trunk.
	[cd13c2ea1218]

2007-08-15  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/installer/lib.py:
	[svn] lib.py
	* moved extractRPMS() into ExtractHandler class
	* modified extract() and extractRPMS() functions to use TEMP_DIR as
	the tmp folder parent, rather than hard coded values
	[5ed45ad7a600]

	* lib/dimsbuild/interface.py:
	[svn] interface.py
	* readRepoContents() - passing GzipFile a filename rather than a
	fileobj since we don't need nonsequential access. More compact.
	[fe3a1816036f]

	* lib/dimsbuild/interface.py:
	[svn] interface.py
	* modified readRepoContents to use python gzip module
	[bba0df85a290]

2007-08-14  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/difftest.py
	* reverting to revision 2024; ie. excepting ValueError, IOErro, and
	SAXParseException in addHandler function
	[01a81d43e9e6]

	* lib/dimsbuild/modules/repos.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/modules/repos.py
	* removed extraneous print statement
	[a4e052843834]

2007-08-14  dmusgrave  <dmusgrave>

	* lib/dimsbuild/difftest.py:
	[svn] dimsbuild/lib/dimsbuild/difftest.py
	 * updated except clause in addHandler() so that it now excepts
	xmltree.XmlTreeIOError as well as SAXParseError
	[dac420e81af4]

2007-08-14  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] difftest.py
	* cast os.stat return values as integers (ints in python 2.4, floats
	in 2.5)
	[174d9464e7a0]

	* lib/dimsbuild/modules/repos.py:
	[svn] repos.py
	* slight improvement to anaconda rpm regular expression; avoids
	creating unnecessary matching group.
	[b46dd81d7524]

2007-08-13  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/gpg.py:
	[svn] gpg.py
	* Excepting IOError (python 2.5) in SoftwareHook pre function in
	addition to ValueError (python <2.5) when mdfile is missing
	[e15772e348da]

	* lib/dimsbuild/difftest.py:
	[svn] difftest.py
	* modified addHandler to except SAXParseException IOError (python 2.5)
	in addition to ValueError (python < 2.5) if metadata file not found.
	[64ea6e0730bf]

	* lib/dimsbuild/modules/repos.py:
	[svn] repos.py
	* fixed setup function to add input and output using update function
	* modified RE in get_anaconda_version to avoid matching on a prefix
	string that does not end in a "/" character (e.g. some/path/busybox-
	anaconda....rpm)
	[f6b21c34f320]

	* lib/dimsbuild/modules/clean.py:
	[svn] * clean.py - fixed _force_clean() to provide event object
	rather than eventid to _apply_flowcontrol
	[9cc276b61db5]

2007-08-10  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event.py, share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/lib.rng
	 * added 'attribute-id', which allows schemas to have unique attribute
	ids in a document
	 * repo's id attribute must now be unique
	[dd47b337c581]

2007-08-10  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py:
	[svn] * iso.py

	pkgorder event:
	- raise RuntimeError if cached pkgorder file missing (e.g. --skip
	pkgorder before it is created)
	- perf optimization - added if iso-enabled condition prior to setting
	variables in setup function.
	[5fe9b21f56c8]

	* lib/dimsbuild/modules/lib.py:
	[svn] * lib.py - raise RuntimeError, rather than warn, on missing
	input files
	[71ebf19e21f0]

2007-08-10  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event.py:
	[svn] dimsbuild/lib/dimsbuild/event.py
	 * setup() function now runs regardless of event.status
	[54f3a5130ac9]

	* lib/dimsbuild/event.py:
	[svn] dimsbuild/lib/dimsbuild/event.py
	 * fixed a bug causing events to always call .run() when --clean was
	not specified, and to conditionally call .run() when --skip or
	nothing was specified
	[163b46bce043]

2007-08-09  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/lib.py, lib/dimsbuild/modules/rpms/lib.py:
	[svn] * dimsbuild/modules/rpms/lib.py: not all RpmBuildHooks have
	'variables', 'input', and 'config' entries in self.DATA. Checking
	to see if they do before calling DiffMixin.changed().

	* dimsbuild/modules/lib.py: removed unnecessary imports.

	* dimsbuild/modules/installer/lib.py: calling
	ExtractHandler.clean_output() in ExtractHandler.run().
	[a89eeb0b9a6c]

2007-08-09  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/dimsbuild/constants.py, lib/dimsbuild/event.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/files.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/lib.py,
	lib/dimsbuild/modules/manifest.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] dimsbuild/lib/dimsbuild/constants.py
	 * changed OPT_FORCE to OPT_CLEAN dimsbuild/lib/dimsbuild/interface.py
	 * the EventInterface cache_handler now looks at mainconfig in two
	locations for cache data: /dimsbuild/cache/path/text() for the
	cache directory, and /dimsbuild/cache/max-size/text() for the
	maximum cache size. If these are not defined, they fall back
	onto values defined in main.py
	 * EventInterface.isSkipped() and isForced() no longer use userFC or
	autoFC; instead, they look at the requested event's status
	variable directly dimsbuild/lib/dimsbuild/event.py
	 * modified program flow; no longer runs force() or skip() functions on
	events; now runs clean() functions (as a direct replacement of
	force)
	 * removed Dispatch.force and skip dictionaries
	 * renamed Dispatch.ureg_events and ureg_hooks to _ureg_events and
	_ureg_hooks, respectively dimsbuild/lib/dimsbuild/modules/*.py
	 * renamed Hook.force() functions to Hook.clean()
	 * adjusted check() and run() functions so check() doesn't modify
	program state
	 * no longer check for isForced() in check() functions; is implied
	dimsbuild/lib/dimsbuild/modules/software.py
	 * removed cache() force argument
	dimsbuild/lib/dimsbuild/modules/iso.py
	 * renames isoSetsHook to IsoSetsHook
	dimsbuild/lib/dimsbuild/modules/rpms/logos.py
	 * make more palatable error message when fonts not found in sharepath
	dimsbuild/lib/dimsbuild/modules/rpms/lib.py
	 * adjusted raw_input() calls to be more friendly and intuitive
	dimsbuild/lib/dimsbuild/modules/installer/lib.py
	 * removed FileModifyMixin.isrc, renamed rsrc to src
	 * now utilizes EventInterface.cache() for caching files instead of
	sync directly dimsbuild/lib/dimsbuild/modules/clean.py
	 * no longer enforce --clean on all events when --clean ALL is
	specified; already taken care of
	 * consolidated code, wrote some illegal statements in preparation for
	next revision of dimsbuild dispatch system
	dimsbuild/lib/dimsbuild/main.py
	 * removed userFC, autoFC; no longer needed
	 * renamed __init_dispatch() to _init_dispatch()
	 * added _init_directories(), for creating folders with a printout
	 * added cache clearing in apply_options() dimsbuild/bin/dimsbuild
	 * added new option, --clear-cache, which clears the shared cache
	[dd13d2daab9e]

2007-08-09  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/lib.py:
	[svn] * lib.py - removeFiles() accepts a string and converts to a
	list
	[993198801461]

2007-08-08  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/logos.py,
	share/dimsbuild/schemas/distro.conf/installer-logos.rng,
	share/dimsbuild/schemas/distro.conf/installer-release-files.rng,
	share/dimsbuild/schemas/distro.conf/logos.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/release-files.rng:
	[svn] * schemas/distro.conf/: moved 'installer-release-files.rng'
	and 'installer-logos.rng' to 'release-files.rng' and 'logos.rng'
	respectively.

	* lib/dimsbuild/modules/installer/logos.py: removed extra whitespace
	[fe212f3dec1c]

2007-08-08  dmusgrave  <dmusgrave>

	* lib/dimsbuild/event.py, lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/logos.py,
	lib/dimsbuild/modules/installer/release.py,
	lib/dimsbuild/modules/iso.py:
	[svn] dimsbuild/lib/dimsbuild/event.py
	 * uncommented code about catching exceptions during module loading
	dimsbuild/lib/dimsbuild/installer_*.py
	 * renamed installer_release and installer_logos to release and logos,
	respectively
	[5133d5b7c916]

2007-08-08  uprakash  <uprakash>

	* lib/dimsbuild/modules/lib.py:
	[svn] * dimsbuild/lib/modules/lib.py:
	- added helper function: removeFiles() that FilesMixin.remove_files()
	calls
	- other mix-ins and events can make use of this function if they want
	to delete files and make sure that no empty directories are left
	lying around.
	[0007c43745ff]

2007-08-08  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] dimsbuild/lib/dimsbuild/callback.py
	 * improved callback mechanisms; callback _should_ work for both cache
	and non-cached syncs
	 * removed old callback functions
	 * implemented new callbacks dimsbuild/lib/dimsbuild/interface.py
	 * rewrote cache() function - now utilizes new sync features
	 * EventInterface now defines a cache_callback, which can be used as a
	callback for any sync call (in theory)
	dimsbuild/lib/dimsbuild/modules/rpms/lib.py
	 * fixed a typo in the release increment prompt
	dimsbuild/lib/dimsbuild/modules/software.py
	 * removed software's separate callback; now utilizes
	EventInterface.cache() dimsbuild/lib/dimsbuild/modules/sourcevars.py
	 * removed sourcevar's separate callback; now utilizes
	EventInterface.cache()
	dimsbuild/lib/dimsbuild/modules/installer/installer_release.py
	 * now utilizes EventInterface.cache() instead of sync.sync()
	dimsbuild/lib/dimsbuild/modules/installer/lib.py
	 * removed installier/lib's separate callback; now utilizes
	EventInterface.cache() dimsbuild/lib/dimsbuild/modules/publish.py
	 * no longer uses sync.sync(), uses link.sync()
	dimsbuild/lib/dimsbuild/modules/sources.py
	 * removed sources' separate callback; now utilizes
	EventInterface.cache()
	[cd16f421dc48]

2007-08-07  kwilliams  <kwilliams>

	* docsrc/iso.rng, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/manifest.py, lib/dimsbuild/modules/publish.py,
	share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] Substantial reorganization of the manifest and iso-related
	events primarily to move the events to the DiffMixin/FilesMixin
	models. Major changes include -

	* Moved the manifest out of iso.py since it's purpose (providing a
	control list of files in the distribution) is general.
	* Split the iso event into two events (pkgorder and iso-sets) with a
	commmon parent (ISO).
	* Added support for specifying a user provided pkgorder file in
	configuration. Updated schema and documentation files to reflect
	this change. Removed previous command line --with-pkgorder option.
	* As mentioned above, moved all three events (manifest, pkgorder and
	iso-sets) to DiffMixin. Moved pkgorder to FilesMixin. Laid the
	groundwork in pkgorder and iso-sets to begin using a future version
	of FilesMixin which supports file paths in addition to config
	elements.
	[641bfe786b4d]

2007-08-07  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] * distro.conf/{config-rpm,logos-rpm,default-theme-rpm,release-
	rpm}.rng:
	- added the optional 'enabled' attribute's definition and removed the
	'create' element's definition

	* dimsbuild/schemas/distro.conf/product.rng: changed the 'element-
	path' element to be an 'element-path-with-dest' element.
	[27d074c35baa]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/clean.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/lib.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/meta.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/rpms/rpmlocals.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/difftest.py:
	- catching the SAXParseException in DiffTest.read_metadata()
	- added 'name' attributes to each of the handler's for their
	identification
	- dropped the 'prefix' parameter to the InputHandler and
	OutputHandler. The paths provided to the handler's should be
	absolute. The FilesMixin takes care of making all relative paths
	absolute.

	* dimsbuild/trunk/lib/dimsbuild/interface.py:
	- moved DiffMixin, FilesMixin, and ListCompareMixin to modules/lib.py

	* dimsbuild/trunk/lib/dimsbuild/main.py:
	- added 'lib' to the list of disabled modules so that it is not
	treated like a dimsbuild module.

	* dimsbuild/trunk/lib/dimsbuild/modules/lib.py:
	- initial commit of lib.py that contains DiffMixin, FilesMixin, and
	ListCompareMixin
	- added DiffMixin.changed() that takes in a name (of a handler) and
	returns True or False depending on whether that handler's diff()
	function returns True or False. Some basic optimization is
	accomplished by calling <handler>.diff() only once -- either in
	DiffMixin.test_diffs() or DiffMixin.changed() -- by storing the
	results to the <handler>.diff() call in a dictionary.
	- the FilesMixin's add_files() function now takes in a 'paths'
	parameter that should be a list of 2-tuples with the first element
	as the source and the second element as the destination directory.
	- FilesMixin.sync_files() now takes an 'action' parameter which is a
	function pointer to the function that should be called with the
	source and destination file paths. If the 'action' parameter is not
	specified, the source is sync'ed to the destination.
	- the FilesMixin.sync_files() and FilesMixin.remove_files() functions
	now print (configurable) messages to the console.
	- smarter deletion of files no longer required.

	* dimsbuild/trunk/lib/dimsbuild/modules/*:
	- fixed import statements for DiffMixin, FilesMixin, and
	ListCompareMixin
	- made changes in all the events using the FilesMixin to use its new
	API

	* dimsbuild/trunk/lib/dimsbuild/modules/publish.py: the 'repofile'
	event creates the .repo file in the <builddata>/RPMS/rpms-src
	folder.

	*
	dimsbuild/modules/installer/{installer_release,installer_logos}.py:
	- code cleanup

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/diskboot.img:
	- added support for the 'boot-args' element that results in the
	modification of the syslinux.cfg file in the diskboot.img created.

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/lib.py:
	- the ImageModifyMixin.sync_files() function makes use of
	FilesMixin.sync_files()'s action parameter that writes the source
	file to the image.

	* dimsbuild/trunk/lib/modules/rpms/*:
	- code cleanup
	- the user is prompted to bump the release number if any of the input,
	config, or variables change. If the distro.conf.auto is missing, the
	user is warned about it and asked if the release number should be
	set at 1.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/meta.py:
	- initial commit of this module that contains the hook on the RPMS
	meta-event.
	- the code in this module was previously in __init__.py

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/rpmlocals.py:
	- locals used by the various RPM events

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/default_theme.py:
	- remove the post-pkglist hook.
	- the default theme RPM is not built by default. It is built only if
	the 'enabled' attribute is explicitly set to True.
	[98ee80a3bd54]

2007-08-07  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] * difftest.py - exposed diff dictionary for variables and
	config handlers to match input and output handlers.
	[0b58148d34db]

2007-08-06  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/installer/installer_logos.py:
	[svn] * installer_logos.py - removed prefix=True from find() due to
	api changes
	[eb1d5d19dbaa]

2007-08-06  dmusgrave  <dmusgrave>

	* lib/dimsbuild/difftest.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py:
	[svn] dimsbuild/lib/dimsbuild/*
	 * updated osutils.find() calls from prefix=False to prefix='%P'
	dimsbuild/lib/modules/installer/installer_logls.py
	 * since osutils.find() doesn't guarantee the position of name,
	modified to ensure name was specified as a kwarg
	[d8584fc09e2d]

2007-08-03  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/sourcevars.py:
	[svn] * sourcevars.py - migrated to DiffMixin model
	[0a0fc37ede23]

	* lib/dimsbuild/modules/sourcevars.py:
	[svn] * sourcevar.py - removed outer join from cache operation
	[563f13c4e82c]

2007-08-03  uprakash  <uprakash>

	* lib/dimsbuild/modules/gpg.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/gpg.py: fixed element
	names -- 'public' is now 'gpg-public-key', 'secret' is 'gpg-
	secret-key', and 'password' is 'gpg-passphrase.'
	[2a68fe43d79a]

2007-08-02  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py:
	[svn] * iso.py - add builddata/pkgorder to output files and remove
	it during force
	[36bc59728b5e]

	* lib/dimsbuild/modules/iso.py:
	[svn] * iso.py - check fails if iso element is missing
	[4e1e4c10e616]

2007-07-31  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/iso.py:
	[svn] dimsbuild/trunk/lib/dimsbuild/modules/iso.py
	* look in the correct folder for srpms
	* only stat the isolinux bin file on the first folder
	[3686d8a418d8]

	* lib/dimsbuild/modules/sources.py:
	[svn] * sources.py - set source-include to false if /distro/source
	element not present in config
	[a6f61e7b2374]

	* docsrc/sources.rng, lib/dimsbuild/modules/sources.py,
	share/dimsbuild/schemas/distro.conf/sources.rng:
	[svn] Fixed bug 69

	* trunk/lib/dimsbuild/modules/sources.py - set default enabled to
	true
	* trunk/share/dimsbuild/schemas/distro.conf/sources.rng - made enabled
	and optional attribute
	* trunk/docsrc/sources.rng - updated documentation
	[1e528273eb81]

	* docsrc/comps.rng, lib/dimsbuild/splittree.py,
	share/dimsbuild/schemas/distro.conf/comps.rng:
	[svn] fixed bug #68, made comps/create-new/groups element optional

	* dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/comps.rng -
	made groups element optional
	* dimsbuild/trunk/docsrc/comps.rng - changed documentation to reflect
	above
	* dimsbuild/trunk/lib/dimsbuild/splittree.py - fixed bug #68 by
	initializing nsrpmdiscs = 0
	[18af35861ce7]

	* docsrc/iso.rng, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/splittree.py,
	share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] Fixed bugs #66 and #67:
	* trunk/lib/dimsbuild/splittree.py - make 'cd' and 'dvd' case
	insensitive
	* trunk/lib/dimsbuild/modules/iso.py - changed default enabled state
	from false to true
	* trunk/share/dimsbuild/schemas/distro.conf/iso.rng - made enabled
	attribute optional
	* trunk/dossrc/iso.rng - modified documentation to reflect above
	changes
	[d89631f4a46b]

2007-07-30  uprakash  <uprakash>

	* bin/dimsbuild:
	[svn] * dimsbuild/trunk/bin/dimsbuild: making the librarypaths
	element optional.
	[54687d456cea]

	* lib/dimsbuild/modules/rpms/default_theme.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/rpms/default_theme.py:
	temporary fix to the default_theme module's post-pkglist hook. The
	timestamp of the comps.xml is reset to what it used it be before
	the new packagereq element is added to it (the text of which is
	the default theme RPM's name).
	[ba3ca34d0041]

2007-07-24  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/publish.py:
	[svn] * publish.py - bumped publish hook version number
	[ddb2bb50a95c]

2007-07-24  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/publish.py:
	[svn] dimsbuild/lib/dimsbuild/modules/publish.py
	 * re-enabled strict syncing of publish directory
	[3a6acb133c32]

2007-07-23  kwilliams  <kwilliams>

	* share/dimsbuild/schemas/distro.conf/lib.rng, share/dimsbuild/schemas
	/old-schemas/default.rng, share/dimsbuild/schemas/old-
	schemas/dimsbuild.rng:
	[svn] * schemas/distro.conf/lib.rng - removed obsolete refentry
	elements
	* schemas/old-schemas - removed obsolete schemas
	[1a4d239fcbce]

	* conf/example-centos-base-5/distro.conf, conf/example-fedora-
	base-6/distro.conf, conf/example-fedora-base-7/distro.conf, conf
	/example-redhat-base-5/distro.conf:
	[svn] Modified example distro.conf files to remove obsolete distro-
	provider element
	[bd2595f06711]

2007-07-23  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] * dimsbuild/trunk/share/dimsbuild/schemas/distro.conf/lib.rng:
	added optional type attribute to the 'element-repo' ref element.
	[7c2b107784cc]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/files.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/validate.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/difftest.py:
	- the InputHandler accepts local and remote files/directories as
	input. To accomplish this a new data structure that maps the input
	files provided by the hooks to the list of files it expands to is
	maintained.
	- in InputHandler.diff() function tries to first expand the list of
	input files, update the above-mentioned data structure and then
	get the (size, last-modified-time) of the each of the (expanded)
	input files. This way, we _never_ recompute the stats of a file
	twice. The data structure acts like a first-level cache.
	- the diff() helper function now takes two dictionaries that maps a
	file to a 2-tuple that contains the size and the last-modified-time
	and returns the diff between the two dictionaries.
	- the InputHandler and the OutputHandler are responsible for the
	expansion of their filelists. This way the hooks can stay unaware of
	when the lists should be expanded and go about doing what they do.
	- renamed the clean() function to clear() for each of the handlers
	- added an update() function to each of the handlers that allows for
	new items to be added to the handlers' lists post-initialization.
	- added expandPaths() (previously EventInterface.expand)
	- added getFileList() (previously EventInterface._get_files())
	- in OutputHandler, if not output files have been specified at the
	time when diff() is called, the output files listed in the metadata
	file are used. This needs some re-thinking.
	- the InputHandler and OutputHandler take in an optional prefix
	parameter to their __init__() functions that act as parents to
	relative paths in their filelists.

	* dimsbuild/trunk/lib/dimsbuild/interface.py:
	- deleted EventInterface.expand() and EventInterface._get_files()
	- added FilesMixin. This Mixin should be used by all hooks that accept
	the path element. It has four functions that are of importance: o
	add_files(): takes in a list of xpath queries to the path
	element. It looks at the path element's text node and the dest
	attribute (if provided) and adds input and output files by
	calling InputHandler.update() and OutputHandler.update(). o
	sync_files(): again, takes in the xpath queries (should be the
	same ones as the add_files() xpath queries) and syncs input to
	output files. o remove_files(): removes a list of files. This
	list of files can either be passed in as a parameter or is
	computed. If computed, it is the list of files no longer needed
	or files that have changed. o add_file(): add a new file to the
	tree, can be overridden.

	* dimsbuild/trunk/lib/dimsbuild/modules/*: removed unrequired
	EventInterface.expand() calls.

	* dimsbuild/trunk/lib/dimsbuild/modules/clean.py:
	- added HookHandler.update()

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/lib.py:
	- the ImageModifyMixin now extends FilesMixin.
	- ImageModifyMixin.add_file() overrides FilesMixin.add_file() so that
	a file can be written to the image instead of the default behavior.
	- ImageModifyMixin.remove_files() overrides FilesMixin.remove_files()
	so that the image is removed instead of the default behavior.

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/xen.py:
	- made changes so that the new ImageModifyMixin can be used.

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/diskboot.py:
	- Likewise

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/product.py:
	- Likewise

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/updates.py:
	- Likewise

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/isolinux.py:
	- made changes to the InitrdHook so that the new ImageModifyMixin can
	be used.
	- the IsolinuxHook extends FilesMixin that syncs files from the
	'/distro/installer/isolinux/path' element in the config file to the
	isolinux folder.
	- the input files list now contains the name of the remote files.
	- support for the <boot-args> element in the isolinux container of the
	config file has been added.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/*:
	- all the RPMS metaevent related metadata files (event its children
	events) are being written to builddata/RPMS as a first step toward
	cleaning the layout of the builddata. This is a test change, and can
	be reverted if we don't like what we see.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/__init__.py:
	- the RpmsHook extends the DiffMixin so that createrepo is run only
	when the localrepo folder has changed.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/lib.py:
	- improved upon the installinfo attribute of RPM event hooks by adding
	a FileDownloadMixin that the RpmsHandler extends.
	- The FileDownloadMixin registers the xpath query with the FilesMixin
	and then downloads those files to the required locations.
	- looking at the enabled attribute of the RPM container elements
	instead of the text of the create element to see if an RPM is to be
	created or not.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/config.py:
	- also check the enabled attribute to see if the RPM is to be build
	(not in spec currently).
	[f5c4a382fb2e]

2007-07-19  dmusgrave  <dmusgrave>

	* lib/dimsbuild/callback.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/software.py:
	[svn] dimsbuild/lib/dimsbuild/callback.py
	 * BuildSyncCallback now inherets from
	dims.sync.callback.SyncCallbackTracker
	 * new function BuildSyncCallback.OCP(), allows this callback object to
	be used by osutils.cp() to receive callback requests
	dimsbuild/lib/dimsbuild/modules/software.py
	 * SoftwareInterface.syncRpm() now prints callback information for
	syncs from the input cache to the output store. This callback
	only occurs if the file was already in the input cache before; if
	it wasn't, the standard http callback is used
	dimsbuild/lib/dimsbuild/modules.gpg.py
	 * added checking of 'new-rpms' and 'gpg-tosign' control vars in
	GpgSign.check() to ensure when rpms change that they get signed
	[4351d17d6244]

2007-07-18  dmusgrave  <dmusgrave>

	* lib/dimsbuild/modules/pkglist.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/splittree.py:
	[svn] dimsbuild/lib/dimsbuild/splittree.py
	 * due to changes in osutils, fixed package indexing to include
	architecture; this prevents splittree from trying to link rpms
	with multiple architectures more than once
	dimsbuild/lib/dimsbuild/modules/pkglist.py
	 * fixed an osutils.mkdir() call to include parent=True (this problem
	will appear elsewhere no doubt)
	dimsbuild/lib/dimsbuild/modules/sources.py
	 * commented out an osutils.rm() in force(); this is evidence of a
	greater problem, force() being used to force the event, rather
	than to run code when the event is forced; will need to be fixed
	[f336b3c591f6]

2007-07-17  dmusgrave  <dmusgrave>

	* conf/example-centos-base-5/distro.conf, conf/example-fedora-
	base-6/distro.conf, conf/example-fedora-base-7/distro.conf, conf
	/example-redhat-base-5/distro.conf, lib/dimsbuild/difftest.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/validate.py,
	lib/dimsbuild/splittree.py:
	[svn] Summary: Completed the following TODO items:
	 * ISO: doesn't appear to be creating bootable images
	 * Preserve file persmissions and timestamps for created images
	 * Platform - convert "//" to "/distro/"
	 * Platform - diff - implement debug flag
	 * Pkglist - add support for <pkglist><path> element in distro.conf
	 * Pkgorder - add support for <iso><pkgorder><path> element in
	distro.conf
	 * Difftest variables eval hook variables (rather than interface
	variables)
	 * Schema review (create=bool, sign=bool elements to attributes) Also
	did the following
	 * Updated module/plugin loading scheme to be a little more powerful.
	The 'enabled' attribute can now take on 'true', 'false', or
	'default'. The user can then specify the 'default' attribute to
	the <modules> or <plugins> container, which indicates the value
	of all modules or plugins that define enabled='default'.

	Details: dimsbuild/conf/*/distro.conf
	 * <repos> elements updated by 1) removing <base> and <additional>
	containers and 2) adding type="base" attribute on former base
	repos dimsbuild/lib/dimsbuild/difftest.py
	 * added debug argument to DiffTest.changed() and DiffTest.test(); if
	enabled, debugging will be turned on for that specific invocation
	of the function
	 * removed an extra dprint() that was causing DiffDicts to be printed
	more than once dimsbuild/lib/dimsbuild/splittree.py
	 * removed SIZE_CD, SIZE_DVD
	 * added SIZE_ALIASES, dictionary allowing for a more flexible way of
	aliasing dimsbuild/lib/dimsbuild/interface.py
	 * updated EventInterface.getBaseRepoId() to get the first repo with
	type = 'base'
	 * added debug argument to test_diffs(), which makes use of the debug
	argument in DiffTest.changed()
	 * updated DiffMixin's variable handler to pass the mixin object
	instead of the mixin object's interface as the source for
	variable evals dimsbuild/lib/dimsbuild/main.py
	 * removed the 'distrosroot' and 'webroot' cvars
	 * updated module/plugin loading process
	 * removed Builder.__generate_attr_bool()
	 * removed Builder.__compute_servers()
	 * added Builder.__eval_modlist(), helper function for the improved
	module loading process dimsbuild/lib/dimsbuild/modules/repos.py
	 * added the missing interface.expand() call that was causing
	DiffTest's input handler to not process all directories
	dimsbuild/lib/dimsbuild/modules/validate.py
	 * added ValidateInterface.raiseInvalidConfig(), allowing other modules
	to easily raise the appropriate error in cases when it is
	necessary dimsbuild/lib/dimsbuild/modules/iso.py
	 * added IsoHook.setup(), which sets up the pkgorder-file cvar if the
	config value '/distro/iso/pkgorder/text()' exists
	 * pkgorder generation now only occurs if 'pkgorder-file' cvar is not
	set; otherwise, it uses that file
	 * the first iso that iso generates is now bootable (oops)
	dimsbuild/lib/dimsbuild/modules/publish.py
	 * new event 'repofile'
	 * PublishInterface is now responsible for setting up PUBLISH_DIR, not
	main.py
	 * new hook RepofileHook; generates a repofile that other machines can
	use to get updates from the build machine
	dimsbuild/lib/dimsbuild/modules/pkglist.py
	 * added PkglistHook.setup(), which sets the 'pkglist-file' cvar if the
	config value '/distro/pkglist/text()' exists
	dimsbuild/lib/dimsbuild/modules/sources.py
	 * instead of an interface variable, SourcesInterface now sets the
	'source-include' cvar so that other events can know about it
	dimsbuild/lib/dimsbuild/modules/rpms/__init__.py
	 * 'RPMS' event now conditionally requires 'rpm-source-files'
	dimsbuild/lib/dimsbuild/modules/rpms/release.py
	 * ReleaseRpmInterface no longer defines get*() functions; these have
	instead been replaced with simple variables
	 * removed ReleaseRpmHook._create_repo_files(); this functionality now
	occurs in publish.py
	dimsbuild/lib/dimsbuild/modules/installer/*.py
	 * adjusted DATA['variables'] in most hooks that use DiffMixin - in
	most cases, removed extra variables that were never used
	dimsbuild/lib/dimsbuild/modules/installer/infofiles.py
	 * adjusted BuildstampHook.run() so that it doesn't actually modify the
	dimsbuild base vars (this was causing problems with other events
	due to 'timestamp' being inconsistent across executions)
	[920d9c0fa3c5]

2007-07-13  dmusgrave  <dmusgrave>

	* tools/docgen:
	[svn] dimsbuild/tools/docgen
	 * minor change to docgen to get some text in config element
	[dee97b301f0b]

	* share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/gpg.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/publish.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/*.rng
	 * removed documentation from schemas
	 * updated by collapsing elements to attributes and removing
	unnecessary containers
	 * this commit will cause validation to fail for current schemas, most
	likely dimsbuild/share/dimsbuild/schemas/distro.conf/publish.rng
	 * new schema for new top level element, publish
	[9c32a2c76d53]

	* docsrc/publish.rng:
	[svn] dimsbuild/docsrc/publish.rng
	 * added repofile element, used for creating repo files pointing to the
	build machine
	[5c44fc6c6404]

	* docsrc/comps.rng, docsrc/config-rpm, docsrc/default-theme-rpm,
	docsrc/gpg.rng, docsrc/installer-logos, docsrc/installer-release-
	files, docsrc/installer.rng, docsrc/iso.rng, docsrc/isolinux.rng,
	docsrc/lib.rng, docsrc/logos-rpm, docsrc/main.rng, docsrc/pkglist,
	docsrc/product.rng, docsrc/publish.rng, docsrc/release-rpm,
	docsrc/repos.rng, docsrc/rpms, docsrc/sources.rng,
	docsrc/updates.rng, docsrc/xen:
	[svn] dimsbuild/docsrc
	 * initial commit of dimsbuild config documentation source files
	[3e7e45171d4e]

2007-07-13  uprakash  <uprakash>

	* lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/trunk/modules/sources.py: setting 'source-include'
	control variable in SrpmInterface.

	* dimsbuild/trunk/modules/rpms/: using 'source-include' control
	variable instead of reading config file to see whether the
	localrepo sources should be added to the 'source-repos' control
	variable.
	[26261b623a02]

2007-07-12  uprakash  <uprakash>

	* lib/dimsbuild/modules/rpms/lib.py:
	[svn] * dimsbuild/trunk/lib/rpms/lib.py: forgot a '%s' in a string.
	[f119f7104361]

	* lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dimsbuild/trunk/modules/rpms/:
	- the files in 'rpms-src' that were to be installed to the '/etc'
	folder were not being labeled as config files, fixed.
	- miscellaneous code cleanup
	[7869e679a529]

2007-07-12  kwilliams  <kwilliams>

	* lib/dimsbuild/main.py, lib/dimsbuild/modules/clean.py:
	[svn] Clean event related modifications.

	main.py
	 * creates SOFTWARE_STORE and METADATA_DIR folders on first run

	clean.py
	 * removes and creates above folders when (and only when) clean
	event is forced
	 * does not run on firstrun
	 * operates equivalently on --force ALL, --force CLEAN, and clean
	version number change
	[64035fb67cab]

2007-07-12  uprakash  <uprakash>

	* lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dims-common/trunk/lib/modules/rpms/*:
	- added the concept of an installinfo directory for each of the RPM
	hooks. The value of this dictionary is a 2-tuple: (xpath query,
	install directory). The key of the dictionary is the name of the
	subdirectory within the working directory to which the files
	specified by the xpath query are synced to and these files are
	installed to the install directory.
	- Additionally, you can create files in <rpm working directory>/<key
	of installinfo> and those files will get installed to the install
	directory as well.
	- Also, all the RPMS events look at /<path to builddata>/rpms-src/<rpm
	id> for additional files to install. The relative path to the
	files, relative to the rpms-src/<rpm id> folder, is the location
	to which the file is installed by the RPM. For example, the
	release-rpm event will create an RPM that will install builddata
	/rpms-src/release-rpm/a/b/c/d/blah.txt to /a/b/c/d/blah.txt on the
	end-client's machine.

	* dims-common/trunk/lib/mkrpm/rpmbuild.py:
	- the error messages were not being printed always, fixed.
	[7ac60282acc7]

2007-07-12  kwilliams  <kwilliams>

	* lib/dimsbuild/main.py:
	[svn] main.py
	 * productpath -> product-path
	[4cf9b2d08f8d]

	* lib/dimsbuild/modules/files.py:
	[svn] files.py
	 * test if files/folders exist before adding them to remove list
	[f5d3036e839a]

2007-07-11  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/main.rng:
	[svn] * dimsbuild/share/schemas/distro.conf/main.rng: added the url
	element in the schema file.
	[9339386aa0ad]

	* lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/validate.py:
	[svn] * dimsbuild/lib/interface.py:
	- spider.find() doesn't accept the 'indicators' parameter

	* dimsbuild/lib/main.py:
	- added the 'webloc' base variable
	- looking at '/distro/main' instead of '//main'

	* dimsbuild/lib/modules/rpms/*:
	- require the base variables instead of the config file elements. For
	example, require the variable 'cvars['base-vars']['fullname']'
	instead of requiring the config value
	'/distro/main/fullname/text()'

	* dimsbuild/lib/modules/installer/*:
	- Likewise
	- added some logging messages

	* dimsbuild/lib/modules/installer/lib.py:
	- added ImageModifyMixin.setup() that sets up the inputfiles instance
	variable that keeps track of input files and their destinations.
	It accepts two parameters: buildstamp and config, both of which
	default to True. If buildstamp is False, a buildstamp file is not
	added to the image. If config is False, the
	<self.name>/path/text() is not looked at to get input files.
	- added ImageModifyMixin.clean() that deleted the previous output
	files
	- while writing files to the image, the inputfiles dictionary is
	looked at instead of iterating over the input files in the config
	section and the builddata/images-src/<self.name> folder.

	* dimsbuild/lib/modules/installer/*:
	- all the hooks extending ImageModifyMixin use
	ImageModifyMixin.setup() and ImageModifyMixin.clean()
	[dae756c9cddf]

	* lib/dimsbuild/modules/clean.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/modules/clean.py:
	- added a CleanInterface that stores the dispatch attribute for its
	hooks to use. This is so that the hooks don't have to do
	'interface._base.dispatch' to get a hold of the dispatch object.
	[6f6dcc84838f]

	* runfromsource.cfg, tools/docgen:
	[svn] * dims-common/trunk/lib/dims/docbook.py:
	- initial commit of module that can be used to create manpages (and,
	potentially, html, info etc. pages in the future.
	- moved the ManualGenerator class from dims-common/trunk/bin/docgen

	* dims-common/trunk/bin/docgen:
	- using dims.docbook

	* dimsbuild/trunk/runfromsource.cfg:
	- added information about the docgen dimsbuild tool.

	* dimsbuild/trunk/tools/:
	- initial commit of folder that contains tools specific to dimsbuild

	* dimsbuild/trunk/tools/docgen:
	- the dimsbuild document-generator currently supports manpage creation
	only. It takes all the refentry elements' refsect2 elements and
	makes them the child of a refsect1 element with the title 'CONFIG
	ELEMENTS.'
	[422e2a1a891b]

2007-07-11  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/files.py:
	[svn] files.py
	 * added outfiles convenience variable
	 * modified add function to accept (rather than assume) a dictionary
	containing destination folder
	[59cb794caf61]

	* lib/dimsbuild/modules/files.py,
	share/dimsbuild/schemas/distro.conf/files.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng:
	[svn] Added schema validation support for the files event.

	share/dimsbuild/schemas/distro.conf/files.rng
	* added

	share/dimsbuild/schemas/distroc.onf/lib.rng
	* added element-path-with-dest

	lib/dimsbuild/modules/files.py
	* added validate hook
	[cf3d1a7fea74]

2007-07-10  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/files.py:
	[svn] files.py
	* fixed input filelist
	* sort files and folders before removing
	[a79bb24218b1]

	* lib/dimsbuild/modules/files.py:
	[svn] files.py
	* supports relative and url paths via interface.expand()
	* misc cleanup
	[afaf1cb23da3]

	* lib/dimsbuild/interface.py:
	[svn] interface.py
	* _get_files function includes trailing slash on folders
	[dc0a428b2034]

	* lib/dimsbuild/interface.py:
	[svn] interface.py
	* expand function converts strings to lists before processing
	[1855efa628b0]

	* lib/dimsbuild/modules/installer/infofiles.py:
	[svn] infofiles.py
	* updated file summary docstrings
	[47c7bee06f05]

2007-07-09  uprakash  <uprakash>

	* lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/discinfo.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/infofiles.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py:
	[svn] * dimsbuild/trunk/lib/modules/installer/discinfo.py: moved to
	infofiles.py

	* dimsbuild/trunk/lib/modules/installer/infofiles.py:
	- added buildstamp event that creates the .buildstamp file that all
	the other installer events use if they need to the .buildstamp
	file.

	* dimsbuild/trunk/lib/modules/installer/*:
	- all the events requiring the .buildstamp file, require the
	buildstamp-file control variable.
	[c336b896153a]

	* bin/dimsbuild, lib/dimsbuild/difftest.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/iso.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/trunk/bin/dimsbuild: removed calls to
	Build.preprocess() and Build.postprocess(); removed .firstrun
	idea.

	* dimsbuild/trunk/lib/difftest.py: moved the getFiles() function to
	EventInterface class.

	* dimsbuild/trunk/lib/interface.py:
	- moved difftest.getFiles() to EventInterface._get_files()
	- added EventInterface.expand() that takes in a list of files and
	spiders the paths (remote or local) specified and add them to the
	list, in place
	- removed DiffMixin.expandOutput() and DiffMixin.expandInput()
	- DiffMixin.addInput() and DiffMixin.addOutput() do not do any
	spidering
	- the hook is responsible for expanding the input files or output
	files lists when and if required; DiffMixin doesn't do any of that
	anymore.

	* dimsbuild/trunk/lib/main.py:
	- only create the Build.TEMP_DIR, if it doesn't exist; the creation of
	the Build.SOFTWARE_STORE and Build.METADATA_DIR is moved to the
	clean hook.
	- removed Build.preprocess() and Build.postprocess()

	* dimsbuild/trunk/lib/modules/iso.py:
	- calling EventInterfac.expand() instead of DiffMixin.expandOutput()

	* dimsbuild/trunk/lib/modules/sources.py:
	- Likewise

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- Likewise

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- calling EventInterface.expand() instead of DiffMixin.expandInput()

	* dimsbuild/trunk/lib/modules/rpms/config.py:
	- Likewise
	[590eeb26240e]

2007-07-09  kwilliams  <kwilliams>

	* lib/dimsbuild/modules/files.py:
	[svn] files.py
	 * added files module that enables user to specify files and folders to
	be included within the distribution folder.
	[a87f324eda64]

2007-07-07  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] difftest.py
	* fixed mdwrite function for Output Handler to (really) remove old
	data prior to writing
	[f5bf95471816]

2007-07-06  uprakash  <uprakash>

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/clean.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/discinfo.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/repos.py, lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/trunk/lib/difftest.py: added
	DiffTest.clean_metadata() that calls the handler functions'
	clean() function that clears out the metadata file and the
	dictionaries.

	* dimsbuild/trunk/lib/main.py: added Build.autoFC that is similar to
	Build.userFC, but is filled in programmatically (currently, by the
	clean event)

	* dimsbuild/trunk/lib/interface.py:
	- EventInterface.isForced() and EventInterface.isSkipped() functions
	look at self._base.userFC and self._base.autoFC to figure out if
	an event is forced or skipped.
	- added DiffMixin.clean_metadata() that calls
	DiffTest.clean_metadata()

	* dimsbuild/trunk/lib/modules/*: all the hooks that extend
	DiffMixin, now call DiffMixin.clean_metadata() in their force
	functions.

	* dimsbuild/trunk/lib/modules/clean.py: modifying
	self.interface._base.autoFC instead of self.interface._base.userFC
	[bc84d99ccc43]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/event.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/clean.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/validate.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/difftest.py:
	- the hooks extending DiffMixin are responsible for expading the
	output files' list by calling expandOutput().

	* dimsbuild/trunk/lib/dimsbuild/interface.py:
	- merged DataModifyMixin and DiffMixin

	* dimsbuild/trunk/lib/modules/validate.py:
	- the validate event conditionally requires the clean event

	* dimsbuild/trunk/lib/modules/init.py:
	- the MAIN event conditionally requires the clean event

	* dimsbuild/trunk/lib/modules/installer/lib.py:
	- the installer release files and installer logos events don't add
	files to the output list initially. Calling ExtractHandler.force()
	results in the files listed in the metadata file to be deleted.

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- not using DataModifyMixin anymore because it has been merged with
	DiffMixin

	* dimsbuild/trunk/lib/modules/clean.py:
	- initial commit of the clean event that forces events if any one of
	the hooks hooking onto it have their VERSION changed.
	- added a new handler to the DiffMixin: HooksHandler, that knows how
	to read/compare/write information about hooks to a metadata file.

	* dimsbuild/trunk/lib/modules/repos.py:
	- calling DiffMixin.expandOutput() before calling
	DiffMixin.write_metadata()

	* dimsbuild/trunk/lib/iso.py:
	- Likewise

	* dimsbuild/trunk/lib/sources.py:
	- Likewise
	[232e5f0e4371]

2007-07-05  uprakash  <uprakash>

	* lib/dimsbuild/difftest.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/difftest.py:
	- in OutputHandler.mdwrite(), before writing the metadata contents to
	the metadata file, first removing duplicates from the list of
	output files.
	[4c7e62ab304c]

	* lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/lib.py, lib/dimsbuild/modules/sources.py:
	[svn] * dimsbuild/trunk/lib/dimsbuild/interface.py:
	- added EventInterface.OUTPUT_DIR, the directory in which the os/,
	iso/ and SRPMS/ folders are created

	* dimsbuild/trunk/lib/dimsbuild/main.py:
	- added Build.OUTPUT_DIR, as above

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/__init__.py:
	- deleted LocalSrpmsHook
	- create a Repo object for the localrepo's source repository and
	adding it to the source-repos control variable

	* dimsbuild/trunk/lib/dimsbuild/modules/iso.py:
	- creating the ISOs in EventInterface.OUTPUT_DIR/iso

	* dimsbuild/trunk/lib/dimsbuild/modules/sources.py:
	- creating self.interface.cvars['source-repos'] only if it is not
	there in the control variable's dictionary
	- deleted SrpmInterface.add_store()

	* dimsbuild/trunk/lib/dimsbuild/modules/publish.py:
	- sync'ing EventInterface.OUTPUT_DIR to EventInterface.PUBLISH_DIR
	[fc57af65bc43]

	* lib/dimsbuild/difftest.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py:
	[svn] * dims-common/trunk/lib/dims/filereader.py: changed OSerror to
	OSError

	* dims-common/trunk/lib/dims/osutils.py:
	- in update() if destination doesn't exist, simply copy the source
	file to the destination.

	* dimsbuild/trunk/lib/dimsbuild/difftest.py:
	- added getMetadata() and getFiles() functions. The former returns the
	(size, last-modified time) of a file regardless of whether the file
	is a remote file or a local file. The latter returns a list of
	files that the path provided to it expands to; osutils.find() is
	used if the file is a local file and spider.find() is used if the
	file is a remote file.
	- don't recompute the size and the last modified times for input
	files; they were already computed once during the diff() function
	call, just using that.
	- the expand() function expands a list of lists in the data list in
	place now.

	* dimsbuild/trunk/lib/dimsbuild/interface.py:
	- added DataModifyMixin that supports the late modification of the
	input/output files' list after they have been set by DiffMixin.
	- DataModifyMixin.expandOutput() and DataModifyMixin.expandInput() fix
	relative paths and spider the paths specified in the data lists to
	contain all the files.
	- DataModifyMixin.addOutput() and DataModifyMixin.addInput() supports
	late addition of files to the output and input files' list.
	- DataModifyMixin.cleanOutput() and DataModifyMixin.removeOutput()
	support removing of files from the output files' list.
	- when the primary.xml.gz file was unzipped, it was being gunzip'ed in
	the repos/<repo.id> folder which was causing the last modified
	time of the directory to change. Instead gunzip'ing happens in a
	temporary folder.

	* dimsbuild/trunk/lib/modules/rpms/__init__.py:
	- if RPMS is skipped, the localrepo is not added to the repos control
	variable

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- using the addInput() function to specify the input files.
	- optimized the creation of the input files.

	* dimsbuild/trunk/lib/modules/rpms/config.py:
	- calling expandInput() to expand all the relative paths.

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- using the DataModifyMixin
	- the ColorMixin doesn't require the base store's packages file
	anymore
	- specifying the RPM being created in the output files' list as a glob

	* dimsbuild/trunk/lib/modules/installer/lib.py:
	- the ExtractHandler now extends DataModifyMixin
	- the temporary working directory is in '/tmp/dimsbuild'
	[50ec1802be61]

2007-07-02  kwilliams  <kwilliams>

	* lib/dimsbuild/difftest.py:
	[svn] difftest.py
	 * OutputHandler diff function gets its list of files for comparison
	from output.keys() rather than from the data structure
	[02b68eba0469]

2007-06-29  dmusgrave  <dmusgrave>

	* conf/example-centos-base-5/distro.conf, conf/example-fedora-
	base-6/distro.conf, conf/example-fedora-base-7/distro.conf, conf
	/example-redhat-base-5/distro.conf, lib/dimsbuild/constants.py,
	lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py, lib/dimsbuild/modules/repos.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/stores.py,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/repos.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/stores.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/*.rng
	 * all 'stores' and 'store' references replaced with 'repos' and
	'repo', respectively
	dimsbuild/share/dimsbuild/schemas/distro.conf/stores.rng
	 * renamed to repos.rng dimsbuild/conf/*/distro.conf
	 * all <stores> and <store> elements replaced wtih <repos> and <repo>,
	respectively dimsbuild/lib/dimsbuild/constants.py
	 * added RPM_GLOB, SRPM_GLOB, RPM_PNVRA, SRPM_PNVRA
	dimsbuild/lib/dimsbuild/interface.py
	 * EventInterface.cache() now accepts a Repo object instead of a repoid
	 * removed EventInterface.getStoreInfo()
	 * renamed EventInterface.getBaseStore() to
	EventInterface.getBaseRepoId() dimsbuild/lib/dimsbuild/main.py
	 * all 'stores' and 'store' references replaced with 'repos' and
	'repo', respectively
	 * fixed a bug in sharepath calculation that was introduced in last
	commit dimsbuild/lib/dimsbuild/modules/stores.py
	 * renamed to repos.py
	 * all 'stores' and 'store' references replaced with 'repos' and
	'repo', respectively
	 * the 'input-store-changed' provision is now called 'input-repos-
	changed'
	 * the 'stores' event is now the 'repos' event
	 * renamed StoresHook to ReposHook
	dimsbuild/lib/dimsbuild/modules/rpms/*
	 * most 'stores' and 'store' references replaced with 'repos' and
	'repo', respectively
	   - Uday needs to finish this up when he gets time
	dimsbuild/lib/dimsbuild/modules/*
	 * all 'stores' and 'store' references replaced with 'repos' and
	'repo', respectively dimsbuild/lib/dimsbuild/modules/software.py
	 * SoftwareInterface.syncRpm() now accepts a Repo object instead of a
	repoid dimsbuild/lib/dimsbuild/modules/sourcevars.py
	 * removed the hack for imglib timestamps; now using img, timestamping
	is under control
	dimsbuild/lib/dimsbuild/modules/installer/product.py
	 * updated to use img, with improved handling of certain steps in the
	modification process
	dimsbuild/lib/dimsbuild/modules/installer/lib.py
	 * updated to use img instead of imglib for improved handling of images
	(especially regarding ctime/mtime of images)
	dimsbuild/lib/dimsbuild/modules/publish.py
	 * publish now syncs the 'SRPMS' and 'iso' folders as well as the 'os'
	folder dimsbuild/lib/dimsbuild/modules/sources.py
	 * modified to use Repo objects instead of reading the config file
	 * added SourcesHook.setup(), which sets up the cvar 'source-repos'
	 * SourcesHook.run() now utilizes the 'source-repos' cvar instead of
	reading the config file
	[d64badf6fcc5]

2007-06-28  uprakash  <uprakash>

	* lib/dimsbuild/interface.py, lib/dimsbuild/main.py,
	lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/stores.py:
	[svn] * dims-common/trunk/lib/dims/configlib.py: lxml and
	elementtree apparently have a bug because of which even if an
	element 'elem' exists in a tree, 'if not elem' evaluates to True;
	changed it to be 'if elem is None'.

	* dims-common/trunk/lib/dims/xmltree.py: Likewise

	* newproject.sh: modified the setup.py created in the project to be
	the latest one.

	* dimsbuild/trunk/lib/dimsbuild/interface.py:
	- removed RepoContentMixin
	- changed all references of getStoreInfo() to getRepo()
	- broke down Repo.getRepoData() in Repo.getRepoData() and
	Repo.readRepoData(). This is because for a local repositories, the
	repodata folder doesn't need to be synced, and Repo.getRepoData()
	was originally doing both the syncing of the repodata and the
	reading of the repomd.xml.
	- renamed Repo.getRepoContents() to Repo.readRepoContents()

	* dimsbuild/trunk/lib/dimsbuild/main.py: making the sharepath
	provided at the command line absolute.

	* dimsbuild/trunk/lib/dimsbuild/modules/sourcevars.py:
	- changed self.interface.getStoreInfo() to self.interface.getRepo()

	* dimsbuild/trunk/lib/dimsbuild/modules/stores.py:
	- removed StoresInterface; the stores event's interface is
	EventInterface
	- changed self.interface.getAllStoreIDs() to
	self.interface.getAllRepos()
	- changed repo.getRepoContents() to repo.readRepoContents()

	* dimsbuild/trunk/lib/dimsbuild/modules/comps.py:
	- the comps event was using the uElement() function from
	dims.configlib instead of dims.xmltree

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/__init__.py:
	- removed LocalStoresHook
	- the RPMS.post() creates the Repo object for the localrepo
	- the RPMS.post() adds the localrepo's Repo object to the 'repos'
	control variable

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/release.py:
	- changed all references from //release-rpm to /distro/rpms/release-
	rpm
	- the files installed to the etc folder are marked as config files
	- added all the obsoletes as provides as well

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/logos.py:
	- changed all references from //logos-rpm to /distro/rpms/logos-rpm
	- added a setup() function the LogosHook to set the fontfile, colors
	etc.

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/default_theme.py:
	- changed all references from //default-theme-rpm to
	/distro/rpms/default- theme-rpm

	* dimsbuild/trunk/lib/dimsbuild/modules/rpms/config.py:
	- changed all references from //config-rpm to /distro/rpms/config-rpm
	- added a setup() function to ConfigRpmHook that sets up
	self.data['input']

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/isolinux.py:
	- changed self.interface.getStoreInfo() to self.interface.getRepo()

	* dimsbuild/trunk/lib/dimsbuild/modules/installer/installer_release.
	py:
	- changed references from //release-files to /distro/installer
	/release-files

	*
	dimsbuild/trunk/lib/dimsbuild/modules/installer/installer_logos.py:
	- changed references from //installer/logos to /distro/installer/logos
	- added a setup() function that reads the locals file
	[ee69c07c13cd]

2007-06-27  uprakash  <uprakash>

	* build/install.sh, build/setup.cfg, build/setup.py:
	[svn] * dims-common/lib/mkrpm/rpmbuild.py: adding new features to
	setup.cfg

	* dims-common/trunk/build: using new features of setup.cfg

	* dimsbuild/trunk/build: Likewise

	* dimsdevice/trunk/build: Likewise
	[5d9aac1a050e]

	* build/install.sh, build/setup.cfg, build/setup.py:
	[svn] * dimsdevice/trunk/lib/:
	- moved *.py to dimsdevice/*.py

	* dimsdevice/trunk/build/:
	- using the new and improved setup.cfg capabilities

	* dimsbuild/trunk/build/:
	- Likewise

	* dims-common/trunk/build/:
	- Likewise

	* dims-common/trunk/lib/mkrpm/rpmbuild.py:
	- print useful error message when in quiet mode and an exception is
	raised.

	* dims-common/trunk/lib/md5lib.py:
	- fixed a typo

	* devtools/trunk/lib/srctest.py:
	- removed extraneous functionName parameter to run() function which is
	no longer required because the executable is no longer loaded,
	instead the process is forked.

	* devtools/trunk/lib/rpmlib.py:
	- Likewise

	* devtools/trunk/lib/macro.py:
	- fixed bug in __expandMacros() because of which there was no "-"
	between version and release of the dependency, when a version and
	release were specified in the setup.cfg without any macros.

	* runfromsource:
	- not providing the functionName parameter to runFromSource()

	* newproject.sh:
	- adding the new setup.py to the project tree

	* rpmbuild:
	- not providing the functionName parameter to the build() function
	call

	* dimsdevice/trunk/rpmbuild:
	- Likewise
	[5b30f93f1d0c]

2007-06-27  dmusgrave  <dmusgrave>

	* lib/dimsbuild/interface.py, lib/dimsbuild/modules/software.py,
	lib/dimsbuild/modules/sources.py, lib/dimsbuild/modules/stores.py:
	[svn] Summary: fixed the code in several places so that repodata
	path is respected; this should allow dimsbuild to work on redhat
	5-based distributions
	[64aeceda862c]

	* lib/dimsbuild/modules/sources.py:
	[svn] dimsbuild/lib/dimsbuild/modules/sources.py
	 * bugfix
	[1f9d9d8a997d]

	* bin/dimsbuild, lib/dimsbuild/__init__.py, lib/dimsbuild/difftest.py,
	lib/dimsbuild/event.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/main.py, lib/dimsbuild/modules/__init__.py,
	lib/dimsbuild/modules/comps.py, lib/dimsbuild/modules/gpg.py,
	lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/discinfo.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/isolinux.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/stores.py, lib/dimsbuild/modules/validate.py:
	[svn] Summary: Fixed import statements to fit with new structure.
	Added setup() function to event hooks, which is executed before
	either force() or run(), allowing common variables to be set up.
	Stores are now called 'repos' and are stored inside a control
	variable utilizing a common Repo object. This allows the Repo
	itself to know how to do the various tasks required of it, freeing
	up the client from this code.

	Details: dimsbuild/lib/dimsbuild/*
	 * updated import statements dimsbuild/lib/dimsbuild/interface.py
	 * StoreInfo class replaced by Repo class, which contains all of the
	original functionality with additional features
	 * Added EventInterface.getRepo()
	 * removed Repo.join()
	 * added Repo.rjoin() and repo.ljoin() (remote join, local join), which
	computes a path to the specified file/directory relative to the
	remote and local locations, respectively
	 * Repo.*file now just contain the basename of the given file - it is
	up to the client to know where they are stored
	 * bugfixes dimsbuild/lib/dimsbuild/event.py
	 * added event.status, boolean indicating force status
	 * removed Event.apply(), Event.force(), Event.skip()
	 * Event now contains the logic for running its hook's in an
	appropriate manner; the run() function calls the appropriate hook
	functions in the expected order
	 * Added setup() support to all hooks; hooks can now call setup(),
	which runs unless the event is being skipped
	 * removed complex event execution from Dispatch.process() - now merely
	calls pre(), run(), and post() in order
	dimsbuild/lib/dimsbuild/modules/validate.py
	 * changed ValidateHook.pre() to ValidateHook.setup()
	dimsbuild/lib/dimsbuild/modules/software.py
	 * now utilizes Repo objects
	dimsbuild/lib/dimsbuild/modules/sourcevars.py
	 * removed unused SourcevarsInterface
	dimsbuild/lib/dimsbuild/modules/pkglist.py
	 * now utilizes Repo objects dimsbuild/lib/dimsbuild/modules/stores.py
	 * moved StoresHook.pre() to StoresHook.setup()
	dimsbuild/lib/dimsbuild/modules/comps.py
	 * now utilizes Repo objects dimsbuild/lib/dimsbuild/modules/sources.py
	 * removed unused SourceStoreNotFoundError, SrpmSignatureInvalidError
	dimsbuild/lib/dimsbuild/modules/installer/*
	 * added setup() functions to register locals
	dimsbuild/lib/dimsbuild/modules/installer/isolinux.py
	 * initial commit of isolinux.py, essentially the 'isolinux' and
	'initrd.img' events that used to be contained inside bootiso.py
	dimsbuild/lib/dimsbuild/modules/installer/bootiso.py
	 * removed 'isolinux' and 'initrd.img' events; now contained in
	isolinux.py dimsbuild/lib/dimsbuild/modules/installer/__init__.py
	 * added 'isolinux' to MODULES list
	[519f8fce6476]

2007-06-26  dmusgrave  <dmusgrave>

	* lib/__init__.py, lib/callback.py, lib/constants.py, lib/difftest.py,
	lib/dimsbuild/__init__.py, lib/dimsbuild/callback.py,
	lib/dimsbuild/constants.py, lib/dimsbuild/difftest.py,
	lib/dimsbuild/event.py, lib/dimsbuild/interface.py,
	lib/dimsbuild/locals.py, lib/dimsbuild/magic.py,
	lib/dimsbuild/main.py, lib/dimsbuild/misc.py,
	lib/dimsbuild/modules/__init__.py, lib/dimsbuild/modules/comps.py,
	lib/dimsbuild/modules/gpg.py, lib/dimsbuild/modules/init.py,
	lib/dimsbuild/modules/installer/__init__.py,
	lib/dimsbuild/modules/installer/bootiso.py,
	lib/dimsbuild/modules/installer/discinfo.py,
	lib/dimsbuild/modules/installer/diskboot.py,
	lib/dimsbuild/modules/installer/installer_logos.py,
	lib/dimsbuild/modules/installer/installer_release.py,
	lib/dimsbuild/modules/installer/lib.py,
	lib/dimsbuild/modules/installer/loc.py,
	lib/dimsbuild/modules/installer/product.py,
	lib/dimsbuild/modules/installer/pxeboot.py,
	lib/dimsbuild/modules/installer/stage2.py,
	lib/dimsbuild/modules/installer/updates.py,
	lib/dimsbuild/modules/installer/xen.py,
	lib/dimsbuild/modules/iso.py, lib/dimsbuild/modules/pkglist.py,
	lib/dimsbuild/modules/publish.py,
	lib/dimsbuild/modules/rpms/__init__.py,
	lib/dimsbuild/modules/rpms/config.py,
	lib/dimsbuild/modules/rpms/default_theme.py,
	lib/dimsbuild/modules/rpms/lib.py,
	lib/dimsbuild/modules/rpms/logos.py,
	lib/dimsbuild/modules/rpms/release.py,
	lib/dimsbuild/modules/software.py, lib/dimsbuild/modules/sources.py,
	lib/dimsbuild/modules/sourcevars.py,
	lib/dimsbuild/modules/stores.py, lib/dimsbuild/modules/validate.py,
	lib/dimsbuild/resolve.py, lib/dimsbuild/splittree.py, lib/event.py,
	lib/interface.py, lib/locals.py, lib/magic.py, lib/main.py,
	lib/misc.py, lib/modules/__init__.py, lib/modules/comps.py,
	lib/modules/gpg.py, lib/modules/init.py,
	lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/discinfo.py,
	lib/modules/installer/diskboot.py,
	lib/modules/installer/installer_logos.py,
	lib/modules/installer/installer_release.py,
	lib/modules/installer/lib.py, lib/modules/installer/loc.py,
	lib/modules/installer/product.py, lib/modules/installer/pxeboot.py,
	lib/modules/installer/stage2.py, lib/modules/installer/updates.py,
	lib/modules/installer/xen.py, lib/modules/iso.py,
	lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/rpms/__init__.py, lib/modules/rpms/config.py,
	lib/modules/rpms/default_theme.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/modules/software.py, lib/modules/sources.py,
	lib/modules/sourcevars.py, lib/modules/stores.py,
	lib/modules/validate.py, lib/output.py, lib/resolve.py,
	lib/splittree.py:
	[svn] dimsbuild/lib
	 * added a 'dimsbuild' folder to mirror structure in site-packages and
	to remove clobbering troubles
	 * don't check this revision out, it won't work!
	[1e5d7feacb13]

	* lib/constants.py, lib/misc.py:
	[svn] dimsbuild/lib/constants.py
	 * initial commit of several useful constants values
	dimsbuild/lib/misc.py
	 * initial commit of several useful miscellaneous functions
	[9e647ac6c3a0]

2007-06-25  kwilliams  <kwilliams>

	* lib/modules/stores.py:
	[svn] stores.py
	* modified anaconda-ver regex to not require a leading "/"
	[a8cb4161bf23]

2007-06-25  dmusgrave  <dmusgrave>

	* lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/diskboot.py,
	lib/modules/installer/lib.py, lib/modules/installer/stage2.py,
	lib/modules/installer/xen.py, lib/modules/pkglist.py,
	lib/modules/software.py, lib/modules/sources.py,
	lib/modules/sourcevars.py, lib/modules/stores.py:
	[svn] dimsbuild/lib/interface.py
	 * reworked EventInterface.cache() to use sync instead of CacheManager
	 * EventInterface.getStoreInfo() now returns a StoreInfo object
	 * new StoreInfo object - contains id, scheme, netloc, directory,
	username, and password fields, as well as split() and join()
	methods
	 * removed EventInterface.storeInfoJoin() dimsbuild/lib/modules/*
	 * modified to use StoreInfo class instead of store info tuples
	 * modified to use sync instead of CacheManager
	dimsbuild/lib/modules/pkglist.py
	 * 'pkglist' event now requires 'local-repodata'
	 * DepsolveMDCreator now accepts a localrepos argument to its
	__init__() function and returns local repository paths instead of
	remote ones dimsbuild/lib/modules/stores.py
	 * 'stores' event now provides 'local-repodata'
	 * the stores event now downloads the repository metadata for each
	store listed in the config file to a local location
	 * store filelist contents are now determined using primary.xml.gz,
	inside the store's repodata folder. This method is considerably
	faster for remote repositories, since we don't have to spider out
	an index tree every time dimsbuild/lib/modules/comps.py
	 * 'comps' event now requires 'local-repodata'
	 * comps no longer caches repomd.xml or comps.xml files; these have
	already been downloaded by local-repodata; thus, it merely uses
	the local copies dimsbuild/lib/modules/installer/xen.py
	 * 'xen' event now requires 'initrd.img'
	dimsbuild/lib/modules/installer/bootiso.py
	 * 'isolinux' event no longer provides 'initrd.img'
	 * new event 'initrd-img', provides 'initrd.img', downloads and
	modifies the initrd.img from the base store
	 * removed all references to initrd.img from IsolinuxHook
	 * new hook InitrdHook; handles the responsabilities of the initrd-img
	event dimsbuild/lib/modules/installer/lib.py
	 * FileDownloadMixin.__init__() now accepts the storeid from which
	downloads should take place
	 * FileDownloadMixin.download() now takes no arguments; it
	automatically downloads all files in its f_locals variable to the
	software store dimsbuild/lib/main.py
	 * removed the cachemanager; replaced for now by double sync operations
	[4beb70b4fcb7]

2007-06-25  uprakash  <uprakash>

	* lib/modules/installer/bootiso.py, lib/modules/rpms/__init__.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms/__init__.py: the 'input-
	store-lists' is always updated with the 'localrepo' RPMS'
	information whether or not there are any changes in the localrepo.

	* dimsbuild/trunk/lib/modules/installer/bootiso.py: removed a debug
	statement.
	[d7e5609dd436]

2007-06-22  uprakash  <uprakash>

	* lib/modules/installer/installer_logos.py:
	[svn] fixed a typo in installer_logos.py
	[170d4f97de16]

	* lib/modules/installer/installer_logos.py,
	lib/modules/rpms/__init__.py, lib/modules/rpms/logos.py:
	[svn] * dimsbuild/lib/modules/rpms/__init__.py:
	- fixed RpmsHook.post() so that the localrepo.pkgs file is created
	on the first-run of dimsbuild as well. The localrepo.pkgs file is
	created by RepoContentMixin.compareRepoContents().

	* dimsbuild/lib/modules/rpms/logos.py:
	- creates the syslinux-vesa-splash.jpg for anaconda version >=
	11.2.0.66-1

	* dimsbuild/lib/modules/installer/installer_logos.py:
	- uses syslinux-vesa-splash.jpg instead of syslinux.png for anaconda
	version >= 11.2.0.66-1.
	[ce6a1cf7836d]

	* share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] the config-rpm.rng is nos using reference element 'element-
	path' instead of 'path-element'
	[096f02de2e75]

	* conf/example-centos-base-5/distro.conf:
	[svn] added sample CentOS 5 distro.conf
	[5f1318d37201]

	* lib/interface.py, lib/modules/installer/installer_logos.py,
	lib/modules/installer/installer_release.py,
	lib/modules/installer/lib.py, lib/modules/installer/product.py,
	lib/modules/rpms/__init__.py, lib/modules/rpms/default_theme.py,
	lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py, lib/modules/sourcevars.py,
	lib/modules/validate.py:
	[svn] * lib/interface.py: added the mdstores parameter to
	RepoConfigMixin's __init__(), the value of which defaults to
	<metadatadir>/stores

	* lib/modules/validate.py: fixed a print statement

	* lib/modules/sourcevars.py: added cleanup() to the error()

	* lib/modules/rpms/__init__.py:
	- the RPMS event is responsible for its own check, and doesn't
	undo/modify anything the stores event does.
	- in the RPMS.post(), if the localrepo store has changed, update the
	input-store-lists, set the input-store-changed to True, and run
	createrepo on the local store.

	* lib/modules/rpms/{logos,release}.py:
	- require 'sourcevars' instead of 'stores'

	* lib/modules/rpms/lib.py:
	- reads the source-vars control variable instead of the pkglist to
	get the product name and version.

	* lib/modules/installer/lib.py: optimized the
	ExtractHandler._modify() function

	* lib/modules/installer/product.py:
	- added a new entry to the custom.py dictionary for anaconda version
	11.2.0.66-1.
	[5e3e92e309df]

2007-06-22  kwilliams  <kwilliams>

	* lib/modules/installer/bootiso.py:
	[svn] bootiso.py
	* modified config difftest data to capture path element text AND
	attributes
	* added force function which removes the isolinux folder
	* modified check function to call force() on testdiffs() true. This
	ensures files removed from config are also removed from initrd.img
	[f4c7ad0572f9]

	* lib/modules/sourcevars.py:
	[svn] sourcevars.py
	 * close and cleanup initrd.img when done reading buildstamp
	[048fe41030c4]

2007-06-22  dmusgrave  <dmusgrave>

	* conf/example-fedora-base-7/distro.conf, lib/interface.py,
	lib/main.py, lib/modules/comps.py, lib/modules/gpg.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/discinfo.py,
	lib/modules/iso.py, lib/modules/rpms/__init__.py,
	lib/modules/stores.py,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/gpg.rng,
	share/dimsbuild/schemas/distro.conf/installer-release-files.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/stores.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] dimsbuild/share/dimsbuild/schemas/distro.conf/xen.rng
	 * allowed a 'dest' attribute on 'path' elements
	dimsbuild/share/dimsbuild/schemas/distro.conf/iso.rng
	 * allows all sizes; it is now up to iso's ValidateHook to actually
	process the given size to ensure it is valid
	 * defined 'element-create' and 'element-sets'
	dimsbuild/share/dimsbuild/schemas/distro.conf/lib.rng
	 * renamed defines to conform with best practices (valuetype-
	description)
	 * improved boolean handling
	dimsbuild/share/dimsbuild/schemas/distro.conf/stores.rng
	 * defined 'element-exclude', 'element-base', and 'element-additonal'
	dimsbuild/share/dimsbuild/schemas/distro.conf/comps.rng
	 * defined 'element-create-new', 'element-group', 'element-package',
	and 'element-use-existing'
	 * added a few missing <interleave>, <optional>, and <oneOrMore>
	elements dimsbuild/share/dimsbuild/schemas/distro.conf/sources.rng
	 * defined 'element-include' and 'element-stores'
	dimsbuild/share/dimsbuild/schemas/distro.conf/main.rng
	 * defined 'element-arch', 'element-modules', and 'element-plugins'
	dimsbuild/lib/interface.py
	 * added RepoContentMixin, a mixin to allow other classes to easily
	compute store contents from the primary.xml.gz included in its
	repodata folder dimsbuild/lib/modules/rpms/__init__.py
	 * moved the LocalStoresHook.pre() function to LocalStoresHook.post()
	in order to not interfere with normal stores generation
	dimsbuild/lib/modules/iso.py
	 * iso now cleans up (runs force()) when test_diffs() returns True
	dimsbuild/lib/modules/gpg.py
	 * moved GpgHook.write_metadata() from run() to apply()
	dimsbuild/lib/modules/stores.py
	 * added StoresInterface.getAllStoreIDs(), a function that returns all
	storeids in the config file
	 * completely replaced how StoresHook computes store contents. Instead
	of generating index trees (which is slow on remote servers), it
	downloads each store's repodata folder and utilizes
	interface.RepoContentMixin to compute RPM filelists
	 * future improvements will handle processing each store individually
	instead of as a group dimsbuild/lib/modules/comps.py
	 * CompsHook now extends DiffMixin
	dimsbuild/lib/modules/installer/bootiso.py
	 * updated L_FILES to include the file changes that began around
	anaconda version 11.2.0.66-1 - specifically, the removal of
	memtest and addition of vesamenu.c32
	 * updated CompsHook.DATA['output'] processing to use L_FILES for
	determining which files to include
	dimsbuild/lib/modules/installer/discinfo.py
	 * added TreeInfoHook and treeinfo events; used to create .treeinfo
	files in anaconda version >= 11.2.0.66-1 dimsbuild/lib/main.py
	 * added Builder.cvars['base-vars']['productpath']
	[4fb99c71cdc8]

2007-06-21  kwilliams  <kwilliams>

	* lib/modules/installer/pxeboot.py:
	[svn] pxeboot.py
	 * syncing (rather than symlinking) from isolinux folder as this is the
	standard
	[abc00caaa642]

	* lib/main.py, lib/modules/publish.py, lib/modules/rpms/release.py,
	share/dimsbuild/schemas/distro.conf/main.rng:
	[svn] Separated publishpath into webroot and distrosroot elements.
	Modified publish to clean up old publish dirs.

	share/dimsbuild/schemas/distro.conf/main.rng
	 * created publishpath parent and webroot and distroroot child elements

	lib/main.py
	 * read webroot and distrosroot elements, apply default values, and set
	global variables

	lib/modules/rpms/release.py
	 * use distrosroot to calculate base url in distro.repo

	lib/modules/publish.py
	 * use webroot and distrosroot to calculate PUBLISH_DIR
	 * use difftest to capture changes in PUBLISH_DIR and delete prior
	folder (and parent, if empty)
	[0a9316ec726c]

2007-06-20  uprakash  <uprakash>

	* share/dimsbuild/schemas/distro.conf/installer-logos.rng,
	share/dimsbuild/schemas/distro.conf/installer-release-files.rng:
	[svn] added the installer-logos and installer-release-file schemas
	[e6adf221f0c2]

	* lib/modules/installer/__init__.py,
	lib/modules/installer/installer_logos.py,
	lib/modules/installer/rpmextract.py:
	[svn] * dimsbuild/trunk/lib/modules/installer/*:
	- moved rpmextract.py to installer_logos.py
	[260887995697]

	* lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/diskboot.py,
	lib/modules/installer/installer_release.py,
	lib/modules/installer/lib.py, lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py:
	[svn] * dimsbuild/trunk/lib/modules/installer/*:
	- broke down the rpmextract module into two rpmextract.py and
	installer_release.py; in the next commit will move rpmextract to
	installer_logos.py
	- added validation for installer-logos and installer-release-files
	events.
	- moved the ExtractHandler to lib.py
	- installer-logos now provides installer-splash which diskboot.img
	uses.
	[4b8f23b7973e]

	* lib/difftest.py, lib/event.py, lib/magic.py,
	lib/modules/installer/rpmextract.py:
	[svn] * dimsbuild/trunk/lib/difftest.py:
	- removed extraneous for-loop in InputHandler.mdread() and
	OutputHandler.mdread()

	* dimsbuild/trunk/lib/magic.py:
	- adding magic number information of .jpg files; it is used to
	validate the .jpg file the installer-logos RPM creates for fedora
	7

	* dimsbuild/trunk/lib/installer/rpmextract.py:
	- creating a splash.jpg file for Fedora 7 instead of a splash.lss
	[8446296e0174]

	* lib/modules/rpms/__init__.py, lib/modules/rpms/config.py,
	lib/modules/rpms/default_theme.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	share/dimsbuild/schemas/distro.conf/config-rpm.rng,
	share/dimsbuild/schemas/distro.conf/default-theme-rpm.rng,
	share/dimsbuild/schemas/distro.conf/logos-rpm.rng,
	share/dimsbuild/schemas/distro.conf/release-rpm.rng,
	share/dimsbuild/schemas/distro.conf/rpms.rng:
	[svn] * dimsbuild/share/schemas/distro.conf/*:
	- added the schemas for the RPMS events

	* dimsbuild/lib/modules/rpms/*:
	- added hooks to the validate event that validate the configuration
	file.
	- removed usage for main.tree(), using osutils.find() instead.

	* dimsbuild/lib/modules/rpms/default_theme.py:
	- adding the default-theme RPM to the pkglist only if it's not there
	already.
	[c444dcfed097]

	* share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/gpg.rng,
	share/dimsbuild/schemas/distro.conf/lib.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/stores.rng:
	[svn] * dimsbuild/trunk/share/schemas/distro.conf/*:
	- added a lib.rng that contains common element definitions that can
	be used by the schemas of the individual events.
	- changed the schemas to use the lib.rng
	[66d3b1e9f4b1]

2007-06-20  kwilliams  <kwilliams>

	* lib/modules/stores.py:
	[svn] stores.py
	 * minor bug fix - setting input-store-changed to False (was True) in
	the skip case
	[a2a28cea1432]

	* lib/modules/installer/bootiso.py:
	[svn] bootiso.py
	* fixed bug in config path that was pointing at product.img, should
	have been pointing to initrd.img
	[199c7737265b]

2007-06-19  uprakash  <uprakash>

	* lib/modules/validate.py:
	[svn] * dimsbuild/trunk/lib/modules/validate.py:
	- printing out more user-friendly error messages when a schema read
	or a validation fails
	- now supports the working of the <include> RNG element. To
	accomplish this, I first cd into the schemas folder, do the
	parsing of the schema file and cd back to the previous working
	directory.
	[e74e6f4f8d09]

2007-06-19  kwilliams  <kwilliams>

	* lib/main.py, lib/modules/publish.py,
	share/dimsbuild/schemas/distro.conf/main.rng:
	[svn] trunk/lib/modules/publish.py
	 * collapsed webroot into publishpath
	 * collapsed prod-ver-arch folders into a single folder

	trunk/lib/main.py
	 * created pva (product-version-arch) cvar which is used by main.py in
	creating DISTRO_DIR and publish.py in creating PUBLISH_DIR

	trunk/share/dimsbuild/schemas/distro.conf/main.rng
	 * eliminated webroot element
	[bc4eb7e9fdfb]

	* conf/example-fedora-base-6/distro.conf, conf/example-fedora-
	base-7/distro.conf, conf/example-redhat-base-5/distro.conf:
	[svn] conf/example-fedora-base-6/distro.conf
	 * changed product from example to example-fedora

	conf/example-fedora-base-7-distro.conf
	 * likewise

	conf/example-redhat-base-5/distro.conf
	 * changed product from example to example-redhat
	[8509faf99c3e]

2007-06-19  dmusgrave  <dmusgrave>

	* lib/difftest.py, lib/modules/comps.py, lib/modules/iso.py,
	lib/modules/publish.py, lib/modules/validate.py:
	[svn] dimsbuild/difftest.py
	 * reduced verbosity of dprint() when output was unnecessary
	dimsbuild/modules/validate.py
	 * temporarily made a modular event for tester's sanity
	dimsbuild/modules/iso.py
	 * removed PkgorderHook
	 * removed '//source' from IsoHook.DATA['config']
	 * added cvars['source-include'] to IsoHook.DATA['variables']
	 * split trees are now stored in the builddata folder instead of in the
	iso folder dimsbuild/modules/comps.py
	 * comps now looks for groups to include in the distribution in //comps
	/create-new/ groups/group instead of //main/groups/group
	dimsbuild/modules/publish.py
	 * default publishpath changed from 'open_software' to 'distros'
	 * removed concept of release from publishing
	 * removed test folder
	 * removed test folder cleanup code
	[a192c2a83603]

	* lib/difftest.py, lib/modules/iso.py, lib/splittree.py:
	[svn] dimsbuild/lib/splittree.py
	 * major performance enhancements in split_trees(), split_rpms(), and
	split_srpms() - doing things the anaconda way makes for extremely
	slow processing due to multiple recursive du() calls that are
	totally unnecessary
	 * splitting trees is now more than 100 times faster
	dimsbuild/lib/modules/iso.py
	 * added some logging messages for the various stages of splittree (may
	no longer be necessary considering how fast it goes now)
	[688466a05c5e]

2007-06-18  kwilliams  <kwilliams>

	* share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] iso.rng
	 * rewrote size attribute content as regular expression
	[8863f52fb463]

	* share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] iso.rng
	 * adding "cd" and "dvd" to list of valid values
	[b4618c1a7ed9]

	* conf/example-centos-base-4.4/distro.conf, conf/example-fedora-
	base-6/distro.conf, conf/example-fedora-base-7/distro.conf:
	[svn] conf/example-centos-base-4.4
	 * deleted, no longer supported

	conf/example-fedora-base-6/distro.conf
	 * removed invalid //stores/server element
	 * modified macro element given above change

	conf/example-fedora-base-6/distro.conf
	 * likewise
	[ecbcefcb17fc]

	* share/dimsbuild/schemas/distro.conf/iso.rng:
	[svn] iso.rng
	 * removed not-yet-implemented release-files element
	[a718df165478]

	* lib/modules/iso.py:
	[svn] iso.py
	 * added test for existence of //iso/set elements prior to run, this is
	cleaner for several reasons - 1) clarity - the run code is never
	executed if iso sets are not specified, 2) cleanliness - the iso
	folder is deleted if isos were previously created and later removed
	and 3) performance - albeit a slight improvement - since run code is
	not executed.
	[607a48cb0f7d]

2007-06-18  uprakash  <uprakash>

	* lib/modules/rpms/config.py, lib/modules/rpms/default_theme.py,
	lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py:
	[svn] * dimsbuild/trunk/lib/rpms/release.py:
	- using functions instead of instance variables to get obsoletes,
	requirements and provisions, because their computation is
	different across RPMS events.

	* dimsbuild/trunk/lib/rpms/config.py:
	- Likewise

	* dimsbuild/trunk/lib/rpms/logos.py:
	- Likewise

	* dimsbuild/trunk/lib/rpms/default_theme.py:
	- Likewise
	- added a post-pkglist hook that adds the default-theme RPM to the
	included-packages list if and only if gdm exists in the pkglist.
	- also adds the default-theme RPM entry in the comps.xml for
	completeness.

	* dimsbuild/trunk/lib/rpms/lib.py:
	- making function calls instead of looking at instance variables to
	get the requirements, provisions and obsoletes.
	- removing RPMs from self.data['output'] when the RPM is deleted
	because os.stat() call on it fails; the os.stat() call is made
	when the metadata file is being written.
	[9160d25930e2]

2007-06-18  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/difftest.py, lib/modules/comps.py,
	lib/modules/installer/bootiso.py, lib/modules/iso.py,
	lib/modules/sourcevars.py, lib/modules/stores.py:
	[svn] dimsbuild/lib/difftest.py
	 * added a few debug messages, accompanied by a debug field, which if
	set, allows these messages to print dimsbuild/lib/modules/iso.py
	 * replaced osutils.tree() call with osutils.find()
	 * added log message for splitting trees
	dimsbuild/lib/modules/sourcevars.py
	 * added log message
	 * code cleanup dimsbuild/lib/modules/comps.py
	 * added error check in case a group specified in the config file does
	not exist dimsbuild/bin/dimsbuild
	 * added long-style options for log and error levels
	[7435e4c04b34]

2007-06-15  uprakash  <uprakash>

	* lib/modules/validate.py:
	[svn] * dimsbuild/trunk/validate.py:
	- the validate event
	- the ValidateInterface has the validate() function that events
	hooking onto it should use. In the regular case, just the xpath
	query to the module's section in the distro.conf and the relative
	path to the schema file relative to
	<sharepath>/schemas/distro.conf should be passed along.
	- can also provide a string to use as the schema instead of the
	filename.
	[d69d0f9392b9]

	* lib/difftest.py, lib/event.py, lib/interface.py, lib/main.py,
	lib/modules/comps.py, lib/modules/gpg.py, lib/modules/init.py,
	lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/iso.py, lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/rpms/config.py, lib/modules/rpms/default_theme.py,
	lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py, lib/modules/sources.py,
	lib/modules/stores.py, lib/output.py:
	[svn] Summary: Added validate hooks to most of the events. Moved the
	RPMS and rpmextract events to the new API.

	Details:
	* dimsbuild/lib/difftest.py:
	- the call to expand(self.data) is not made until expansion of
	self.data is required, so that events can modify the DiffMixin's
	data variable, and the changes are reflected in the handler's data
	variable, because they are pointers to the same object.
	- the addHandler() function call has the handler read the metadata
	file, so that handlers can be added dynamically.

	* dimsbuild/lib/interface.py:
	- removed the read_metadata() function call in DiffMixin's __init__()
	function, because <handler>.mdread() if called when a handler is
	added to the list of handlers.

	* dimsbuild/lib/output.py:
	- moved the tree() function to main.py

	* dimsbuild/lib/{iso.py,pkglist.py,gpg.py,stores.py,comps.py,sources
	.py}:
	- added hooks to the validate event.

	* dimsbuild/lib/installer/{xen.py,product.py,updates.py}:
	- Likewise

	* dimsbuild/lib/event.py:
	- not raise an exception when a module doesn't have the EVENTS
	attribute, because it is a plugin

	* dimsbuild/lib/main.py:
	- added the tree() function

	* dimsbuild/lib/rpms/*:
	- moved to the new API

	* dimsbuild/lib/installer/rpmextract.py:
	- Likewise
	[26d24b897a15]

	* share/dimsbuild/schemas/dimsbuild.rng,
	share/dimsbuild/schemas/distro.conf/comps.rng,
	share/dimsbuild/schemas/distro.conf/gpg.rng,
	share/dimsbuild/schemas/distro.conf/iso.rng,
	share/dimsbuild/schemas/distro.conf/main.rng,
	share/dimsbuild/schemas/distro.conf/pkglist.rng,
	share/dimsbuild/schemas/distro.conf/product.rng,
	share/dimsbuild/schemas/distro.conf/sources.rng,
	share/dimsbuild/schemas/distro.conf/stores.rng,
	share/dimsbuild/schemas/distro.conf/updates.rng,
	share/dimsbuild/schemas/distro.conf/xen.rng:
	[svn] initial commit of dimsbuild's schema files
	[523c2763412e]

	* share/dimsbuild/schemas/old-schemas/default.rng,
	share/dimsbuild/schemas/old-schemas/dimsbuild.rng:
	[svn] moved dimsbuild.rng and default.rng to old-schemas/
	[f219e9933349]

2007-06-14  dmusgrave  <dmusgrave>

	* lib/modules/iso.py, lib/modules/sources.py, lib/splittree.py:
	[svn] dimsbuild/lib/splittree.py
	 * revamped Timber.compute_layout() so that it is more robust and
	handles more potential input cases
	 * removed several instance variables that aren't necessary in this
	implementation dimsbuild/lib/modules/iso.py
	 * removed IsoHook callback functions; not necessary (currently)
	 * added IsoHook._generate_pkgorder() for generating a package ordering
	file
	 * moved pkgorder generation checking code into _generate_isotree() and
	simplified - if the pkgorder file isnt present in the metadata
	directory, create one
	 * updated the location of splitter.unified_source_tree
	 * added logic to IsoHook._check_isotree() to detect and correct
	malformed iso set directories dimsbuild/lib/modules/sources.py
	 * minor bugfixes
	[fe22e0ffcfff]

2007-06-14  kwilliams  <kwilliams>

	* lib/modules/sourcevars.py:
	[svn] sourcevars.py
	 * added error function
	[539ea2665ecf]

2007-06-14  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/difftest.py, lib/interface.py, lib/main.py,
	lib/modules/comps.py, lib/modules/gpg.py, lib/modules/iso.py,
	lib/modules/sources.py, lib/modules/stores.py, lib/output.py:
	[svn] dimsbuild/lib/*
	 * updated to new configlib and xmltree API
	[c6ae056aaa23]

2007-06-14  kwilliams  <kwilliams>

	* lib/modules/sources.py:
	[svn] sources.py
	 * provide source-include cvar for use by iso event
	 * removed --no-srpms command line argument (use --skip source instead)
	 * fixed SPRM regex (arch for srpms is "src")
	 * changed output folder from SOFTWARE_STORE/SRPMS to DISTRO_DIR/SRPMS
	 * added difftest for config and output
	 * replaced pkglist-changed test with new-rpms test
	 * modified force function to remove mdfile
	 * moved list compare actions from __init__ to run function
	 * removed _srpm_check
	[1fee6495670a]

	* lib/interface.py, lib/main.py:
	[svn] main.py
	 * added DISTRO_DIR constant

	interface.py
	 * exposing DISTRO_DIR variable for use by source and iso events
	[cf070ac73049]

2007-06-13  kwilliams  <kwilliams>

	* lib/modules/sourcevars.py:
	[svn] sourcevars.py
	 * removed log output
	[cba43556d158]

2007-06-13  dmusgrave  <dmusgrave>

	* bin/dimsbuild, lib/difftest.py, lib/interface.py, lib/locals.py,
	lib/main.py, lib/modules/comps.py, lib/modules/gpg.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/discinfo.py,
	lib/modules/installer/lib.py, lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/iso.py, lib/modules/pkglist.py,
	lib/modules/rpms/config.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/modules/software.py, lib/modules/sources.py,
	lib/modules/sourcevars.py, lib/modules/stores.py, lib/output.py:
	[svn] dimsbuild/lib/*
	 * modified to reflect new ConfigLib and xmltree APIs
	 * Config.emget(), Config.mget() replaced with Config.xpath()
	 * Config.eget() replaced with Config.get()
	 * xmltree.get() replaced with xmltree.xpath()
	 * xmltree.iget() replaced with xmltree.get()
	[c77d5fe11ffa]

	* lib/modules/iso.py, lib/modules/sourcevars.py:
	[svn] dimsbuild/lib/modules/iso.py
	 * removed event 'pkgorder'
	 * package ordering now only occurs when the number of isos to be
	generated is one or higher, and when pkglist has changed and
	another pkglist file isn't already specified
	dimsbuild/lib/modules/sourcevars.py
	 * added a logging message for source vars
	[6b9dde488a04]

	* lib/difftest.py, lib/event.py, lib/interface.py, lib/main.py,
	lib/modules/comps.py, lib/modules/gpg.py, lib/modules/init.py,
	lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/discinfo.py,
	lib/modules/installer/diskboot.py, lib/modules/installer/lib.py,
	lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/iso.py, lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/software.py, lib/modules/sources.py,
	lib/modules/stores.py, lib/output.py, lib/splittree.py:
	[svn] dimsbuild/lib/difftest.py
	 * initial commit of diffest, a replacement for output.py
	 * provides a modular framework with which code can test on any
	condition by providing and registering a handler class with the
	main DiffTest class
	 * also provides a method of storing metadata between executions in an
	xml format, allowing a program to compare input and/or output
	between two subsequent runs dimsbuild/lib/splittree.py
	 * Timber.split_rpms() no longer places RPMs in a 'RPMS' directory
	underneath the product name (note: we probably want productpath
	support here instead of assuming things...)
	 * updated nregex expressions on file and directory list generation to
	reflect the fact that RPMs are no longer stored in a 'RPMS'
	directory dimsbuild/lib/interface.py dimsbuild/lib/interface.py
	 * updated config.[e]mget() calls to include a fallback, where
	necessary, to avoid xmltree.XmlPathErrors
	 * added DiffMixin, a helpful frontend to difftest.py allowing a Hook
	to easily check input, output, variables, and config values
	across dimsbuild sessions. DiffMixin processes the same DATA
	structures that were formerly handled by output.py
	dimsbuild/lib/output.py
	 * this file is now DEPRECATED; use difftest and interface.DiffMixin
	instead dimsbuild/lib/event.py
	 * events now implicitly provide their own id; for example, an Event
	with Event.id = 'comps' now provides 'comps' in addition to
	whatever it currently provides
	 * Event.run() now runs hook.check() for each hook in Event.hooks to
	determine whether or not to execute that particular hook
	 * added Dispatch.pprint(), a dispatch event pretty-printer, with
	hierarchies!
	 * removed pprint() dimsbuild/lib/main.py
	 * removed Builder.handlers dimsbuild/lib/modules/iso.py
	 * switched from OutputEventHandler to DiffMixin
	 * removed IsoHook._test_runstatus(); replaced with IsoHook.check()
	 * removed cleanup code; automatically handled via ListCompareMixin
	 * unlinked pkgorder event from iso event; if we really want these two
	to run together, they should be made into a single event;
	otherwise, they should be independent
	dimsbuild/lib/modules/software.py
	 * 'software' event no longer provides 'software' explicitly
	 * 'software' event now provides 'rpms-directory'
	 * 'software' event no longer conditionally requires 'comps.xml'
	 * 'software' event now conditionally requires 'comps-file'
	dimsbuild/lib/modules/pkglist.py
	 * 'repogen' event no longer provides 'repoconfig'
	 * 'repogen' event now provides 'repoconfig-file'
	 * 'repogen' event no longer conditionally requires 'comps.xml'
	 * 'repogen' event now conditionally requires 'comps-changed'
	 * 'pkglist' event now provides 'pkglist-file' and 'pkglist-changed'
	 * 'pkglist' event no longer requires 'repoconfig'
	 * 'pkglist' event now requires 'repoconfig-file'
	 * 'pkglist' event no longer conditionally requires 'stores'
	 * 'pkglist' event now conditionally requires 'input-store-changed'
	 * removed PkglistHook._test_runstatus(), replaced by
	PkglistHook.check() dimsbuild/lib/modules/gpg.py
	 * switched from OutputEventHandler to DiffMixin
	 * 'gpgsign' event no longer provides 'gpgsign' explicitly
	 * 'gpgsign' event now conditinally requires 'new-rpms'
	 * removed GpgsignHook._test_runstatus(), replaced by
	GpgsignHook.check() dimsbuild/lib/modules/stores.py
	 * 'stores' event no longer provides 'stores' explicitly
	 * 'stores' event now provides 'input-store-lists' and 'input-store-
	changed' dimsbuild/lib/modules/comps.py
	 * 'comps' event no longer provides 'comps.xml'
	 * 'comps' event now provides 'comps-file' and 'comps-changed'
	 * 'comps' event now conditionally requires 'input-store-changed'
	 * removed CompsHook._test_runstatus(), replaced by CompsHook.check()
	 * updated config.[e]mget() calls to include a fallback, where
	necessary, to avoid xmltree.XmlPathErrors
	dimsbuild/lib/modules/publish.py
	 * 'publish' event no longer provides 'publish' explicitly
	dimsbuild/lib/modules/init.py
	 * 'init' event no longer provides 'init' explicitly
	 * 'init' event now provides 'option-parser'
	 * 'applyopt' event no longer provides 'applyopt' explicitly
	 * 'applyopt' event now requires 'option-parser'
	 * 'validate' event no longer provides 'validate' explicitly
	 * 'MAIN' event no longer provides 'MAIN' explicitly
	dimsbuild/lib/modules/sources.py
	 * 'sources' event now requires 'pkglist-changed'
	 * SourceHook now doesn't validate RPM headers at all when looking for
	source rpm
	 * removed SourceHook._test_runstatus(), replaced with
	SourceHook.check() dimsbuild/lib/modules/installer/rpmextract.py
	 * updated config.[e]mget() calls to include a fallback, where
	necessary, to avoid xmltree.XmlPathErrors
	dimsbuild/lib/modules/installer/xen.py
	 * removed XenHook._test_runstatus(), replaced with XenHook.check()
	dimsbuild/lib/modules/installer/bootiso.py
	 * 'isolinux' event no longer provides 'isolinux' explicitly
	 * 'isolinux' event now provides 'isolinux-changed'
	 * 'bootiso' event no longer provides 'boot.iso'
	 * 'bootiso' event now conditionally requires 'isolinux-changed'
	 * removed IsolinuxHook._check_runstatus(), replaced with
	IsolinuxHook.check()
	 * removed BootisoHook._check_runstatus(), replaced with
	Bootiso.check() dimsbuild/lib/modules/installer/diskboot.py
	 * 'diskboot-image' event no longer requires 'anaconda-version' or
	'source-vars'
	 * 'diskboot-image' event now conditionally requires 'isolinux-changed'
	 * removed DiskbootHook._test_runstatus(), replaced with
	DiskbootHook.check() dimsbuild/lib/modules/installer/discinfo.py
	 * switched from OutputEventHandler to DiffMixin
	 * updated DiscinfoHook.ID to 'installer.discinfo.discinfo'
	 * removed DiscinfoHook._check_runstatus(), replaced with
	DiscinfoHook.check()
	 * moved most code out of DiscinfoHook.apply() into Discinfo.run()
	dimsbuild/lib/modules/installer/__init__.py
	 * 'INSTALLER' event no longer provides 'INSTALLER' explicitly or
	'software' (wtf?) dimsbuild/lib/modules/installer/product.py
	 * removed ProductHook._test_runstatus(), replaced with
	ProductHook.check() dimsbuild/lib/modules/installer/updates.py
	 * removed UpdatesHook._test_runstatus(), replaced with
	UpdatesHook.check() dimsbuild/lib/modules/installer/lib.py
	 * switched from OutputEventHandler to DiffMixin
	 * removed ImageModifier.check_run_status()
	[5a6020f6161e]

2007-06-12  kwilliams  <kwilliams>

	* lib/modules/iso.py:
	[svn] iso.py
	 * fixed broken else clause
	[44f21e5e769e]

	* lib/modules/iso.py:
	[svn] iso.py
	 * pkgorder runs only if iso/set(s) specified
	 * iso event uses output event handler
	 * iso runs only if input changed and iso/sets(s) specified
	[42b333365254]

	* lib/modules/sourcevars.py:
	[svn] sourcevars.py
	* use cache manager to download initrd.img
	[9583c4f6f6ff]

2007-06-11  kwilliams  <kwilliams>

	* lib/modules/rpms/lib.py:
	[svn] lib.py
	 * test for and create included-packages and excluded-packages cvars
	[be41139a12ae]

2007-06-11  dmusgrave  <dmusgrave>

	* lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/gpg.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/discinfo.py,
	lib/modules/installer/diskboot.py, lib/modules/installer/lib.py,
	lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py, lib/modules/iso.py,
	lib/modules/pkglist.py, lib/modules/rpms/__init__.py,
	lib/modules/rpms/lib.py, lib/modules/software.py,
	lib/modules/sources.py, lib/modules/sourcevars.py,
	lib/modules/stores.py:
	[svn] Summary: Changed cvar from a dict into a CvarDict, a
	dictionary with automatic error handling. Also changed the default
	return value of the case when a given cvar isn't specified from
	False to None so that applications can know whether or not a given
	cvar has been specified at all.

	Details: dimsbuild/lib/interface.py
	 * removed EventInterface.set_cvar() and EventInterface.get_cvar()
	dimbsuild/lib/main.py
	 * added CvarsDict, a simple dictionary subclass that returns None when
	a specified key is not found in the mapping table
	dimsbuild/lib/modules/*
	 * updated all modules to use the new cvars style. Specifically,

	 self.interface.set_cvar(key, value) => self.interface.cvars[key]
	= value self.interface.get_cvar(key[, fallback]) =>
	self.interface.cvars[key] [or fallback]
	[0a48e882bca2]

	* lib/event.py, lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/gpg.py, lib/modules/installer/__init__.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/diskboot.py,
	lib/modules/installer/lib.py, lib/modules/installer/product.py,
	lib/modules/installer/pxeboot.py, lib/modules/installer/stage2.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/iso.py, lib/modules/sources.py,
	lib/modules/sourcevars.py, lib/resolve.py, lib/splittree.py:
	[svn] Summary: In an effort to improve both event ordering
	resolution and the behavior of 'requires' and 'provides' elements in
	the children of meta events, the event order resolution system was
	rewritten. It now makes use of directed graphs to model event
	orderings; each event is represented by a node and each dependency
	by a directed edge. By performing a topological sort on all the
	events in the graph, an appropriate event execution ordering can
	easily be computed.

	This resolution system further supports 'tiered' dependency solving
	- specifically, the case where a meta event has one or more
	children. By propagating into the parent's provides field all
	previous provisions at a given level, the new system allows meta
	event children to require things not explicitly provided by their
	parent. Furthermore, the same mechanism allows meta event children
	to provide things to ancestor events as well.

	Furthermore, this system allows for much more accurate error
	detection in the resolution process. Instead of merely detecting if
	an event set is unresolvable, the resolution system can print out
	exactly which dependencies are unresolved. Additionally, it is
	capable of finding and printing any cycles present in the event set.

	This change bumps the supported API to 4.1 because children of meta
	events can now require something that is not explicitly provided by
	their parent.

	Details: dimsbuild/lib/splittree.py
	 * fixed the placement of an error message dimsbuild/lib/resolve.py
	 * complete rewrite
	 * dependency solving now performed via directed graph
	 * events can now require/provide to other events outside their
	immediate scope dimsbuild/lib/interface.py
	 * removed EventInterface.add_handler()
	 * removed EventInterface.get_handler() dimsbuild/lib/modules/iso.py
	 * fixed <string-format> elements for id 'base', 'rpms', and 'pixmaps'
	dimsbuild/modules/sourcevars.py
	 * renamed event from 'sourcevars' to 'source-vars'
	 * 'source-vars' no longer provides 'ssourcevars' (sic)
	 * 'source-vars' now provides 'source-vars'
	 * removed SourcevarsHook.locals_imerge(); replaced with the function
	in main.py dimsbuild/lib/modules/gpg.py
	 * fixed a bug in SoftwareHook.pre() where hook was looking for
	nonexistant cvar dimsbuild/modules/comps.py
	 * renamed CompsHook.m_compsfile to CompsHook.s_compsfile
	dimsbuild/lib/modules/sources.py
	 * renamed SrpmNotFound to SrpmNotFoundError
	dimsbuild/lib/modules/installer/rpmextract.py
	 * bumped API version to 4.1
	 * updated InstallerLogosHook.ID to 'installer.rpmextract.installer-
	logos'
	 * updated InstallerReleaseFiles.ID to 'installer.rpmextract.installer-
	release-files' dimsbuild/lib/modules/installer/xen.py
	 * renamed 'xen' event to 'xen-images'
	 * updated XenHook.ID to 'installer.xen.xen-images'
	dimsbuild/lib/modules/installer/bootiso.py
	 * bumped API version to 4.1
	 * 'isolinux' now requires 'anaconda-version' and 'source-vars'
	 * updated Isolinux.ID to 'installer.bootiso.isolinux'
	 * updated BootIsoHook.ID to 'installer.bootiso.bootiso'
	 * added a check in BootIsoHook._test_runstatus() to ensure the boot
	iso exists dimbuild/lib/modules/installer/diskboot.py
	 * bumped API version to 4.1
	 * renamed 'diskboot' event to 'diskboot-image'
	 * 'diskboot-image' no longer provides 'diskboot'
	 * 'diskboot-image' now provides 'diskboot.img'
	 * 'diskboot-image' now requires 'anaconda-version' and 'source-vars'
	 * updated DiskbootHook.ID to 'installer.diskboot.diskboot-image'
	dimsbuild/lib/modules/installer/__init__.py
	 * 'INSTALLER' no longer requires 'anaconda-version', 'software', or
	'rpms-directory'
	 * 'INSTALLER' no longer conditionally requires 'gpgsign'
	dimsbuild/lib/modules/installer/pxeboot.py
	 * renamed 'pxeboot' event to 'pxeboot-images'
	 * updated PxebootHook.ID to 'installer.pxeboot.pxeboot-images'
	dimsbuild/lib/modules/installer/product.py
	 * bumped API version to 4.1
	 * renamed 'product' event to 'product-image'
	 * 'product-image' now requires 'anaconda-version'
	 * updated ProductHook.ID to 'installer.product.product-image'
	dimsbuild/lib/modules/installer/stage2.py
	 * bumped API version to 4.1
	 * renamed 'stage2' event to 'stage2-images'
	 * updated Stage2Hook.ID to 'installer.stage2.stage2-images'
	dimsbuild/lib/modules/installer/updates.py
	 * bumped API version to 4.1
	 * renamed 'updates' event to 'updates-image'
	 * 'updates-image' now requires 'anaconda-version'
	 * added UpdatesHook.VERSION
	 * updated UpdatesHook.ID to 'installer.updates.updates-image'
	dimsbuild/lib/modules/installer/lib.py
	 * renamed ImageModifier to ImageModifyMixin
	 * renamed FileDownloader to FileDownloadMixin
	 * removed locals_imerge(); uses the one defined in main.py
	dimsbuild/lib/event.py
	 * removed Event.raise_self(); no longer necessary
	 * removed tree API wrapping functions; no longer necessary
	 * Dispatch objects now handle calling event functions as necessary
	 * removed Dispatch.raise_event(); no longer necessary
	 * updated Dispatch.__resolve() to use new resolve.py functions
	 * removed EventFunctionIterator; dispatch objects now handle calling
	functions in order
	 * added ResolveResultIterator, an iterator over the results of a
	Resolve.resolve() function call
	 * updated depthfirst() to no longer return the same event multiple
	times as was necessary when using EventFunctionIterator
	 * pprint() is no longer broken considering the previous changes
	dimsbuild/lib/main.py
	 * bumped API version to 4.1
	 * added check in Build._get_mdlr_events() for the -1 status return
	code from Dispatch's event iterator
	[4c472388948a]

2007-06-08  kwilliams  <kwilliams>

	* lib/modules/sourcevars.py:
	[svn] sourcevars.py
	* fixed type in provides
	[d02d798e9c2d]

	* lib/modules/installer/discinfo.py, lib/modules/installer/lib.py,
	lib/modules/installer/loc.py, lib/modules/sourcevars.py:
	[svn] sourcevars.py, installer/loc.py, installer/discinfo.py,
	installer/lib.py
	 * sourcevars.py and lib.py now use shared L_IMAGES and
	L_BUILDSTAMP_FORMAT from locals.py
	 * .discinfo now created from scratch
	[8e8a5675e0ee]

	* lib/locals.py:
	[svn] locals.py
	 * thinned out locals.py to include only L_BUILDSTAMP_FORMAT and
	L_IMAGES which are used across installer and sourcevars events
	[aaafabce3f89]

2007-06-07  uprakash  <uprakash>

	* lib/modules/rpms/lib.py:
	[svn] * dimsbuild/trunk/lib/rpms/lib.py:
	- fixed a bug because of which the RPMS weren't always being added
	to the metadata struct.
	[6a5576480ca3]

	* lib/main.py, lib/modules/comps.py, lib/modules/gpg.py,
	lib/modules/installer/__init__.py,
	lib/modules/installer/rpmextract.py, lib/modules/pkglist.py,
	lib/modules/rpms/__init__.py, lib/modules/rpms/config.py,
	lib/modules/rpms/default_theme.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/modules/software.py, lib/modules/sources.py,
	lib/modules/stores.py, lib/output.py:
	[svn] * dimsbuild/lib/output.py:
	- reimplemented _has_changed() to use listcompare.compare()
	- cleaned up the imports
	- cleaned up some debug statements

	* dimsbuild/lib/main.py:
	- added the uElement() function that, in a xmltree element, returns
	the element whose name is provided or creates that element if it is
	not found.

	* dimsbuild/lib/modules/software.py:
	- moved the RPMS destination one level up, i.e. from os/product/RPMS
	to os/product
	- provides the "rpms-directory" control variable used by the rpm
	extract events, the gpg signing events, and others.

	* dimsbuild/lib/modules/comps.py:
	- as a side effect of the RPMs folder being moved one level up, the
	base folder in os/product has been deleted.
	- the comps event uses the comps.xml in the metadata directory instead
	of the one in os/product/base.

	* dimsbuild/lib/modules/gpg.py:
	- requires and uses the "rpms-directory" control variable.

	* dimsbuild/lib/modules/pkglist.py:
	- fixed a typo.

	* dimsbuild/lib/modules/stores.py:
	- using the uElement() function in add_store() to make sure that the
	missing parent elements are created, if ever it so be.

	* dimsbuild/lib/modules/rpms/__init__.py:
	- added a pre-hook to the source event that adds the local SRPMS
	folder to the list of stores to look at to download SRPMS from.

	* dimsbuild/lib/modules/rpms/lib.py:
	- being smarter about skipping events.
	- fixed a bug in apply()

	* dimsbuild/lib/modules/installer/__init__.py:
	- added a "requires" for "rpms-directory".

	* dimsbuild/lib/modules/installer/rpmextract.py:
	- using the "rpms-directory" set by the software event to search for
	the RPMs instead of doing a recursive find starting at the
	os/-level.
	- ignored source RPMS.

	* dimbuild/lib/modules
	[f0264ea96dc4]

2007-06-07  kwilliams  <kwilliams>

	* lib/modules/comps.py:
	[svn] comps.py
	 * removed discinfo requires
	[c3f49d746564]

	* lib/modules/metadata.py, lib/modules/sourcevars.py:
	[svn] metadata.py
	 * moved to installer/discinfo

	sourcevars
	 * added
	 * provides source-vars
	[d3604083f441]

	* lib/modules/installer/__init__.py,
	lib/modules/installer/discinfo.py:
	[svn] __init__py
	 * added discinfo module

	discinfo.py
	 * new renamed and repurposed from ../metadata.py
	 * no longer provides source-vars
	[b0fe312c0f31]

2007-06-07  dmusgrave  <dmusgrave>

	* conf/example-fedora-base-7/distro.conf, lib/callback.py,
	lib/event.py, lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/gpg.py, lib/modules/init.py,
	lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/diskboot.py, lib/modules/installer/lib.py,
	lib/modules/installer/product.py, lib/modules/installer/pxeboot.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/stage2.py, lib/modules/installer/updates.py,
	lib/modules/installer/xen.py, lib/modules/iso.py,
	lib/modules/metadata.py, lib/modules/pkglist.py,
	lib/modules/publish.py, lib/modules/rpms/__init__.py,
	lib/modules/rpms/config.py, lib/modules/rpms/default_theme.py,
	lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py, lib/modules/software.py,
	lib/modules/sources.py, lib/modules/stores.py, lib/output.py,
	lib/resolve.py:
	[svn] Merged dimsbuild/branches/hook with dimsbuild/trunk/, revision
	1800:1806
	[9497e19da4b6]

2007-05-31  uprakash  <uprakash>

	* conf/example-fedora-base-6/distro.conf:
	[svn] * dimsbuild/trunk/conf/example-fedora-base-6/distro.conf:
	- removed the <groups>, <packages> and <logos> elements.
	[2a15da8c2c12]

2007-05-29  uprakash  <uprakash>

	* lib/modules/rpms/config.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms/config.py:
	- self.create was not being set correctly.
	[e24e7b8f313a]

	* lib/modules/comps.py, lib/modules/rpms/__init__.py,
	lib/modules/rpms/config.py, lib/modules/rpms/default_theme.py,
	lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms/__init__.py:
	- added the default_theme module to the MODULES list.

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- fixed a bug in the release event because of which the eula.py was
	being put in the release RPM even when there were no eula.txt
	files specified.

	* dimsbuild/trunk/lib/modules/rpms/logos.py:
	- creating a default theme, the name of which can be specified
	(defaults to the product name).

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- the RpmHandler base class, now accepts install and post_install
	scripts that the RPM being created should install.

	* dimsbuild/trunk/lib/modules/rpms/default_theme.py:
	- overrides the input distribution's default theme by modifying the
	/usr/share/gdm/themes/defaults.conf file.

	* dimsbuild/trunk/lib/modules/comps.py:
	- added support for --force.
	- can specify the package "type" and "requires" attributes when adding
	a package to the config file. The meaning of these attributes are
	the same as comps.xml's. The "type" defaults to "mandatory" and
	the "requires" defaults to None.
	- can specify the "default" attribute for a group, when adding a group
	to the config file. Defaults to True.
	[5b78bd997000]

2007-05-29  dmusgrave  <dmusgrave>

	* lib/interface.py, lib/modules/gpg.py,
	lib/modules/installer/__init__.py:
	[svn] dimsbuild/lib/modules/gpg.py
	 * added log message for signing rpms
	dimsbuild/lib/modules/installer/__init__.py
	 * added gpgsign as an dependency temporarily
	[c729234d4a61]

2007-05-25  dmusgrave  <dmusgrave>

	* lib/event.py, lib/main.py, lib/modules/comps.py, lib/modules/gpg.py,
	lib/modules/installer/rpmextract.py, lib/modules/pkglist.py,
	lib/modules/rpms/__init__.py, lib/modules/software.py,
	lib/modules/stores.py, lib/output.py:
	[svn] dimsbuild/lib/output.py
	 * fixed a missing has_key() bug
	 * added support for mgets in configvals; that is, an xpath query in a
	config file that results in multiple return values will be
	processed correctly
	 * added support in varvals for a few more types; specifically, ints,
	lists, and dictionaries
	 * reduced the input/output debug messages
	dimsbuild/lib/modules/software.py
	 * removed gpg key processing
	 * removed SoftwareInterface.rpmCheckSignatures()
	 * added SoftwareInterface.rpmCheckSignature(), a function for checking
	the signature of a single rpm against a specified gpg key
	 * added SoftwareInterface.signRpm(), a function for signing a single
	rpm
	 * removed gpg checking of rpms found both in the input and output
	stores
	 * no longer recomputes store index trees; uses 'input-store-lists'
	control var dimsbuild/lib/modules/stores.py
	 * stores now saves its store file lists to the 'input-store-lists'
	control var dimsbuild/lib/modules/installer/rpmextract.py
	 * changed log level of debug messages from 3 to 4
	dimsbuild/lib/event.py
	 * added until argument to Dispatch.process(), allowing dispatch to
	continue until the specified eventid is reached
	dimsbuild/lib/main.py
	 * makes use of new until argument in event.Dispatch.process()
	dimsbuild/lib/modules/gpg.py
	 * initial commit of gpg key signing of (new) packages
	[903841b6c632]

2007-05-25  kwilliams  <kwilliams>

	* lib/main.py, lib/modules/init.py:
	[svn] init.py
	 * added validate event

	main.py
	 * workaround so that validate event is raised
	[be2bf48340e2]

	* conf/dimsbuild.conf, runfromsvn:
	[svn] runfromsvn
	 * deleted
	[ff974ccf0f33]

2007-05-24  uprakash  <uprakash>

	* lib/modules/installer/rpmextract.py:
	[svn] * dimsbuild/trunk/lib/modules/installer/rpmextract.py:
	- made the paths to the logos and release RPM(s) absolute before
	calling the OutputEventHandler.__init__().
	[d86402554d90]

	* lib/output.py:
	[svn] * dimsbuild/trunk/lib/output.py:
	- the paths in the self.data['input'], if relative, are relative to
	the config file's directory.
	[30e62899d29e]

2007-05-24  dmusgrave  <dmusgrave>

	* lib/modules/installer/product.py, lib/modules/rpms/__init__.py,
	lib/modules/rpms/release.py, lib/modules/stores.py, lib/output.py:
	[svn] dimsbuild/output.py
	 * fixes to read_metadata() bugs that were causing events to run
	repeatedly when they shouldn't have been. This is still being
	investigated
	 * added mdvalid checks in each _test_*_changed() function
	 * added test function test_input_changed2()
	 * added test function diff()
	 * added test function test_output_changed2()
	dimsbuild/modules/rpms/__init__.py
	 * removed the '.discinfo' and 'stores' requirements
	 * postRPMS_hook() no longer modifies the local repository .pkgs file
	dimsbuild/modules/rpms/release.py
	 * gpgkey path retrieval now performs macro expansion
	dimsbuild/modules/stores.py
	 * added 'RPMS' requirement dimsbuild/modules/installer/product.py
	 * fixed missing data in installclasses introduced by copying from a
	not-wide-enough terminal window
	[9daa2300fef9]

2007-05-22  dmusgrave  <dmusgrave>

	* lib/event.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/diskboot.py, lib/modules/installer/lib.py,
	lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/rpms/config.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/modules/software.py, lib/output.py:
	[svn] Summary: Removed a lot of excess fat from output.py and all
	events that make use of it. Output is now merely responsible for
	saving and checking metadata each run; the modules themselves
	control what happens with this information and how things are
	actually processed. This should go a long way to making
	OutputEventHandler more palatable for the more complicated events,
	such as software.

	There is no longer an OutputEventMixin; individual modules were
	modified to perform this functionality themselves when necessary.
	As time goes on, these will be edited out.

	This is an initial commit; there is much work left to be done.

	Details: dimsbuild/lib/output.py
	 * removed OutputEventTemplate
	 * removed OutputEventMixin
	 * removed OutputEventHandler.mddir
	 * added OutputEventHandler.dprint(), a debug statement printer
	 * added OutputEventHandler.debug, a boolean indicating whether to
	print debug messages
	 * changed all commented debug statements to use dprint()
	 * all former OutputEventHandler functions (getInput(), addOutput(),
	etc) changed to simple stubs that print out a warning message
	when used. These will be phased out in the future
	 * OutputInvalidException renamed OutputInvalidError for consistency
	 * InputInvalidException renamed InputInvalidError for consistency
	dimsbuild/lib/modules/rpms/release.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/rpms/logos.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/rpms/config.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/rpms/lib.py
	 * updated to no longer use OutputEventMixin
	 * added RpmsInterface.pre() as the OutputEventMixin replacement
	 * added RpmsInterface.modify() as the OutputEventMixin replacement
	dimsbuild/lib/modules/software.py
	 * added in repoview spider protection (why are we spidering *again* in
	software anyway?) dimsbuild/lib/modules/installer/rpmextract.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/installer/xen.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/installer/bootiso.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/installer/diskboot.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/installer/product.py
	 * updated to no longer use OutputEventMixin
	 * added ProductImageModifier, which extends ImageModifier
	 * added ProductImageModifier.generate(), which calls
	_generate_installclass() if necessary
	 * added ProductImageModifier._generate_installclass(), which generates
	an appropriate installclass and writes it to the image
	 * added L_INSTALLCLASSES, the XML local data for installclasses
	 * added INSTALLCLASSES, a dictionary of installclasses keyed by their
	anaconda version dimsbuild/lib/modules/installer/updates.py
	 * updated to no longer use OutputEventMixin
	dimsbuild/lib/modules/installer/lib.py
	 * updated to no longer use OutputEventMixin dimsbuild/lib/event.py
	 * added pprint(), an event pretty printer that shows event hierarchy
	[f9a9e767ad9a]

2007-05-21  dmusgrave  <dmusgrave>

	* lib/interface.py, lib/magic.py, lib/main.py, lib/modules/comps.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/diskboot.py,
	lib/modules/installer/product.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py,
	lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/rpms/config.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/modules/software.py, lib/modules/stores.py, lib/output.py,
	lib/splittree.py:
	[svn] dimsbuild/lib/splittree.py
	 * removed erroneous import of filereader dimsbuild/lib/interface.py
	 * removed many erroneous imports
	 * EventInterface no longer uselessly extends PluginInterface
	 * removed EventInterface.forceEventDisable() and
	EventInterface.forceEventEnable() - these should not have been
	provided as interface functions as its functionality was intended
	to be used as user input only
	 * added EventInterface.add_handler() and EventInterface.get_handler(),
	which provide access to Build's handlers dictionary. This allows
	modules to 'save' handlers between events so they do not have to
	reinstantiate themselves
	 * removed GPGMixin dimsbuild/lib/magic.py
	 * moved sys import to 'if __name__ == '__main__': ' block
	dimsbuild/lib/output.py
	 * fixed a function execution ordering problem
	dimsbuild/lib/modules/rpms/release.py
	 * modified to use new handler interface functions
	dimsbuild/lib/modules/rpms/logos.py
	 * modified to use new handler interface functions
	 * moved L_LOGOS below hook functions for easier access
	dimsbuild/lib/modules/rpms/config.py
	 * modified to use new handler interface functions
	 * renamed event from 'config' to 'config_rpm'
	dimsbuild/lib/modules/rpms/lib.py
	 * removed HANDLERS, addHandler(), getHandler(); no longer required
	dimsbuild/lib/modules/software.py
	 * added GPG key processing to software
	 * software now can sign RPMs it downloads with the gpgkey specified in
	the config file
	 * can also check signatures against the keys provided in the config
	file
	 * removed SoftwareInterface.getPkglist() - replaced with the 'pkglist'
	cvar
	 * added GpgError dimsbuild/lib/modules/pkglist.py
	 * removed PkglistInterface; entire functionality ((get|set)Pkglist())
	handled via the cvar 'pkglist' dimsbuild/lib/modules/stores.py
	 * filelist generation updated to ignore repodata folders in an attempt
	to avoid incredible processing times on 'repoview' repodata
	folders dimsbuild/lib/modules/comps.py
	 * removed getCompsFile(), setCompsFile(), getRequiredPackages(), and
	setRequiredPackages() from CompsInterface; functionality handled via
	cvars 'comps-file' and 'user-required-packages'
	dimsbuild/lib/modules/installer/*.py
	 * modified to use new handler interface functions
	dimsbuild/lib/modules/publish.py
	 * mkdir statements are less verbose if the folders in question already
	exist dimsbuild/lib/main.py
	 * removed Builder.COMPS_FILE; this information is now contained in the
	'comps-file' cvar
	 * mkdir statements are less verbose if the folders in question already
	exist
	 * added Builder.handlers, a dictionary of handlers for use by modules
	in order to save time and memory from multiple instantiations of
	the same class
	[a7866c032fc7]

2007-05-18  uprakash  <uprakash>

	* lib/modules/rpms/release.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms/release.py:
	- was looking at the gpgkey element inside the main element, whereas
	gpgkey is a top-level element. Fixed.
	[b2296a7bd762]

	* lib/modules/installer/lib.py, lib/modules/installer/rpmextract.py,
	lib/modules/rpms/config.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/logos.py, lib/modules/rpms/release.py,
	lib/output.py:
	[svn] * dimsbuild/trunk/lib/output.py:
	- got rid of the 'file' parameter to OutputEventHandler.

	* dimsbuild/trunk/lib/rpms/{logos.py, release.py}:
	- not setting the 'parameter' to OutputEventHandler.

	* dimsbuild/trunk/lib/installer/{lib.py, rpmextract.py}:
	- Likewise.

	* dimsbuild/trink/lib/rpms/config.py:
	- made 'RPMS' the parent event of the config-rpm event.
	[420b41736975]

2007-05-18  dmusgrave  <dmusgrave>

	* lib/main.py:
	[svn] dimsbuild/lib/main.py
	 * added commented debug code for printing out event list
	[bae8f5e5e14a]

2007-05-17  uprakash  <uprakash>

	* lib/modules/rpms/config.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms/config.py:
	- bug fix in postconfig_hook(); wasn't adding the config RPM to the
	included-packages list correctly.
	[7870440c9655]

	* lib/modules/rpms/__init__.py, lib/modules/rpms/config.py,
	lib/modules/rpms/lib.py:
	[svn] Summary: Initial commit of the config-rpm module that is used
	to maintain the system's configuration.

	Details:
	* dimsbuild/trunk/lib/modules/rpms/config.py:
	- create the ConfigRpmHandler class to handle the creation of the
	config RPM.
	- the release and the logos RPM events both have the <create> element
	which the config RPM event doesn't have, so had to extend the
	testInputChanged() method in ConfigRpmHandler that doesn't look at
	the self.create instance variable.
	- self.create is now set to be True, when both the <config-
	rpm>/<requires> and <config-rpm>/<obsoletes> elements are present
	in the config file.
	- the rest of the event is similar to the other two RPM events.
	[243d47f1ab85]

2007-05-17  dmusgrave  <dmusgrave>

	* lib/modules/rpms/__init__.py:
	[svn] dimsbuild/lib/modules/rpms/__init__.py
	 * adjusted to new module group syntax
	[a8fd79613c53]

	* lib/event.py, lib/main.py, lib/modules/installer/__init__.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/diskboot.py,
	lib/modules/installer/product.py, lib/modules/installer/pxeboot.py,
	lib/modules/installer/stage2.py, lib/modules/installer/updates.py,
	lib/modules/installer/xen.py, lib/output.py:
	[svn] dimsbuild/lib/event.py
	 * process_module steps broken out into new functions
	 * new function load_events(); performs loading of events defined in a
	module's EVENTS list
	 * new function load_modules(); performs loading of modules defined in
	a module's MODULES list
	 * new function load_functions(); performs loading of hook functions
	defined in a module dimsbuild/lib/main.py
	 * SoftwareBuilder.__loadmodule() removed, replaced by load_module()
	 * new function load_module; replaces SoftwareBuilder.__loadmodule()
	dimsbuild/lib/modules/installer/__init__.py
	 * no longer does explicit importing of events, hook funcitons, and
	interfaces; makes use of new MODULES list to automatically import
	all events dimsbuild/lib/modules/installer/bootiso.py
	 * hack to fix mkisofs changing the mtime of the image it uses as the
	boot image dimsbuild/lib/modules/installer/diskboot.py
	 * diskboot event forced to run if 'isolinux-changed' cvar is set
	[d8c4f59bcb5f]

2007-05-16  uprakash  <uprakash>

	* lib/output.py:
	[svn] * dimsbuild/trunk/lib/output.py:
	- fixed a bug in _has_changed() which was returning True (i.e. the
	input/output has changed) when the input list was a list with an
	empty list element. Basically, the comparison [] =/= [[]] was
	returning True, when it should have returned False.
	[ce584fa7ee2a]

2007-05-16  dmusgrave  <dmusgrave>

	* lib/magic.py, lib/modules/images.py, lib/modules/software.py,
	lib/output.py:
	[svn] dimsbuild/lib/magic.py
	 * aded FILE_TYPE_FAT, checking for FAT16/32 filesystems
	dimsbuild/lib/modules/software.py
	 * re-enabled rpm signature checking
	 * removed rpm signing for now dimsbuild/lib/modules/images.py
	 * removed; replaced by installer/*.py
	[7d28c0d4c940]

	* lib/modules/installer/diskboot.py:
	[svn] dimsbuild/lib/modules/installer/diskboot.py
	 * initial commit of diskboot.py, a diskboot.img creater
	[f9ce36716e84]

	* lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/lib.py, lib/modules/installer/product.py,
	lib/modules/installer/pxeboot.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/updates.py, lib/modules/installer/xen.py:
	[svn] dimsbuild/lib/modules/installer/bootiso.py
	 * removed static INITRD_MD_STRUCT in favor of dynamically-generated
	bootiso_md_struct
	 * updated struct format to conform with new OutputEventHandler format
	dimsbuild/lib/modules/installer/lib.py
	 * removed references to MorphStructMixin; no longer required
	dimsbuild/lib/modules/installer/product.py
	 * removed static PRODUCT_MD_STRUCT in favor of dynamically-generated
	product_md_struct
	 * updated struct format to conform with new OutputEventHandler format
	dimsbuild/lib/modules/installer/pxeboot.py
	 * removed erroneous INITRD_MD_STRUCT
	dimsbuild/lib/modules/installer/rpmextract.py
	 * fixed ordering on event enables to improve performance in some cases
	dimsbuild/lib/modules/installer/updates.py
	 * removed static UPDATES_MD_STRUCT in favor of dynamically-generated
	updates_md_struct
	 * updated struct format to conform with new OutputEventHandler format
	dimsbuild/lib/modules/installer/xen.py
	 * removed static INITRD_MD_STRUCT in favor of dynamically-generated
	initrd_md_struct
	 * updated struct format to conform with new OutputEventHandler format
	dimsbuild/lib/modules/installer/__init__.py
	 * added diskboot events (file will be added in subsequent commit)
	[da23507738be]

2007-05-16  uprakash  <uprakash>

	* lib/output.py:
	[svn] Summary: Fixed a bug in OutputEventHandler because of which if
	there were files in the data struct's 'input' or 'output' list that
	were not there in the metadata file, the _has_changed() function was
	returning False, when in fact it should be returning True.

	Details:
	* dimsbuild/trunk/lib/output.py:
	- bug fix in OutputEventHandler.
	- _has_changed() function was erroneously returning False when there
	were new elements in the data struct that were not there in the
	metadata file.
	[c8b61d081231]

2007-05-15  uprakash  <uprakash>

	* lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py, lib/output.py:
	[svn] Summary: The OutputEventHandler class now expects a list of
	elements which could either be a path to a file or a list of paths
	to files. Got rid of the MorphStructMixin because now the calling
	application is responsible for having the data struct in the correct
	format. Also changed the RPMS events (logos-rpm and release-rpm) to
	not use the global structs.

	Details:
	* dimsbuild/trunk/lib/output.py:
	- the OutputEventHandler class expects a "data" dictionary with at
	most four keys: 'config', 'variables', 'input' and 'output'.
	- the 'config' key's value is a list of xpath queries.
	- the 'variables' key's value is a list of variables of the object.
	- the 'input' key's value is a list of elements which could be paths
	to files or a list of paths to files or both. Likewise for the
	'output' key.

	* dims/build/lib/modules/rpms:
	- changed code to conform to OutputEventHandler's requirements.

	Details:
	[f30b18918cc6]

	* lib/main.py, lib/modules/rpms/lib.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/release.py, share/dimsbuild/release/eula.py:
	[svn] Summary: Added the default eula.py to the dimsbuild/share
	directory. This module is installed by the release RPM at
	/usr/share/firstboot/modules. Changed the logos and release events
	to look at the config tree elements as specified in the spec. Broke
	down the <publishpath> element of the config file into two elements:
	<webroot> and <publishpath>.

	Details:
	* dimsbuild/trunk/share/dimsbuild/release/eula.py:
	- the eula.py copied into the release RPM and is used by firstboot.

	* dimsbuild/trunk/lib/modules/rpms/logos.py:
	- changed code to look for <logos-rpm> instead of the <logos>
	element in the config file.
	- changed the summary and description of the RPM.

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- all the eula.txt files are synced to builddata/release-rpm/eula/.
	- all the .repo files created/copied to builddata/release-rpm/repos/.
	- all the gpgs copied to builddata/release-rpm/gpg/.
	- all the release files copied to builddata/release-rpm/release.
	- all the rnotes files that have the .omf extension are copied to
	builddata/release-rpm/rnotes-omf/.
	- all the other release notes files are copied to builddata/release-
	rpm/rnote-doc/.
	[c8dba4af9754]

2007-05-15  dmusgrave  <dmusgrave>

	* lib/modules/installer/pxeboot.py, lib/modules/iso.py:
	[svn] dimsbuild/lib/modules/installer/pxeboot.py
	 * symlinking code modified to only run when necessary; this keeps iso
	generation from running unnecessarily
	[8777d429e69b]

2007-05-14  uprakash  <uprakash>

	* lib/modules/installer/rpmextract.py:
	[svn] * dimsbuild/trunk/lib/modules/installer/rpmextract.py:
	- changed release-package to release-files, conforming to the specs.
	[1eda7b0c3b5a]

2007-05-11  uprakash  <uprakash>

	* lib/modules/rpms/lib.py, lib/modules/rpms/release.py:
	[svn] Summary: The release-rpm event now creates the issue,
	issue.net, product-release and redhat-release files.

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- added the logic to create files that should be installed in the
	/etc folder and created the setup.cfg for that.
	[c8b913312018]

	* lib/modules/rpms/__init__.py, lib/modules/rpms/logos.py,
	lib/modules/rpms/rpms.py:
	[svn] moved rpms/rpms.py to rpms/logos.py.
	[da255895fa57]

	* lib/modules/installer/product.py, lib/modules/rpms.py,
	lib/modules/rpms/__init__.py, lib/modules/rpms/lib.py,
	lib/modules/rpms/release.py, lib/modules/rpms/rpms.py:
	[svn] moved the rpms.py dimsbuild module to an rpms modules group.

	* dimsbuild/trunk/lib/modules/rpms/__init__.py:
	- has definitions for the EVENTS and some pre- and post-hooks.

	* dimsbuild/trunk/lib/modules/rpms/release.py:
	- the release-rpm event

	* dimsbuild/trunk/lib/modules/rpms/rpms.py:
	- the logos-rpm event; to be moved to logos.py after this commit.

	* dimsbuild/trunk/lib/modules/rpms/lib.py:
	- the shared content between logos-rpm and releas-rpm
	[45c7d9c785d4]

2007-05-11  dmusgrave  <dmusgrave>

	* lib/modules/installer/product.py, lib/modules/installer/updates.py:
	[svn] dimsbuild/lib/modules/installer/product.py
	 * initial commit of a product.img generator
	dimsbuild/lib/modules/installer/updates.py
	 * initial commit of an updates.img generator
	[f3e2abb48777]

	* lib/modules/installer/__init__.py, lib/modules/installer/bootiso.py,
	lib/modules/installer/lib.py, lib/modules/installer/xen.py,
	lib/modules/iso.py:
	[svn] dimsbuild/lib/modules/iso.py
	 * added 'preiso' and 'postiso' events
	 * added preiso_hook() in an attempt to disable the iso event when
	changes are unnecessary (currently doesn't work because manifest
	reports that its contents have changed every run
	dimsbuild/lib/modules/installer/xen.py
	 * added prexen_hook() for event control over the 'xen' event
	 * corrected 'config' and 'input' elements in INITRD_MD_STRUCT to point
	to the correct location in the config file
	dimsbuild/lib/modules/installer/bootiso.py
	 * added preisolinux_hook() for event control over the 'isolinux' event
	 * added prebootiso_hook() for event control over the 'bootiso' event
	 * corrected 'config' and 'input' elements in PRODUCT_MD_STRUCT to
	point to the correct location in the config file
	dimsbuild/lib/modules/installer/lib.py
	 * fixed a bug causing the checking of the 'zipped' element to report
	incorrectly
	 * added Image._isvirtual(), which checks if the 'virtual' attribute is
	present on an image
	 * added mdfile=None argument to ImageModifier, allowing the
	specification of the mdfile manually
	 * added checking via _isvirtual() around all image synchronizations to
	avoid errors in virtual images
	dimsbuild/lib/modules/installer/__init__.py
	 * additional event imports for new pre/post events
	[527736b6c1ee]

	* lib/modules/installer/lib.py:
	[svn] dimsbuild/lib/modules/installer/lib.py
	 * initial commit of missing library python module for installer
	modules
	[6421bc5171c5]

2007-05-11  uprakash  <uprakash>

	* lib/modules/rpms/__init__.py:
	[svn] added the rpms/ modules group folder to the dimsbuild tree.
	[73dc7e85b22b]

2007-05-11  dmusgrave  <dmusgrave>

	* lib/modules/installer/__init__.py:
	[svn] dimsbuild/lib/modules/installer/__init__.py
	 * forgot to commit this last go - file contents help fool dimsbuild
	into thinking it is importing a single file
	[da0d26d7433b]

2007-05-11  uprakash  <uprakash>

	* lib/modules/installer/rpmextract.py:
	[svn] fixed a bug in rpmextract.py because of which temporary
	directories weren't deleted all the time.
	[5e96ed86444b]

2007-05-11  dmusgrave  <dmusgrave>

	* lib/event.py, lib/interface.py, lib/locals.py, lib/main.py,
	lib/modules/images.py, lib/modules/installer.py,
	lib/modules/installer/bootiso.py, lib/modules/installer/loc.py,
	lib/modules/installer/pxeboot.py,
	lib/modules/installer/rpmextract.py,
	lib/modules/installer/stage2.py, lib/modules/installer/xen.py,
	lib/modules/metadata.py, lib/modules/rpms.py:
	[svn] Summary: Dimsbuild module functionality extended to include
	'module groups'. These are groups of similarly-oriented modules that
	are contained within a subfolder of the modules/ directory inside
	libs. The first such module group is the 'installer' group, a group
	oriented around creating installation images.

	Details: dimsbuild/lib/event.py
	 * added in a check to ensure 'provides' and 'requires' fields on event
	structs are contained in lists, rather than strings
	dimsbuild/lib/main.py
	 * process_module() now support directory-based python modules as well
	as file modules dimsbuild/lib/locals.py
	 * added printf_locals(), function for printing a <string-format>
	element given a set of variables
	 * changed <string-format> elements to fit new format
	dimsbuild/modules/metadata.py
	 * added L_DISCINFO_PATH_NEW and L_DISCINFO_FORMAT_NEW, initial locals
	xml strings; they are currently unused dimsbuild/modules/rpms.py
	 * miscellaneous cleanup dimsbuild/modules/images.py
	 * begin phasing out IMAGES and all subevents
	dimsbuild/modules/installer/*.py
	 * initial commits of several installer events
	[efa002891f0c]

2007-05-10  uprakash  <uprakash>

	* lib/modules/images.py, lib/modules/installer.py,
	lib/modules/rpms.py:
	[svn] * dimsbuild/trunk/lib/modules/installer.py:
	- the images are copied over to the images-src/ folder by the
	installer-logos event (and not the logos event).

	* dimsbuild/trunk/lib/modules/rpms.py:
	- Likewise

	* dimsbuild/trunk/lib/modules/images.py:
	- the IMAGES event requires 'installer-logos'
	[c236957e4017]

	* lib/modules/rpms.py:
	[svn] not skipping the source rpms when creating the dimsbuild-
	local.pkgs file.
	[4a35997a5c4b]

	* lib/modules/installer.py, lib/modules/rpms.py:
	[svn] * dimsbuild/trunk/lib/modules/rpms.py:
	- now creating the dimsbuild-local.pkg file in the RPMS event's
	post-event hook.
	[4707cac8d8f0]

	* lib/magic.py, lib/modules/comps.py, lib/modules/installer.py,
	lib/modules/rpms.py:
	[svn] Summary: Checking magic number of the splash.lss to make sure
	it is valid. Also, changed the config XML element for the logos
	event from logos to logos-rpm.

	Details:
	* dimsbuild/trunk/lib/magic.py:
	- added magic number information for lss files

	* dimsbuild/trunk/lib/installer.py:
	- in the InstallerLogosHandler's testOutputValid() method, calling
	OutputEventMixin's verifyType() method to make sure that the
	splash.lss created is valid.

	* dimsbuild/trunk/lib/comps.py:
	- being smarter about the adding of the 'excluded-packages' and
	'included-packages' control variables.
	- previously, was adding the value returned by get_cvar('excluded-
	packages') to self.exclude only if the value is a list and was
	adding the value returned by get_cvar('included-packages') to
	packages only if the value is a list. Now using get_cvar()'s
	fallback parameter and setting it to [], so that I can add the
	value returned by get_cvar without checking whether it is a list
	or not.

	* dimsbuild/trunk/lib/rpms.py:
	- changed references to logos to logos-rpm.
	[2bb449621346]

	* lib/locals.py, lib/modules/comps.py, lib/modules/installer.py,
	lib/modules/rpms.py, lib/output.py:
	[svn] Summary: The font size of the text on the images created by
	the logos event depends on the size of the image. Added events to
	create splash.lss and copy over the release files to the software
	store. The comps event looks at the 'included-packages' and
	'excluded-packages' control variables to add or remove packages from
	the comps.xml.

	Details:
	* dimsbuild/trunk/lib/locals.py:
	- added the texthcenter, textvcenter and textmaxwidth elements to
	the logos elements which need to have text on the images. The
	texthcenter is the x-coordinate of the center of the text, the
	textvcenter is the y-coordinate of the center of the text and the
	textmaxwidth is the maximum number of pixels that should be used
	by the text. If any one of these three elements are not found in
	the logos element, no text is added to the image created that
	corresponds to the logos element.

	* dimsbuild/trunk/lib/modules/installer.py:
	- added events for installer-logos and installer-release-files. The
	former expands the logos RPM and copies the splash.lss creating it
	if it is not found in the RPM by converting the syslinux-
	splash.png file to a splash.lss file. An exception is raised in
	this case if no syslinux-splash.png file is found in the logos
	RPM. In the latter case, the release RPM (and the release-notes
	RPM if the user specifies it) are expanded and all the files that
	the user specifies are copied over to the software store. If the
	installer-logos doesn't find a logos RPM, or the installer-
	release-files doesn't find the release RPM, an RpmNotFound
	exception is raised.

	* dimsbuild/trunk/lib/modules/comps.py:
	- the comps event looks at the 'excluded-packages' control variable
	to exclude packages from the comps.xml and the 'included-packages'
	control variable to include packages in the comps.xml.

	* dimsbuild/trunk/lib/modules/rpms.py:
	- added a append_cvar() method to RpmsInterface that, instead of
	overriding a previously-set control variable, appends to it. This
	comes in handy for the 'excluded-packages' and 'included-packages'
	control variables.
	[b6c656ab2a28]

2007-05-08  dmusgrave  <dmusgrave>

	* lib/event.py, lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/images.py, lib/modules/init.py, lib/modules/iso.py,
	lib/modules/metadata.py, lib/modules/pkglist.py,
	lib/modules/rpms.py, lib/modules/software.py,
	lib/modules/sources.py, lib/modules/stores.py:
	[svn] Summary: First round of modularization improvment - many
	changes made to improve the modularity of existing code.

	Details: dimsbuild/lib/interface.py
	 * removed setFlag(), renamed set_cvar()
	 * removed getFlag(), renamed get_cvar() dimsbuild/lib/main.py
	 * removed Build.flags; renamed Build.mvars
	dimsbuild/lib/modules/software.py
	 * removed erroneous dependency in 'software' event on 'IMAGES'
	dimsbuild/lib/modules/iso.py
	 * fixed timber's dosrc parameter to read the correct cvar instead of
	assuming True dimsbuild/lib/modules/pkglist.py
	 * added validation of pkglist to ensure that the final list contains
	all requested packages dimsbuild/lib/modules/comps.py
	 * finished '--with-comps' option, allowing user to specifiy a file to
	use in place of generating comps
	 * config file support for specifying a groupfile added
	 * added concept of exclusion to comps file
	dimsbuild/lib/modules/sources.py
	 * added '--no-srpms' option, allowing skipping of srpms via command
	line dimsbuild/lib/modules/*.py
	 * updated interface calls to reflect cvar function renaming
	[0ac4f71262b4]

2007-05-08  uprakash  <uprakash>

	* bin/dimsbuild:
	[svn] deleted the default value of the --share-path option.
	[009fa6530ab0]

2007-05-07  uprakash  <uprakash>

	* lib/modules/images.py, lib/modules/rpms.py:
	[svn] Summary: Changed the location of the folder which contains the
	pixmaps/ that should go into the product.img.

	Details:
	* dimsbuild/modules/rpms.py:
	- the images-src/product.img folder is created during the pre-hook
	- the images that need to go into the product.img are now located at
	builddata/images-src/product.img/pixmaps instead of
	builddata/logos/product.img.

	* dimsbuild/modules/images.py:
	- fixed a typographical error. In the ProductImageHandler's
	generate() method, pixmaps_found was being set to True if
	<code>'pixmaps' is not in os.listdir(dir)</code>; pixmaps_found
	should be set to True if 'pixmaps' is in dir.
	[d59aabc69e77]

	* build/setup.cfg:
	[svn] dimsbuild requires "python-lxml", not "lxml."
	[1ec5d48dc720]

	* bin/dimsbuild, lib/main.py:
	[svn] Summary: Looking for the <sharepath> element in the main
	config for finding the path to the shared folder. The value in the
	config file can be overridden by using the --share-path command line
	option.

	Details:
	* dimsbuild/trunk/bin/dimsbuild:
	- added --share-path to the options to be filtered the first time
	the command line arguments are parsed.

	* dimsbuild/trunk/lib/main.py:
	- self.sharepath is either the value at the command line, or the
	text in <sharepath> in the config file or /usr/share/dimsbuild.
	[8d72b37a5e36]

2007-05-07  dmusgrave  <dmusgrave>

	* lib/modules/images.py, lib/modules/rpms.py:
	[svn] Summary: the images event now defines a static location in
	which other events can dump files they wish to place inside images
	when they are modified. Some currently- existing code in rpms.py
	should be modified to reflect this change.

	Details: dimsbuild/lib/modules/rpms.py
	 * prelogos_hook() now makes its metadata directory so that it will be
	present whether or not the event is enabled
	 * the above fix will be removed after the changes to images.py get
	propagated through rpms.py dimsbuild/lib/modules/images.py
	 * all image formats respect the new static source directory location
	to find files
	 * init_hook() creates the static source directories
	[0fa1a275877b]

2007-05-07  uprakash  <uprakash>

	* build/MANIFEST, build/MANIFEST.in:
	[svn] fixed dimsbuild's MANIFEST file, and made it a template.
	[2a89f14c2bd0]

2007-05-04  dmusgrave  <dmusgrave>

	* lib/modules/sources.py:
	[svn] dimsbuild/lib/modules/sources.py
	 * second bugfix related to source not being processed
	[6de274054747]

	* lib/modules/sources.py:
	[svn] dimsbuild/lib/modules/sources.py
	 * fixed missing fallback statement
	[b8cc278eddeb]

	* lib/modules/sources.py:
	[svn] dimsbuild/lib/modules/source.py
	 * initial commit of source.py, module for handling of SRPMS in
	dimsbuild
	[33530ad7323f]

	* lib/callback.py, lib/interface.py, lib/modules/iso.py,
	lib/modules/pkglist.py, lib/modules/software.py:
	[svn] dimsbuild/lib/callback.py
	 * adjusted bar layout to handle when 1000-9999 packages are being
	processed dimsbuild/lib/interface.py
	 * added ListCompareMixin, a mixin allowing the execution of functions
	on the differences beween two lists
	 * removed old references to unused interfaces
	dimsbuild/lib/modules/software.py
	 * SoftwareInterface now extends ListCompareMixin
	 * new SoftwareHandler class performs all the actions necessary to
	build a software store - this was in an effort to take advantage
	of ListCompareMixin dimsbuild/lib/modules/iso.py
	 * new event 'pkgorder', performs package ordering
	 * new IsoInterface, the interface for the iso event; extends
	ListCompareMixin for ease of list processing
	 * new event hook prepkgorder_hook(); handles setting pkgorder event
	enabled status based on program and output store state
	 * new event hook pkgorder_hook(); handles creating the pkgorder
	 * new handler IsoHandler; handles splitting the unified trees and
	generating iso images. Future changes may split this into two
	events - tree splitting and iso generation
	dimsbuild/lib/modules/pkglist.py
	 * now all processing on the yum.conf file is handled in repogen_hook()
	instead of how they were previously separated into two parts
	 * config file is now removed in postpkglist_hook()
	[3662e1dc5636]

	* lib/splittree.py:
	[svn] dimsbuild/lib/splittree.py
	 * initial commit of our version of splittree
	[05de3b04714f]

2007-05-03  dmusgrave  <dmusgrave>

	* conf/example-centos-base-4.4/distro.conf, conf/example-fedora-
	base-6/distro.conf, conf/example-redhat-base-5/distro.conf,
	lib/event.py, lib/interface.py, lib/modules/comps.py,
	lib/modules/rpms.py, lib/modules/software.py, lib/modules/stores.py:
	[svn] dimsbuild/conf/*
	 * updated config files with new macro syntax
	dimsbuild/lib/interface.py
	 * EventInterface() now returns the value of
	self._base.cachemanager.get() instead of None
	 * storepath adjusted inside getStoreInfo() so that function will work
	with stores at any level in the config file
	dimsbuild/lib/event.py
	 * get() now only replaces the first instance of 'pre' and 'post' for
	eventids that start with 'pre' or 'post'
	dimsbuild/lib/modules/software.py
	 * added SoftwareInterface.rpmdest, the location to which rpms are
	installed dimsbuild/lib/modules/comps.py
	 * store config.get() restricted to the stores element to avoid picking
	up additional stores in other locations that we don't want
	dimsbiuld/lib/modules/rpms.py
	 * added RpmsMixin, which has several functions from RpmInterface
	 * RpmsInterface changed to use RpmsMixin
	[e8030c6f03fe]

2007-05-02  dmusgrave  <dmusgrave>

	* lib/modules/rpms.py:
	[svn] dimsbuild/lib/modules/rpms.py
	 * initial commit of rpms module
	[663bfd2d4b77]

	* lib/event.py, lib/interface.py, lib/main.py, lib/modules/comps.py,
	lib/modules/images.py, lib/modules/metadata.py,
	lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/software.py, lib/modules/stores.py:
	[svn] Summary: Changed made to dimsbuild in an effort to support
	file:// urls, as well as to remove the <server> element from config
	files. Also bug fixes regarding event ordering, specifically with
	meta event pre and post events.

	Details: dimsbuild/lib/interface.py
	 * updated getStoreInfo(), new signature is i,s,n,d,u,p =
	getStoreInfo(store)
	 * new storeInfoJoin(), function for joining s,n, and d from
	getStoreInfo() dimsbuild/lib/event.py
	 * fixed a bug causing bitmasking to not function reliably for the
	leftmost property
	 * Event.run() now only executes the event itself, not the pre or post
	events
	 * new depthfirst(event), provides correctly-ordered depthfirst event
	processing (specifically, places an event's pre and post events
	before and after all children, rather than before in all cases
	dimsbuild/lib/main.py
	 * updated __compute_servers() to account for config file changes
	dimsbuild/lib/modules/software.py
	 * updated the requires field for the software event to include RPMS
	and IMAGES
	 * logging messages now give slightly more detail on package processing
	 * updated calls to getStoreInfo() to reflect new signature
	dimsbuild/lib/modules/pkglist.py
	 * repo config generation separated from pkglist into a new event,
	repogen
	 * several config.get() entries changed to config.eget() to expand
	macros
	 * added prerepogen_hook(), which sets the repoconfig flag to False
	 * added repogen_hook(), which generates a conf file for depsolve
	dimsbuild/lib/modules/stores.py
	 * new StoresInterface.add_store(xml): adds the given xml string to the
	additional stores element of the config file
	 * updated calls to getStoreInfo() to reflect new signature
	 * now generates filelists even if input store in question is empty
	dimsbuild/lib/modules/metadata.py
	 * updated calls to getStoreInfo() to reflect new signature
	dimsbuild/lib/modules/comps.py
	 * updated requires of the comps event to include RPMS
	 * updated calls to getStoreInfo() to reflect new signature
	dimsbuild/lib/modules/images.py
	 * updated calls to getStoreInfo() to reflect new signature
	dimsbuild/lib/modules/publish.py
	 * symlink to test directory is now done using relative instead of
	absolute pathing
	[7577d1e12e48]

2007-04-30  kwilliams  <kwilliams>

	* build/setup.cfg:
	[svn] setup.cfg
	* requires items now on separate lines
	[fde625f928e0]

2007-04-30  dmusgrave  <dmusgrave>

	* lib/callback.py, lib/event.py, lib/modules/pkglist.py,
	lib/modules/software.py:
	[svn] dimsbuild/lib/event.py
	 * docstrings dimsbuild/lib/modules/software.py
	 * fixed a bug related to using the wrong rpuUtils.arch function to
	compute the correct arch list dimsbuild/lib/modules/pkglist.py
	 * re-replaced dims.depsolve with dims.depsolver
	[bb5fc1aef7d1]

2007-04-27  uprakash  <uprakash>

	* lib/modules/logos.py:
	[svn] Fixed Bug# 63. Adding a try-except block around the python-
	imaging specific imports and if an ImportError exception is raised,
	print a user- friendly error message (asking the user to install the
	python-imaging RPM) and exit.
	[7c90f2343ffa]

2007-04-27  dmusgrave  <dmusgrave>

	* lib/interface.py, lib/locals.py, lib/main.py,
	lib/modules/pkglist.py, lib/modules/publish.py,
	lib/modules/software.py:
	[svn] Summary: Changes put into place that get the correct arch
	values at various stages in the build process. Specifically,
	depsolver requires an exact list of architectures for it to consider
	in its return list; if the given rpm's arch doesn't match, it will
	not be included. Thus, if the specified arch is i686, an i386 RPM
	will not match by default (this is incorrect behavior). Similarly,
	the arch used in the .buildstamp and .discinfo files must be the
	distribution's base arch, as opposed to the canon arch. Dimsbuild is
	now aware of and handles both of these cases.

	dimsbuild/lib/locals.py
	 * .discinfo locals entry changed from 'arch' to 'basearch' wherever
	specified
	 * .buildstamp locals entry changed from 'arch' to 'basearch' wherever
	specified dimsbuild/lib/interface.py
	 * added EventInterface.basearch disbuild/lib/main.py
	 * added Build.base_vars['basearch'], which is equal to the basearch of
	the specified architecture as computed by
	rpmUtils.arch.getBaseArch()
	 * Build.SOFTWARE_STORE now uses 'basearch' instead of 'arch'
	dimsbuild/lib/modules/software.py
	 * now uses checks rpm archs against the list returned by
	rpmUtils.arch.getBaseArch() instead of using a static list
	dimsbuild/lib/modules/pkglist.py
	 * removed erroneous import dimsbuild/lib/modules/publish.py
	 * publish directory now based on basearch instead of arch
	[8a9948b31748]

2007-04-26  dmusgrave  <dmusgrave>

	* lib/callback.py, lib/interface.py, lib/main.py, lib/modules/iso.py,
	lib/modules/pkglist.py, lib/modules/software.py:
	[svn] dimsbuild/lib/callback.py
	 * added BuildDepsolveCallback, a callback class for use while
	depsolving
	 * prints bars on the screen for each iteration of dependency solution
	 * requires verbosity level 3 to be shown dimsbuild/lib/interface.py
	 * added notes to VersionMixin, LocalsMixin, and get_anaconda_version()
	indicating that these have a dependency on the 'stores' event
	 * removed a few old interface definitions dimsbuild/lib/main.py
	 * updated osutils.find() function signature
	dimsbuild/lib/modules/software.py
	 * updated osutils.find() function signature
	dimsbuild/lib/modules/iso.py
	 * added __gen_manifest_line(file) function
	 * fixed a bug with manifest_changed() that was causing the return
	value to be incorrect in certain circumstances
	dimsbuild/lib/modules/pkglist.py
	 * replaced depsolver with depsolve; testing
	 * pkglist generation now has callback printing at log threshold 3 and
	above
	[ffc6cb3e223b]

2007-04-24  uprakash  <uprakash>

	* bin/dimsbuild:
	[svn] forgot a comma while adding the --share-path option in
	dimsbuild.
	[d5b3f36458c5]

	* bin/dimsbuild, lib/main.py, lib/modules/logos.py:
	[svn] Summary: Added --share-path option to dimsbuild's option
	parser.

	Details:
	* dimsbuild/trunk/lib/modules/logos.py:
	- added a class variable in the LogosHandler the value of which is
	the --share-path option's value.

	* dimsbuild/trunk/lib/main.py:
	- added a self.sharepath variable to the Build class.

	* dimsbuild/trunk/bin/dimsbuild:
	- added the --share-path option.
	[cb9bd2748d92]

	* build/setup.cfg:
	[svn] added python-imaging as a requirement for dimsbuild.
	[366fc3f7017a]

2007-04-23  uprakash  <uprakash>

	* conf/example-fedora-base-6/distro.conf, lib/locals.py,
	lib/modules/logos.py:
	[svn] Summary: Initial commit of the logos module in dimsbuild that
	is used to create images that are used to build the logos RPM and
	the product.img.

	Details:
	* dimsbuild/trunk/conf/example-fedora-base-6/distro.conf:
	- added the logos tag to the config file for testing purposes.

	* dimsbuild/trunk/lib/locals.py:
	- added the locals node for the logos module. The locals entry for
	logos contains information about where an image is to be
	installed, the dimensions of the image and a small description of
	the image.

	* dimsbuild/trunk/lib/modules/logos.py:
	- initial commit of the logos module.
	- it's been tested and the entire module works fine, thus far, but
	the images it creates have a static text ("TEST IMAGE", in fact).
	Need to work on making these images look professional.
	[d053629c5c8a]

2007-04-20  dmusgrave  <dmusgrave>

	* lib/modules/iso.py:
	[svn] dimsbuild/lib/modules/iso.py
	 * initial commit of an manifest and iso generator
	[b74311a22cb6]

	* lib/event.py, lib/interface.py, lib/main.py, lib/modules/images.py,
	lib/modules/init.py, lib/modules/metadata.py,
	lib/modules/publish.py, lib/modules/software.py:
	[svn] dimsbuild/lib/interface.py
	 * replaced direct call to Event.enabled with
	Event._set_enable_status() to ensure that meta events get handled
	correctly dimsbuild/lib/event.py
	 * major redo on event properties - properties now broken down further
	into the actual defining capability each refers to. Event types
	still exist and refer to the specific combination of properties
	that make that type exist.
	 * new event property PROP_META, indicating a 'meta event'. Meta
	events are events that don't actually do any processing but that
	contain two or more similar events. If an event has PROP_META
	enabled, then enabling, forcing, disabling, or skipping the event
	will affect the event's direct children as well
	 * added EVENT_TYPE_META, which sets PROP_META
	 * removed Event.getclass() and Event.gettype(), replaced with
	Event.test(property)
	 * added Event.enable() and Event.disable(), which should now be used
	instead of directly modifying Event.enabled
	 * added force argument to Event.run() which allows forcing of events
	to actually work
	 * events can now have pre and post events independently
	dimsbuild/lib/main.py
	 * Build.__flowcontrol_apply() now correctly applies flow control
	arguments to meta event children
	dimsbuild/lib/modules/metadata.py
	 * no longer creates a discinfo file if none of the distribution's base
	vars have changed dimsbuild/lib/modules/init.py
	 * the MAIN event now has PROP_META enabled
	dimsbuild/lib/modules/images.py
	 * the IMAGES event now has PROP_META enabled
	 * fixed a typo in initrd's destination file
	dimsbuild/lib/modules/publish.py
	 * the publish event's 'requires' field updated to include the 'iso'
	event

	The iso.py module will be committed in a subsequent commit
	[2828c30b95c5]

2007-04-19  dmusgrave  <dmusgrave>

	* lib/callback.py, lib/event.py, lib/interface.py, lib/locals.py,
	lib/main.py, lib/modules/comps.py, lib/modules/images.py,
	lib/modules/metadata.py, lib/modules/pkglist.py,
	lib/modules/publish.py, lib/modules/software.py,
	lib/modules/stores.py, lib/output.py:
	[svn] dimsbuild/lib/interface.py
	 * added EventInterface.expandMacros(text), which uses the main
	instance's base_vars dictionary to expand macros in text
	dimsbuild/lib/main.py
	 * added ARCH_MAP, a dictionary of base arch mappings to supported
	archs. This may end up in locals.py
	 * removed Build.ARCH; architecture information is now contained
	entirely in base_vars
	 * base_vars['arch'] is no longer a list; it is a single base
	architecture, which is in turn a key into the ARCH_MAP dictionary
	 * added arch to Build.SOFTWARE_STORE so multiple architectures can be
	built concurrently
	 * changed the name of software store's 'output' folder to 'os' to
	match with standard distribution layouts
	 * removed Build.DEPSOLVE_CACHE dimsbuild/lib/modules/software.py
	 * removed SoftwareInterface.getArch(); no longer needed
	 * now uses ARCH_MAP as defined in main.py for architecture
	calculations dimsbuild/lib/modules/pkglist.py
	 * removed installroot= element in YUMCONF_HEADER; now handled via
	function args
	 * moved yum metadata from shared location into distribution metadata
	to resolve problems with same-named repositories of different
	architectures
	 * removed SoftwareInterface.getDepsolveCache(); no longer needed
	dimsbuild/lib/modules/images.py
	 * removed some old commented code dimsbuild/lib/modules/publish.py
	 * added architecture to published folder structure so multiple
	architectures of a single distribution can be published
	[d80a3d9a7330]

	* build/setup.cfg:
	[svn] dimsbuild/build/setup.cfg
	 * added dependency on dims-common
	[0ef93115e596]

2007-04-17  dmusgrave  <dmusgrave>

	* build/setup.py:
	[svn] validated /root/workspace/dims/dimsbuild/trunk during the RPM
	build process
	[e68c5ccdabd4]

	* build/setup.cfg, build/setup.py, lib/event.py:
	[svn] validated /root/workspace/dims/dimsbuild/trunk during the RPM
	build process
	[59e8dec252ca]

	* build/MANIFEST, build/install.sh, build/setup.cfg, build/setup.py:
	[svn] dimsbuild - copied build and share folders from dimsbuild-2.0
	tag
	[4b2f5534cea4]

	* bin/dimsbuild, conf/dimsbuild.conf, conf/example-centos-
	base-4.4/distro.conf, conf/example-fedora-base-6/distro.conf, conf
	/example-redhat-base-5/distro.conf, lib/__init__.py,
	lib/callback.py, lib/event.py, lib/interface.py, lib/locals.py,
	lib/magic.py, lib/main.py, lib/modules/__init__.py,
	lib/modules/comps.py, lib/modules/images.py, lib/modules/init.py,
	lib/modules/metadata.py, lib/modules/pkglist.py,
	lib/modules/publish.py, lib/modules/software.py,
	lib/modules/stores.py, lib/output.py, lib/resolve.py, runfromsvn:
	[svn] Merging dimsbuild-3.0 from branches into trunk
	[f23a29cc7c6f]

