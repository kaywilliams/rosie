Test methods of PathToken

Set up the environment
  >>> from deploy.util import pps
  >>> P = pps.Path.posix.PosixPath
  >>> H = pps.Path.http.HttpPath

Index operations: p[0] returns the root of absolute paths or the first element
of relative paths.  p[-1] returns the last element (basename)
  >>> t = P('/a/b/c/d').splitall()
  >>> t[0]
  PosixPath('/')
  >>> t[-1]
  PosixPath('d')
  >>> t[2]
  PosixPath('b')
  >>> t = P('a/b/c/d').splitall()
  >>> t[0]
  PosixPath('a')
  >>> t[-1]
  PosixPath('d')
  >>> t[2]
  PosixPath('c')

And for non-local paths:
  >>> t = H('http://www.ex.com/a/b/c/d').splitall()
  >>> t[0]
  HttpPath('http://www.ex.com/')
  >>> t[-1]
  HttpPath('d')
  >>> t[2]
  HttpPath('b')

Slice operations: p[0:1] returns the root of absolute paths, the first item
of relative paths; p[0:2] returns the root and first element of absolute
paths, the first 2 elements of relative paths, etc.  p[:-1] returns all but
the last element of a path (dirname); p[1:] returns all but the root of
absolute paths and all but the first element of relative paths.  All paths
returned are normalized, meaning that p[0:len(p)] may not be the same string
as p (though they will still be equivalent paths).  The type of the Path
object returned is the same as the original, even if it doesn't have a root.
  >>> t = P('/a/b/c/d').splitall()
  >>> t[0:len(t)]
  PosixPath('/a/b/c/d')
  >>> t[1:]
  PosixPath('a/b/c/d')
  >>> t[:-1]
  PosixPath('/a/b/c')
  >>> t[1:-1]
  PosixPath('a/b/c')
  >>> t = P('a/b/c/d').splitall()
  >>> t[0:len(t)]
  PosixPath('a/b/c/d')
  >>> t[1:]
  PosixPath('b/c/d')
  >>> t[:-1]
  PosixPath('a/b/c')
  >>> t[1:-1]
  PosixPath('b/c')

And for non-local paths:
  >>> t = H('http://www.ex.com/a/b/c/d').splitall()
  >>> t[0:len(t)]
  HttpPath('http://www.ex.com/a/b/c/d')
  >>> t[1:]
  HttpPath('a/b/c/d')
  >>> t[:-1]
  HttpPath('http://www.ex.com/a/b/c')
  >>> t[1:-1]
  HttpPath('a/b/c')

