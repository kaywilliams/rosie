<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="CommonComponents-Elements">

  <section id="boot-args"
           xreflabel="boot-args">
    <title>
    Element: boot-args
    </title>

    <section>
      <title>
      Definition
      </title>

      <para>
      Modifies the behavior of the various boot media 
      (<emphasis role="strong">bootiso</emphasis>,
      <emphasis role="strong">diskboot-image</emphasis>, and
      <emphasis role="strong">iso</emphasis>) by supplying supplemental or
      alternate kernel boot arguments.
      </para>

      <para>
      The <emphasis>boot-args</emphasis> element's text value should be a
      space-separated list of kernel arguments to append to each
      "append" line in the syslinux configuration file. If
      <emphasis>boot-args/@use-defaults</emphasis> is
      <constant>TRUE</constant>, the default set of kernel arguments
      for the module are appended as well.
      </para>

    </section>

    <section id="boot-args-macros"
             xreflabel="Using boot-args Macros">
      <title>
      boot-args macros
      </title>

      <para>
      The <emphasis>boot-args</emphasis> element has support for two macros
      whos text values will be replaced at runtime with some other string.
      These macros can be used in combination with each other and any other
      boot arguments.
      </para>

      <variablelist>
      <varlistentry>
        <term>
        <constant>%{ks}</constant>
        </term>

        <listitem>
        <para>
        If the <emphasis role="strong">kickstart</emphasis> top-level element
        is present in this appliance file, this macro will be replaced by
        the string <constant>ks=$path</constant>, where
        <varname>$path</varname> is the path to the kickstart file on the
        installation image. If the <emphasis role="strong">kickstart</emphasis>
        top-level element is not present, this macro is ignored.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
        <constant>%{method}</constant>
        </term>

        <listitem>
        <para>
        This macro will be replaced by the string
        <constant>method=$path</constant>, where <varname>$path</varname>
        is the remote URL to the appliance's published output directory,
        as determined by the
        <emphasis role="strong"><xref linkend="publish"/></emphasis>
        module.
        </para>
        </listitem>
      </varlistentry>

      </variablelist>
    </section>

    <section>
      <title>
      Syntax
      </title>

      <programlisting>
[&lt;boot-args [use-defaults=BOOLEAN]&gt;TEXT&lt;/boot-args&gt;]
      </programlisting>
    </section>

    <section>
      <title>
      Attributes
      </title>

      <variablelist>
      <varlistentry id="boot-args-use-defaults"
                    xreflabel="boot-args/@use-defaults">
        <term>
        use-defaults
        </term>

        <listitem>
        <para>
        <varname>BOOLEAN</varname> value indicating whether the
        top-level element's default set of kernel arguments should
        be appended to the syslinux configuration file. Each top-level
        element defines its own set of default kernel arguments. The
        default value for this attribute is <constant>TRUE</constant>.
        </para>
        </listitem>
      </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>
      Examples
      </title>

      <para>
      In the following examples, the default set of kernel arguments
      is <constant>text</constant>, <constant>keymap=us</constant>,
      and <constant>method=cdrom</constant>.
      </para>

      <section>
        <title>
        Example 1 - default set plus append-args
        </title>

        <para>
        In this example, the default set of kernel arguments is included
        along with those arguments defined in
        <emphasis>boot-args</emphasis>.  The final set of
        kernel append arguments is

        <literallayout>text keymap=us method=cdrom noipv6 ks</literallayout>
        </para>

        <informalexample>
        <programlisting>     
&lt;boot-args&gt;noipv6 ks&lt;/boot-args&gt;
        </programlisting>
        </informalexample>
      </section>

      <section>
        <title>
        Example 2 - only append-args
        </title>

        <para>
        In this example, the default set of kernel arguments are not
        appended.  The final set of kernel append arguments is

        <literallayout>noipv6 ks</literallayout>
        </para>

        <informalexample>
        <programlisting>
&lt;boot-args use-defaults="false"&gt;noipv6 ks&lt;/boot-args&gt;
        </programlisting>
        </informalexample>
      </section>

      <section>
        <title>
        Example 3 - only default set
        </title>

        <para>
        In this example, only the default set of kernel arguments are
        appended.  The final set of kernel append arguments is

        <literallayout>text keymap=us method=cdrom</literallayout>
        </para>

        <informalexample>
        <programlisting>
&lt;boot-args/&gt;
        </programlisting>
        </informalexample>
      </section>

    </section>

    <section>
      <title>
      See Also
      </title>

      <para>
      <varname><xref linkend="content-boolean" /></varname>,
      <varname><xref linkend="content-text" /></varname>,
      <varname><xref linkend="content-path" /></varname>
      </para>
    </section>
  </section>

  <section id="obsoletes"
           xreflabel="obsoletes">
    <title>
    Element: obsoletes
    </title>

    <section>
      <title>
      Definition
      </title>
      <para>
      A <varname>CAPABILITY</varname> to add to a top-level element RPM's
      obsoletes list. Each RPM Spin builds has a pre-determined set of
      capabilities it uses if the top-level element's
      <emphasis>@use-default-obsoletes</emphasis> attribute
      is <constant>TRUE</constant>. The default set of obsoletes can be 
      overridden by setting <emphasis>@use-default-obsoletes</emphasis> to
      <constant>FALSE</constant>. See the individual top-level element sections
      for the list of default capabilities each RPM obsoletes.
      </para>
    </section>

    <section>
      <title>
      Examples
      </title>

      <informalexample>
      <programlisting>     
&lt;obsoletes&gt;kernel &amp;lt; 2.4.1&lt;/obsoletes&gt; &lt;!-- kernel &lt; 2.4.1 --&gt;
&lt;obsoletes&gt;X11R6-contrib&lt;/obsoletes&gt;
&lt;obsoletes&gt;entrance gdm kdm wdm xdm&lt;/obsoletes&gt;
      </programlisting>
      </informalexample>

      <note>
      <para>When specifying <varname>CAPABILITY</varname> strings, remember
      to escape <constant>&lt;</constant> and <constant>&gt;</constant>
      with <constant>&amp;lt;</constant> and <constant>&amp;gt;</constant>,
      respectively.
      </para>
      </note>
    </section>

    <section>
      <title>
      See Also
      </title>

      <para>
      <varname><xref linkend="content-capability" /></varname>,
      <emphasis><xref linkend="requires" /></emphasis>,
      <emphasis role="strong"><xref linkend="config-rpm" /></emphasis>,
      <emphasis role="strong"><xref linkend="logos-rpm" /></emphasis>,
      <emphasis role="strong"><xref linkend="release-rpm" /></emphasis>
      </para>
    </section>
  </section>


  <section id="path-like-elements"
           xreflabel="PATH-like Elements">
    <title>
    Element: <varname>PATH</varname>-like Elements
    </title>

    <section>
      <title>
      Definition
      </title>

      <para>
      <varname>PATH</varname>-like elements generally are used to copy an
      input file to some other location, such as within a disk image,
      into a RPM in order to be installed to a specific location on client
      systems, or into a folder within the appliance tree itself.
      A <varname>PATH</varname>-like element's text value is the
      <varname>PATH</varname> to some file <varname>$input</varname> to use,
      while the <emphasis>@destdir</emphasis>,
      <emphasis>@destname</emphasis>, and <emphasis>@mode</emphasis>
      attributes control the location, filename, and mode of the destination
      file.
      </para>

      <para>
      <application class="software">Spin</application> supports reading
      from <varname>$input</varname>s for file, http, and https locations,
      and writing to file locations. Unless otherwise specified,
      <varname>$input</varname> may refer to both file and folder locations.
      If the <varname>$input</varname> does not exist or is otherwise
      unreadable, <application class="software">Spin</application> typically
      will raise an error and exit.
      </para>
      
    </section>

    <section>
      <title>
      Specifying the destination
      </title>

      <para>
      <varname>PATH</varname>-like element have two important properties
      when determining the final destination of the
      <varname>$input</varname>. The first, <varname>$root</varname>
      may be an absolute path on the build system or a specific disk image.
      The second, <varname>$default</varname>, is the default location
      to which the <varname>$input</varname> is copied if no
      <emphasis>@destdir</emphasis> is specified. These values are combined
      in the following manner in the simplest case:
      </para>

      <programlisting>
# $basename is the basename of $input
$root/$default/$basename
      </programlisting>

      <para>
      Allows overriding the value of <varname>$basename</varname> by specifying
      a different value using the <emphasis>@destname</emphasis> attribute:
      </para>

      <programlisting>
# destname=outfile.txt
$root/$default/outfile.txt
      </programlisting>

      <para>
      Allows customizing the final location of the path by specifying a value in
      the <emphasis>@destdir</emphasis> attribute. The resulting path depends
      on whether <emphasis>@destdir</emphasis> is an absolute or relative
      path; if it is absolute, then <varname>$default</varname> is ignored;
      otherwise, <emphasis>@destdir</emphasis> is joined onto
      <varname>$default</varname> to form the final path.
      </para>

      <programlisting>
# destdir=var/www/html  (relative)
$root/$default/var/www/html/$basename
# destdir=/var/www/html (absolute)
$root/var/www/html/$basename
      </programlisting>

      <para>
      The above two concepts can be combined to allow complete control
      over the final destination of <varname>$input</varname>.
      </para>

      <programlisting>
# destdir=var/www/html,  basename=outfile.txt
$root/$default/var/www/html/outfile.txt
# destdir=/var/www/html, basename=outfile.txt
$root/var/www/html/outfile.txt
      </programlisting>

    </section>

    <section>
      <title>
      Syntax
      </title>

      <programlisting>
&lt;ELEMENTNAME [destdir=DESTDIR]
             [destname=BASENAME]
             [mode=MODE]&gt;
  <varname>$input</varname>
&lt;/ELEMENTNAME&gt;
      </programlisting>

    </section>

    <section>
      <title>
      See Also
      </title>

      <para>
      <emphasis><xref linkend="destdir" /></emphasis>,
      <emphasis><xref linkend="destname" /></emphasis>,
      <emphasis><xref linkend="mode" /></emphasis>,
      <varname><xref linkend="content-path" /></varname>,
      <varname><xref linkend="content-basename" /></varname>,
      <varname><xref linkend="content-dirname" /></varname>
      </para>
    </section>
  </section>

  <section id="repo"
           xreflabel="repo">
    <title>
    Element: repo
    </title>

    <section>
      <title>
      Definition
      </title>

      <para>
      The repo element provides a means to define various properties about
      a <application>YUM</application> repository. These definitions can be
      used in addition to or in place of repository definitions defined in
      a YUM repofile.
      </para>

      <para>
      Supported YUM repository options include
      <varname>baseurl</varname>,
      <varname>enabled</varname>,
      <varname>exclude</varname>,
      <varname>gpgcheck</varname>,
      <varname>gpgkey</varname>,
      <varname>includepkg</varname>, and
      <varname>mirrorlist</varname>. All options
      are defined using elements of the same name with the exception of
      <varname>includepkgs</varname> and <varname>exclude</varname>,
      which use <emphasis>repo/include-package</emphasis> and
      <emphasis>repo/exclude-package</emphasis>, respectively. The
      <emphasis>repo/baseurl</emphasis> and
      <emphasis>repo/mirrorlist</emphasis> elements also have full support
      for the YUM variables <varname>$basearch</varname> and
      <varname>$releasever</varname>. However, instead of using the build
      system's architecture and release version, Spin defaults to using
      <varname>$ARCH</varname> and <varname>$VERSION</varname>,
      respectively. Top-level elements may define a
      <emphasis>releasever</emphasis> element that overrides the default
      replacement value for <varname>$releasever</varname>.
      </para>

      <para>
      Spin supports an extension to the standard supported schemes
      in that it can connect to and download packages from RedHat Network
      servers. In order for this to function properly, the repository
      definition must include a <emphasis>repo/systemid</emphasis>
      element pointing to a valid RHN systemid file that has access to
      the desired packages.
      </para>

      <para>
      The location of packages on a RHN server is specified using the
      following syntax:

      <programlisting>
(rhn|rhns)://[$rhnhost]/$rhnchannel/
      </programlisting>

      where <varname>$rhnchannel</varname> is the name of the RHN
      channel from which to obtain packages and <varname>$rhnhost</varname>
      is the hostname of the server to contact. If not specified,
      <varname>$rhnhost</varname> defaults to
      <filename>xmlrpc.rhn.redhat.com</filename>.
      </para>
    </section>

    <section id="repo-valid-repos"
             xreflabel="Valid Repositories">
      <title>
      Valid Repositories
      </title>

      <para>
      Spin supports standard YUM repositories; that is, folders containing
      a <filename>repodata</filename> folder with repository metadata.
      However, Spin also supports an expanded type of repository, a
      "repository group". A repository group is a collection of standard
      YUM repositories within another folder.
      </para>

      <para>
      For example, if there are three repositories
      <filename>repoA</filename>, <filename>repoB</filename>, and
      <filename>repoC</filename> in a folder <filename>/var/repos</filename>,
      in order to include all three repos in YUM, a repofile must contain
      three repo entries:

      <programlisting>
[repoA]
baseurl=/var/repos/repoA

[repoB]
baseurl=/var/repos/repoB

[repoC]
baseurl=/var/repos/repoC
      </programlisting>

      In Spin, on the other hand, all the repos could be included by
      using a repo group instead:

      <programlisting>
&lt;repo id="repogroup"&gt;
  &lt;baseurl&gt;/var/repos&lt;/baseurl&gt;
&lt;/repo&gt;
      </programlisting>

      This repository would contain all the packages available in each
      of the individual repositories <filename>repoA</filename>,
      <filename>repoB</filename>, and <filename>repoC</filename>.
      </para>
    </section>

    <section id="repo-including-excluding-repository-contents"
             xreflabel="Including and Excluding Repository Contents">
      <title>
      Including and Excluding Repository Contents
      </title>

      <para>
      By default, all packages in all repositories are available for Spin
      to use. Available packages for a single repository can be restricted by
      using one or more <emphasis>repo/exclude-package</emphasis> or
      <emphasis>repo/include-package</emphasis> elements. The logic for
      processing these elements is the same as YUM's processing of
      <varname>includepkgs</varname> and <varname>exclude</varname> repo
      options.
      </para>

      <para>
      Using a repository's <emphasis>repo/include-package</emphasis>
      elements, the list of available packages is restricted to only those
      packages that match one or more of the included <varname>PACKAGE</varname>
      patterns. If no <emphasis>repo/include-package</emphasis> patterns are 
      specified, all packages are considered available.
      </para>

      <para>
      After processing a repository's
      <emphasis>repo/include-package</emphasis> elements, the
      <emphasis>repo/exclude-package</emphasis> element can be used to
      selectively remove specific packages from the list of available
      packages for the repository. Any package matching one or more of
      the <varname>PACKAGE</varname> patterns specified in a
      <emphasis>repo/exclude-package</emphasis> element will be ignored
      by Spin.
      </para>
    </section>

    <section>
      <title>
      Syntax
      </title>

      <programlisting>
&lt;repo id=ID&gt;
  &lt;!-- at least one &lt;baseurl&gt; or &lt;mirrorlist&gt; is required --&gt;
 [&lt;baseurl&gt;PATH&lt;/baseurl&gt;]*
 [&lt;mirrorlist&gt;PATH&lt;/mirrorlist&gt;]
 [&lt;enabled&gt;BOOLEAN&lt;/enabled&gt;]
 [&lt;name&gt;TEXT&lt;/name&gt;]
 [&lt;gpgcheck&gt;BOOLEAN&lt;/gpgcheck&gt;]
 [&lt;gpgkey&gt;PATH&lt;gpgkey&gt;]*
 [&lt;exclude-package&gt;PACKAGE&lt;/exclude-package&gt;]*
 [&lt;include-package&gt;PACKAGE&lt;/include-package&gt;]*
 [&lt;systemid&gt;PATH&lt;/systemid&gt;]
&lt;/repo&gt;
      </programlisting>
    </section>

    <section>
      <title>
      Attributes
      </title>

      <variablelist>
      <varlistentry id="repo-id"
                    xreflabel="repo/@id">
        <term>id</term>

        <listitem>
        <para>
        A unique one-word <varname>ID</varname> representing this
        repository within a particular appliance. Corresponds to the
        <varname>repositoryid</varname> of a repository in a YUM
        repofile.
        </para>

        <para>
        This attribute is required.
        </para>

        <para>
        See Also the <emphasis><xref linkend="name" /></emphasis>.
        </para>
        </listitem>
      </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>
      Elements
      </title>

      <variablelist>
      <varlistentry id="baseurl"
                    xreflabel="repo/baseurl">
        <term>
        baseurl
        </term>

        <listitem>
        <para>
        The <varname>PATH</varname> to a valid repository.
        </para>

        <para>
        This element may occur zero or more times. However, each repository
        must have at least one <emphasis>repo/baseurl</emphasis> or
        <emphasis>repo/mirrorlist</emphasis>.
        </para>

        <para>
        See Also <xref linkend="repo-valid-repos" /> and the
        <emphasis><xref linkend="mirrorlist" /></emphasis> element.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
        enabled
        </term>

        <listitem>
        <para>
        <varname>BOOLEAN</varname> value indicating whether this
        repository should be enabled or not. Disabled repositories
        are ignored by Spin when looking for packages to include in
        the appliance.
        </para>

        <para>
        The default text value for this element is
        <constant>TRUE</constant>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="exclude-package"
                    xreflabel="repo/exclude-package">
        <term>
        exclude-package
        </term>

        <listitem>
        <para>
        A <varname>PACKAGE</varname> pattern to exclude from the repository.
        </para>

        <para>
        This element can occur zero or more times.
        </para>

        <para>
        See Also the <emphasis><xref linkend="include-package" /></emphasis> 
        element.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgcheck"
                    xreflabel="repo/gpgcheck">
        <term>
        gpgcheck
        </term>

        <listitem>
        <para>
        <varname>BOOLEAN</varname> indicating whether GPG key
        checking is enabled for this repository.
        </para>

        <para>
        The default text value for this element is
        <constant>FALSE</constant>.
        </para>

        <para>
        If this element is <constant>TRUE</constant>, then at least one
        <emphasis>repo/gpgkey</emphasis> must be present.
        </para>

        <para>
        See Also the <emphasis><xref linkend="gpgkey" /></emphasis> element.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgkey"
                    xreflabel="repo/gpgkey">
        <term>
        gpgkey
        </term>

        <listitem>
        <para>
        The <varname>PATH</varname> to the ACII-armored GPG key
        for the repository.
        </para>

        <para>
        This element can occur zero or more times. If
        <emphasis>repo/gpgcheck</emphasis> is <constant>TRUE</constant>,
        this element must occur at least once.
        </para>

        <para>
        See Also the <emphasis><xref linkend="gpgcheck" /></emphasis>
        element.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="include-package"
                    xreflabel="repo/include-package">
        <term>
        include-package
        </term>

        <listitem>
          <para>
          A <varname>PACKAGE</varname> pattern to include from the
          repository. If one or more
          <emphasis>repo/include-package</emphasis> patterns are defined,
          the repository will include only packages that match these
          patterns and nothing else.
          </para>

          <para>
          This element can occur zero or more times.
          </para>

          <para>
          See Also the <emphasis><xref linkend="exclude-package" /></emphasis>
          element.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="mirrorlist"
                      xreflabel="repo/mirrorlist">
          <term>
          mirrorlist
          </term>

          <listitem>
          <para>
          The <varname>PATH</varname> to a file containing a list of
          baseurls to valid repositories.
          </para>

          <para>
          Each repository must have at least one
          <emphasis>repo/baseurl</emphasis> or
          <emphasis>repo/mirrorlist</emphasis>.
          </para>

          <para>
          See Also <xref linkend="repo-valid-repos" /> and the
          <emphasis><xref linkend="baseurl" /></emphasis> element.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="name"
                      xreflabel="repo/name">
          <term>
          name
          </term>

          <listitem>
          <para>
          A human-readable name of the repository.
          </para>

          <para>
          The default value is the repository's <varname>ID</varname>.
          </para>

          <para>
          See Also the <emphasis><xref linkend="repo-id" /></emphasis>
          attribute.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="systemid"
                      xreflabel="repo/systemid">
          <term>
          systemid
          </term>

          <listitem>
          <para>
          A <varname>PATH</varname> to the systemid file to use when
          contacting the RedHat Network.
          </para>

          <para>
          This element is required when using RHN baseurls.
          </para>

          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>
      Examples
      </title>

      <para>
      In the following examples, line breaks have been added to the
      <emphasis>repo/baseurl</emphasis> and
      <emphasis>repo/mirrorlist</emphasis> lines to improve readability.
      In a real appliance file, however, line breaks within
      <varname>PATH</varname>-like elements are not allowed.
      </para>

      <section>
        <title>
        Example 1 - basic repository
        </title>

        <para>
        This is a basic repository with just a baseurl.
        </para>

        <informalexample>
        <programlisting>
&lt;repo id="fedora-9"&gt;
  &lt;baseurl&gt;http://mirrors.kernel.org/fedora/releases/9/Everything/i386/os
  &lt;/baseurl&gt;
&lt;/repo&gt;
        </programlisting>
        </informalexample>
      </section>

      <section>
        <title>
        Example 2 - complex repository
        </title>

        <para>
        This is an example of a repository with two baseurls, a mirrorlist,
        and GPG checking enabled.
        </para>

        <informalexample>
        <programlisting>
&lt;repo id="fedora-9"&gt;
  &lt;name&gt;Fedora 9 Everything&lt;/name&gt;
  &lt;baseurl&gt;http://mirrors.kernel.org/fedora/releases/9/Everything/i386/os
  &lt;/baseurl&gt;
  &lt;baseurl&gt;http://mirrors.xmission.com/fedora/releases/9/Everything/i386/os
  &lt;/baseurl&gt;
  &lt;mirrorlist&gt;http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-9
              &amp;arch=i386&lt;/mirrorlist&gt;
  &lt;gpgcheck&gt;yes&lt;/gpgcheck&gt;
  &lt;gpgkey&gt;http://download.fedora.redhat.com/pub/fedora/linux/releases/9/
          Everything/i386/os/RPM-GPG-KEY-fedora&lt;gpgkey&gt;
&lt;/repo&gt;
        </programlisting>
        </informalexample>
      </section>

      <section>
        <title>
        Example 3 - RHN repository
        </title>

        <para>
        This repository utilizes the <filename>rhn</filename> syntax
        to contact the RedHat Network for packages.
        </para>

        <informalexample>
        <programlisting>
&lt;repo id="redhat-5Server"&gt;
  &lt;baseurl&gt;rhns:///rhel-i386-server-5/&lt;/baseurl&gt;
  &lt;systemid&gt;data/rhel/systemid-i386-5Server&lt;/systemid&gt;
&lt;/repo&gt;
        </programlisting>
        </informalexample>
      </section>
    </section>

    <section>
      <title>
      See Also
      </title>

      <para>
      <varname><xref linkend="content-boolean" /></varname>,
      <varname><xref linkend="content-package" /></varname>,
      <varname><xref linkend="content-path" /></varname>,
      <varname><xref linkend="content-text" /></varname>,
      <emphasis role="strong"><xref linkend="sources" /></emphasis>,
      <emphasis role="string"><xref linkend="repos" /></emphasis>
      </para>
    </section>
  </section>

  <section id="requires"
           xreflabel="requires">
    <title>
    Element: requires
    </title>

    <section>
      <title>
      Definition
      </title>

      <para>
      A <varname>CAPABILITY</varname> to add to the top-level element RPM's
      requires list.
      </para>
    </section>

    <section>
      <title>
      Examples
      </title>

      <informalexample>
      <programlisting>
&lt;requires&gt;samba&lt;/requires&gt;
&lt;requires&gt;bash = 3.2.33&lt;/requires&gt;
&lt;requires&gt;rpmlib(CompressedFileNames) &amp;lt;= 3.0.4-1
          rpmlib(PayloadFilesHavePrefix) &amp;lt;= 4.0-1 
          rpmlib(VersionedDependencies) &amp;lt;= 3.0.3-1&lt;/requires&gt;
      </programlisting>
      </informalexample>

      <note>
      <para>When specifying <varname>CAPABILITY</varname> strings, remember
      to escape <constant>&lt;</constant> and <constant>&gt;</constant>
      with <constant>&amp;lt;</constant> and <constant>&amp;gt;</constant>,
      respectively.
      </para>
      </note>
    </section>

    <section>
      <title>
      See Also
      </title>

      <para>
      <varname><xref linkend="content-capability" /></varname>,
      <emphasis><xref linkend="obsoletes" /></emphasis>,
      <emphasis role="strong"><xref linkend="config-rpm" /></emphasis>,
      <emphasis role="strong"><xref linkend="logos-rpm" /></emphasis>,
      <emphasis role="strong"><xref linkend="release-rpm" /></emphasis>
      </para>
    </section>
  </section>
</section>
