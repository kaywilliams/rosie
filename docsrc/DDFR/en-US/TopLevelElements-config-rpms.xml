<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="config-rpms"
        >
  <title>
  Config-rpms
  </title>

  <section>
    <title>
    Definition
    </title>

    <para>
    Creates RPMs used to install and update repository-specific configuration
    on client machines.
    </para>

    <para>
    RPMs defined within the config-rpms element have three primary functions.
    </para>
    
    <itemizedlist>
    <listitem>
    <para>
    Install user-provided configuration files specified via
    <emphasis>files</emphasis> elements. 
    </para>
    </listitem>
    
    <listitem>
    <para>
    Run user-provided scripts specified via <emphasis>script</emphasis> and
    <emphasis>trigger</emphasis> elements.
    </para>
    </listitem>
    
    <listitem>
    <para>
    Place copies of user-provided scripts in a troubleshooting folder on client
    machines. The name of the folder is
    <filename>/var/lib/deploy/config/RPMID</filename>, where
    <varname>RPMID</varname> is specified by the <emphasis>@id</emphasis>
    attribute of the config-rpm. Files in this folder assist with
    troubleshooting "scriptlet failed" errors during installation and updates
    of the rpm. Within the troubleshooting folder, scripts are named according
    to the script type, e.g.  <filename>post-script</filename>.  Triggers are
    similarly named, but they also include the name provided in the
    <emphasis>@trigger</emphasis> attribute, e.g.
    <filename>triggerin-drupal-script</filename>. See the <emphasis>Deploy User
    Guide</emphasis> for more information on testing and troubleshooting client
    machine installation and updates.
    </para>
    </listitem>
    </itemizedlist>
  
    <para>
    The file name for a created config-rpm is in the following format, where
    <varname>RPMID</varname> is taken from the <emphasis>@id</emphasis>
    attribute, %{version} is a global run-time macro, RELEASE is computed at
    run time, and DIST is an identifier for the base operating system
    distribution (e.g. 'el6'). See the introduction at <xref
    linkend='release-rpm'/> for additional information on release numbers. 
    </para>

    <informalexample>
    <programlisting>
RPMID-%{version}-RELEASE.DIST.noarch.rpm</programlisting>
    </informalexample>

    <para>
    For example, for a config-rpm with the id "samba-server-config", and a
    base operating system distribution of CentOS 6, the first time the rpm is
    generated, the file name would be as follows:
    </para>

    <informalexample>
    <programlisting>
samba-server-config-6-1.el6.noarch.rpm</programlisting>
    </informalexample>
  </section>

  <section>
    <title>
    Syntax
    </title>

    <programlisting>
[&lt;config-rpms&gt;
  &lt;config-rpm id=TEXT&gt;*
    [&lt;summary&gt;TEXT&lt;/summary&gt;]
    [&lt;description&gt;TEXT&lt;/description&gt;]
    [&lt;license&gt;TEXT&lt;/license&gt;]

    [&lt;repo&gt;...&lt;/repo&gt;]*

    [&lt;requires&gt;CAPABILITY&lt;/requires&gt;]*
    [&lt;provides&gt;CAPABILITY&lt;/provides&gt;]*
    [&lt;obsoletes&gt;CAPABILITY&lt;/obsoletes&gt;]*

    [&lt;prep-script [verbose=FALSE]&gt;TEXT&lt;/prep-script&gt;]*

    [&lt;files [destdir=PATH] [destname=BASENAME] [mode=MODE]
            [content=("file"|"text")]&gt;
      (PATH|TEXT)
     &lt;/files&gt;]*

    [&lt;script type=("post"|"pre"|"preun"|"postun")&gt;
      TEXT
     &lt;/script&gt;]*

    [&lt;trigger trigger=CAPABILITY type=("triggerin"|"triggerun"|"triggerpostun")
             [interpreter=PATH]&gt;
      TEXT
     &lt;/trigger&gt;]*
   &lt;/config-rpm&gt;
&lt;/config-rpms&gt;]</programlisting>
  </section>

  <section id='configrpm-macros'>
  <title>Macros</title>

  <para>
  Deploy provides two <emphasis>module run-time macros</emphasis> to
  config-rpms: <emphasis>%{rpm-id}</emphasis> and
  <emphasis>%{install-dir}</emphasis>.
  </para>

  <para>
  The <emphasis role='strong'>%{rpm-id}</emphasis> macro contains the value
  specified by the <emphasis>@id</emphasis> attribute of the config-rpm element.
  </para>

  <para>
  The <emphasis role='strong'>%{install-dir}</emphasis> macro specifies the
  location where variable data for the config-rpm is installed, specifically
  <filename>/var/lib/deploy/config/%{rpm-id}</filename>.  This can be
  useful for scripts specified within <xref linkend='config-rpms-files'/>,
  <xref linkend='config-rpms-script'/> and <xref
  linkend='config-rpms-trigger'/> elements, as it provides these scripts with a
  convenient location for storing their own runtime data.
  </para>

  <para>
  The <filename>ssh-config.xml</filename> file located within the templates
  folder shows an example of using the <emphasis>%{install-dir}</emphasis>
  macro. See <xref linkend="templates"/> for information on templates.
  </para>

  <para>
  See <xref linkend='macros'/> for more information on macros generally.
  </para>
  </section>

  <section>
    <title>
    Elements
    </title>

    <variablelist>
    <varlistentry id="config-rpm">
      <term>
      config-rpm 
      </term>

      <listitem>
      <para>
      Container element identifying an individual config rpm to be created by
      Deploy.
      </para>

      <para>
      <emphasis role='strong'>Attributes</emphasis>
      </para>

      <variablelist>
      <varlistentry id="rpm-id">
      <term>@id</term>

      <listitem>
      <para>
      TEXT value providing an identifier for the config-rpm. Also serves as the
      name for the config-rpm. For clarity, often specified by appending the
      term "config", as shown in the following example.
      </para>
      </listitem>
      </varlistentry>
      </variablelist>

      <para><emphasis role='strong'>Example</emphasis></para>
      <informalexample>
      <programlisting>
&lt;config-rpm id="example-config">

...

&lt;/config-rpm></programlisting>
      </informalexample>

      <para>
      <emphasis role='strong'>Elements</emphasis>
      </para>

      <variablelist>
      <varlistentry>
        <term>summary</term>
        <listitem>
        <para>
        TEXT value providing a summary of the config-rpm.
        </para>
        
        <para>
        The <emphasis>summary</emphasis> element is optional. The default value
        is specified by the <emphasis>@id</emphasis> attribute.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term>description</term>
        <listitem>
        <para>
        TEXT value providing a description of the config-rpm.
        </para>

        <para>
        The <emphasis>description</emphasis> element is optional. The default
        value is shown below, where FULLNAME is specified by <xref
        linkend="main-fullname"/>.
        </para>

        <para>
        <synopsis>
The %{rpm-id} package provides configuration files and scripts for the
FULLNAME repository. 
        </synopsis>
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>license</term>
        <listitem>
        <para>
        TEXT value providing the name of the license for the RPM.
        </para>

        <para>
        The <emphasis>license</emphasis> element is optional. The default value
        is "GPLv2".
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="config-rpm-repo">
        <term>
        repo
        </term>

        <listitem>
        <para>
        <xref linkend='repo'/> element as described in the <xref
        linkend="repos"/> section of this document. The repos element is
        supported within config-rpm elements to facilitation creation and
        distribution of config-rpm templates. 
        </para>

        <para>
        This element can occur zero or more times
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-requires">
        <term>
        requires
        </term>

        <listitem>
        <para>
        CAPABILITY that must be available on client machines prior to
        installation of the config-rpm.  Capabilities are provided by RPM
        packages. They can be specified as the name of a package, as a file
        or virtual capability provided by one or more packages, or as an
        equation specifying a capability and desired version.
        </para>

        <para>
        For requirements specified in the format '<varname>name</varname> =
        <varname>version</varname>-<varname>release</varname>' or
        '<varname>name</varname> ==
        <varname>version</varname>-<varname>release</varname>', Deploy will
        lock the package to the specified version. As a result, if other
        packages require older or newer versions of the locked package, Deploy
        will raise an error during dependency resolution. Locks specified in
        the <link linkend='packages-package'>packages/package</link> element
        are established ahead of locks specified in
        <emphasis>config-rpm/requires</emphasis> elements.  Only the first lock
        for a package is recognized, all others are silently ignored.
        </para>

        <para>
        See <xref linkend='content-capability'/> for more information on
        specifying CAPABILITY values.
        </para>

        <para>
        The <emphasis>requires</emphasis> element can occur zero or more times
        </para>


        <para><emphasis role='strong'>Examples</emphasis></para>
        <informalexample>
        <programlisting>
&lt;requires>java-1.7.0-openjdk&lt;/requires>
&lt;requires>java-1.7.0-openjdk = 1:1.7.0.55-2.4.7.1.el6_5&lt;/requires></programlisting>
        </informalexample>

        <note>
        <title>A note on requiring package versions</title>
        <para>
        To require a specific package version, you must specify the version
        using and equation, for example:
        <programlisting>httpd = 2.2.15-30.el6_5 # works - an equation
httpd-2.2.15-30.el_6    # does not work</programlisting>
        </para>

        <para>
        If the package is versioned using an epoch, the epoch must also
        be specified, for example:
        <programlisting>java-1.7.0-openjdk = 1:1.7.0.55-2.4.7.1.el6_5 # works - epoch provided
java-1.7.0-openjdk = 1.7.0.55-2.4.7.1.el6_5   # does not work
        </programlisting>
        </para>

        <para>
        When in doubt, view the capabilities for the desired package using rpm,
        as shown below:
        <programlisting>rpm -q --provides name_of_installed_package 
rpm -q --provides -p path/to/uninstalled_file.rpm</programlisting>
        And choose a value from the resulting list.
        </para>
        </note>

        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-provides" >
        <term>
        provides
        </term>

        <listitem>
        <para>
        CAPABILITY, or "virtual package", provided by the RPM. Useful for
        specifying a capability provided by this RPM, which may be provided by
        one or more additional RPMs. For example, multiple RPMs may provide
        "iptables-configuration" and these RPMs may be required, without
        knowing the individual RPM names, by specifying a requirement on
        "iptables-configuration".
        </para>

        <para>
        Can occur zero or more times.
        </para>

        <para>
        See <xref linkend="content-capability"/> for more information on
        CAPABILITY values.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-obsoletes" >
        <term>
        obsoletes
        </term>

        <listitem>
        <para>
        CAPABILITY, typically the name of an RPM package, that must be removed
        from client machines prior to installation of the config-rpm.
        Useful for removing conflicting or undesirable software from client
        machines, particularly for machines without the YUM sync plugin.  See
        also the <xref linkend="release-rpm-updates"/> element for information
        on the YUM sync plugin.
        </para>

        <para>
        Can occur zero or more times.
        </para>

        <para>
        See <xref linkend="content-capability"/> for more information on
        CAPABILITY values.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-prep-script" >
        <term>
        prep-script
        </term>

        <listitem>
        <para>
        TEXT of a script that runs prior to assembling RPM files and scripts.
        Deploy creates and executes the script from the Deploy cache folder on
        the build machine. Scripts that need to access content relative to the
        definition file can make use of the %{definition-dir} macro.
        </para>

        <para>
        Deploy halts processing if a prep-script either returns a non-zero
        exit status or writes output to the standard error file descriptor.
        </para>

        <para>
        Can occur zero or more times.
        </para>

        <para>
        Accepts one attribute: <emphasis>@verbose</emphasis>.
        </para>

        <para>
        <emphasis>@verbose:</emphasis> BOOLEAN value indicating whether the
        Standard Output from the script should be displayed as output from
        Deploy. This attribute is optional. The default value is
        <constant>FALSE</constant>. See <xref linkend="content-boolean"/> for
        information on BOOLEAN values.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-files">
        <term>
        files
        </term>

        <listitem>
        <para>
        Specifies a file or folder containing files to install to client
        machines. Can occur zero or more times.
        </para>

        <para>
        If a file with the same name exists on the client machine, the existing
        file will be renamed with the extension <filename>.rpmsave</filename>.
        On subsequent file removal, the previous file will be restored.
        </para>

        <para>
        Accepts four attributes:
        <emphasis>@content</emphasis>,
        <emphasis>@destdir</emphasis>,
        <emphasis>@destname</emphasis>, and
        <emphasis>@mode</emphasis>.
        </para>

        <para>
        <emphasis>@content</emphasis>: Accepts either "file" or "text".  
        When <emphasis>content</emphasis> is
        "file", the element's text value is treated as a
        <varname>PATH</varname> to a file, whereas when it is "text", the
        element's text value is interpreted as the raw text to use for creating
        a file with the name specified using the @destname attribute.
        The default value is "file".
        </para>

        <para>
        <emphasis>@destdir</emphasis>: Controls the location to which this file
        or folder should be installed on client machines. The default value is
        <filename>"/"</filename>. See <xref
        linkend="destdir"/> for more information on the destdir attribute.
        </para>

        <para>
        <emphasis>@destname</emphasis>:  If <emphasis>@content</emphasis> is
        "text", this attribute is required. See <xref linkend="destname"/> for
        more information on the destname attribute.
        </para>

        <para>
        <emphasis>@mode</emphasis>: See <xref linkend="mode" /> for information
        on the mode attribute.
        </para>

        <para>
        See <xref linkend="path-like-element"/> for more information.
        </para>

        <para>
        <emphasis role='strong'>Example</emphasis>
        </para>

        <para>
        This example installs a file named <filename>smb.conf</filename>,
        located in the same folder as the definition on the build machine, in
        the <filename>/etc/samba</filename> folder on client machines.
        </para>

        <informalexample>
        <programlisting>
&lt;config-rpm id="samba-config">

...

&lt;files destdir="/etc/samba"&gt;smb.conf&lt;/files&gt;

&lt;/config-rpm></programlisting>
        </informalexample>
        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-script"
                   >
        <term>
        script
        </term>

        <listitem>
        <para>
        Specifies a script to run during installation or removal of the
        config-rpm.
        </para>
        
        <para>
        Depending on the script type, it can run each time the RPM is
        installed, uninstalled or updated. For this reason, it should be
        written to be idempotent, meaning that it can be run multiple times
        with the same result. See the section on <emphasis>Configuration
        Packages</emphasis> in the <emphasis>Deploy User
        Manual</emphasis> for more information on writing idempotent scripts.
        </para>

        <para>
        To facilitate debugging, Deploy automatically adds the command
        <command>set -e</command> at the top of each script. This causes the
        entire script to exit immediately if any internal command exits with a
        non-zero status. See <command>man set</command> for additional
        information on the <command>-e</command> option.
        </para>

        <para>
        Scripts that create and store data during runtime operation may wish
        to use the <link linkend='configrpm-macros'>%{install-dir}</link> macro.
        </para>

        <para>
        Can occur zero or more times.
        </para>

        <para>
        Accepts one attribute,
        <emphasis>@type</emphasis>.
        </para>

        <para>
        <emphasis>@type</emphasis>: Specifies the type of RPM script; must be
        one of "pre", "post", "preun" or "postun". This attribute is required.
        For more information on defining scripts in RPM spec files, see the
        Fedora project's <emphasis>"RPM Guide"</emphasis> by Eric
        Foster-Johnson.
        </para>

        <para>
        For <emphasis>post</emphasis>-type scripts, Deploy provides an
        additional runtime variable, <emphasis>$changed</emphasis>.  This
        variable can be used to perform conditional actions based on the status
        of files installed by the config-rpm. The <emphasis>$changed</emphasis>
        variable contains a string-separated list of files, currently or
        previously installed by the configuration package, that meet one or
        more of the following criteria:

        <itemizedlist>
        <listitem>
        <para>
        added since the last configuration package update
        </para>
        </listitem>

        <listitem>
        <para>
        modified since the last configuration package update
        </para>
        </listitem>

        <listitem>
        <para>
        differs from the file on disk
        </para>
        </listitem>

        <listitem>
        <para>
        removed since the last configuration package update
        </para>
        </listitem>
        </itemizedlist>

        The space-separated list of files within the
        <emphasis>$changed</emphasis> variable also has leading and following
        space characters, for easier pattern matching. See the examples section
        for a script that makes use of the <emphasis>$changed</emphasis>
        variable.
        </para>

        <para>
        <emphasis role='strong'>Example</emphasis>
        </para>

        <para>
        The example below defines a script that will run after installation of
        the config-rpm, specifically, after all files defined by
        <emphasis>files</emphasis> elements above have been installed. The
        particular function of this script is to restart the samba service
        (named <emphasis>smb</emphasis>) and configure it to run at system boot.
        </para>

        <informalexample>
        <programlisting>
&lt;config-rpm id="samba-config">

...

&lt;script type="post"&gt;
service smb restart
chkconfig smb on
&lt;/script&gt;

&lt;/config-rpm></programlisting>
        </informalexample>
        </listitem>
      </varlistentry>

      <varlistentry id="config-rpms-trigger"
                   >
        <term>
        trigger
        </term>

        <listitem>
        <para>
        Specifies a script to run during installation or removal of another
        package or capability.
        </para>

        <para>
        Because the script runs each time the trigger event occurs, it should
        be written to be idempotent, meaning that it can be run multiple times
        with the same result. See the section on <emphasis>Configuration
        Packages</emphasis> in the <emphasis>Deploy User
        Manual</emphasis> for more information on writing idempotent scripts.
        </para>

        <para>
        As with regular scripts, Deploy adds the <command>set
        -e</command> command to each trigger script. This is only done,
        however, for trigger scripts with the <emphasis>@interpreter</emphasis>
        attribute set to <filename>/bin/sh</filename> (the default) or
        <filename>/bin/bash</filename>. See the <xref
        linkend='config-rpms-script'/> element for additional information.
        </para>

        <para>
        Triggers that create and store data during runtime operation may wish
        to use the <link linkend='configrpm-macros'>%{install-dir}</link> macro.
        </para>

        <para>
        Can occur zero or more times.
        </para>

        <para>
        Accepts three attributes:
        <emphasis>@interpreter</emphasis>,
        <emphasis>@trigger</emphasis>, and
        <emphasis>@type</emphasis>.
        </para>

        <para>
        <emphasis>@interpreter</emphasis>: PATH to the executable language
        interpreter to use when running the trigger script. The default value
        is <filename>/bin/sh</filename>. See <xref linkend='content-path'/> for
        additional information on PATH values.
        </para>

        <para>
        <emphasis>@trigger</emphasis>: CAPABILITY this script triggers on.
        This attribute is required. See <xref linkend='content-capability'/>
        for additional information on CAPABILITY values. See also the
        <emphasis>@type</emphasis> attribute. 
        </para>

        <para>
        <emphasis>@type</emphasis>: Specifies the type of trigger script; must
        be one of "triggerin", "triggerun", or "triggerpostun".  This attribute
        is required. For more information on defining trigger scripts, see the
        Fedora project's <emphasis>"RPM Guide"</emphasis> by Eric
        Foster-Johnson. See also the <emphasis>@trigger</emphasis> attribute.
        </para>

        <para>
        <emphasis role='strong'>Example</emphasis>
        </para>

        <para>
        This example below shows defining a script that will run on client
        machines each time the <emphasis>bugzilla</emphasis> package is
        installed or updated. This particular script serves to execute a
        bugzilla-provided script (<emphasis>checksetup.pl</emphasis>) after
        first ensuring that a required folder exists.
        </para>

        <informalexample>
        <programlisting>
&lt;config-rpm id="bugzilla-config">

...

&lt;trigger type="triggerin" trigger="bugzilla">
if [[ $1 = 1 ]]; then
  # bugzilla-3.2.10 checksetup.pl fails if this directory doesn't
  # exist. It should create it on its own, but since it doesn't, we will.
  if [ ! -e /usr/share/bugzilla/contrib ]; then
    mkdir /usr/share/bugzilla/contrib
  fi
  # run checksetup.pl
  /usr/share/bugzilla/checksetup.pl
fi
&lt;/trigger&gt;
&lt;/config-rpm></programlisting>
        </informalexample>
        </listitem>
      </varlistentry>
      </variablelist>

      </listitem>
    </varlistentry>
    </variablelist>

  </section>
</section>
