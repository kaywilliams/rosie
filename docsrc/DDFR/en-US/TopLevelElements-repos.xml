<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="repos">
  <title>
  Repos
  </title>

  <section>
    <title>
    Definition
    </title>

    <para>
    Contains a list of input repositories that Deploy uses to download  
    packages for the repository.
    </para>

    <para>
    When the value of <xref linkend="main-type"/> is "system", <application
    class="software">Deploy </application> requires at least one input
    repository.  Repositories are specified using <emphasis>repo</emphasis>
    elements (see <emphasis>&lt;xref linkend="repo" /&gt;</emphasis>). Valid
    repository definitions must include a minimum of one baseurl.
    Furthermore, all repositories must have a unique id.
    </para>

    <section id="repo-base-repository">
      <title>
      Base Repositories
      </title>
      <para>
      Also when the value of <xref linkend="main-type"/> is "system", at least
      one of the input repositories must specify an operating system base
      repository containing install images and isolinux files. These files are
      located within folders called <filename>images</filename> and
      <filename>isolinux</filename>, respectively, and are used to create
      installation images for the system. Base repositories include CentOS base
      repositories, Red Hat Enterprise Linux base repositories, or any system
      repository created by Deploy. Multiple base repositories may be
      specified, making it possible to create new system repositories, for
      example, by starting with a Deploy created system repository and
      adding packages from compatible CentOS or RHEL base and update
      repositories.
      </para>
      
      <para>
      For CentOS, and Deploy-created repositories, the base repository
      will be a public or local mirror.  For Red Hat Enterprise Linux, it will
      be an install tree created by using the following command to mount an ISO
      image file to a local or web-available network location:
      </para>
      
      <informalexample>
      <synopsis>mount -o loop <emphasis>isofile</emphasis><emphasis>mount_location</emphasis></synopsis>
      </informalexample>
      
      <para>
      See the <emphasis>Red Hat Enterprise Linux 5 Installation
      Guide</emphasis> under the topic <emphasis>Preparing for a Network
      Installation</emphasis> for more information.
      </para>

    </section>

    <section id="repo-rhn-repositories">
      <title>
      Red Hat Network Repositories
      </title>
      <para>
      Deploy supports connecting to and downloading packages from Red
      Hat Network (RHN) servers. 
      </para>

      <para>
      Prior to using Deploy to access updates from RHN you will
      need to create a systemid. This requires an available subscription to 
      Red Hat Enterprise Linux. See the Red Hat web site for purchase
      information. Once you have an available subscription, install Red Hat 
      Enterprise Linux 5 in the desired architecture version (i386 or x86_64)
      onto a client machine. Register the machine to Red Hat Network during
      installation, or first boot, or later using the 
      <command>rhn_register</command> command. Once the machine has successfully
      registered with RHN, a systemid file will be created in the 
      <filename class="directory">/etc/sysconfig/</filename> folder of the
      machine. This is the file you will use to configure Deploy to
      access software from RHN. You may copy this file to the Deploy
      build machine if necessary. Note, to ensure the systemid has access to
      the software desired for your repository, you can use the Red Hat
      Network web user interface to locate the machine, and view and alter its
      channel subscriptions.</para>

      <para>After the above steps are completed, you are ready to create RHN
      repository definitions. In the definitions, you will use a custom 
      <filename>rhn://</filename> protocol, as follows, to specify a URL for 
      the channel:</para>

      <para><command>rhn://[$rhnhost]/$rhnchannel/</command></para>

      <para>In the above, $rhnhost is the hostname of the server to contact and
      $rhnchannel is the label of the RHN channel from which to obtain packages.
      If not specified, $rhnhost defaults to a public Red Hat Network server at
      xmlrpc.rhn.redhat.com. RHN channel labels can be located in the RHN web 
      user interface by clicking the name of a channel. Common channel labels 
      include the following:

        <simplelist>
          <member>rhel-i386-server-5</member>
          <member>rhel-i386-server-vt-5</member>
          <member>rhel-x86_64-server-5</member>
          <member>rhel-x86_64-server-vt-5</member>
        </simplelist>
      </para>

      <para>Separate repositories must be defined for the base channel as
      well as for each child channel. See 
      <emphasis><xref linkend="repo-rhn-example"/></emphasis> for
      an example.</para>

    </section>

    <section id="repo-including-excluding-repository-content">
      <title>
      Including and Excluding Repository Content
      </title>

      <para>
      By default, all packages in all repositories are available for 
      Deploy to use. Packages can be excluded from <emphasis>all 
      repositories</emphasis> using the <emphasis>packages/exclude</emphasis>
      element. See <xref linkend="packages" /> for information.
      </para>

      <para>
      Available packages for <emphasis>a single repository</emphasis> can be
      restricted by using one or more <emphasis>repo/exclude</emphasis> or
      <emphasis>repo/include</emphasis> elements. The logic for processing
      these elements, described below, is the same as YUM's processing of
      <varname>include</varname> and <varname>exclude</varname> repo
      options.
      </para>

      <para>
      Using a repository's <emphasis>repo/include</emphasis>
      elements, the list of available packages is restricted to only those
      packages that match one or more of the included <varname>PACKAGE</varname>
      patterns. If no <emphasis>repo/include</emphasis> patterns are 
      specified, all packages are considered available.
      </para>

      <para>
      After processing a repository's <emphasis>repo/include</emphasis>
      elements, the <emphasis>repo/exclude</emphasis> element can be used to
      selectively remove specific packages from the list of available packages
      for the repository. Any package matching one or more of the
      <varname>PACKAGE</varname> patterns specified in a
      <emphasis>repo/exclude</emphasis> element will be ignored by Deploy.
      </para>

      <para>
      See <emphasis><xref linkend="repo-include-exclude-example" /></emphasis>
      for an example.
      </para>

    </section>

    <section id="repo-group">
      <title>
      Repository Groups
      </title>

      <para>
      Deploy supports an expanded type of repository, a
      "repository group". A repository group is a collection of standard
      YUM repositories within a single folder. This feature allows, for 
      example, defining a Red Hat Enterprise Linux installation tree as a
      single repository when in fact it contain multiple repositories.</para>

      <para>
      For example, if there are three repositories
      <filename>repoA</filename>, <filename>repoB</filename>, and
      <filename>repoC</filename> in folder <filename>/var/repos</filename>,
      all the repos can be included in Deploy using a repo group:
      </para>

      <programlisting>
&lt;repo id="repogroup"&gt;
  &lt;baseurl&gt;/var/repos&lt;/baseurl&gt;
&lt;/repo&gt;</programlisting>

      <para>
      This repository contains all the packages available in each
      of the individual repositories <filename>repoA</filename>,
      <filename>repoB</filename>, and <filename>repoC</filename>.
      </para>
    </section>

  </section>

  <section>
    <title>
    Syntax
    </title>

    <programlisting>
[&lt;repos>
  &lt;repo id=TEXT>*
    (&lt;baseurl>URL&lt;/baseurl> | 
    [&lt;download>BOOLEAN&lt;/download>]* | 
    [&lt;exclude>PACKAGE&lt;/exclude>]* | 
    [&lt;gpgkey>PATH&lt;/gpgkey>]* | 
    [&lt;include>PACKAGE&lt;/include>]* | 
    [&lt;systemid>TEXT&lt;/systemid>])
  &lt;/repo>
&lt;/repos>]</programlisting>
  </section>

  <section>
    <title>
    Elements
    </title>

    <variablelist>
    <varlistentry id="repo">
      <term>
      repo
      </term>

      <listitem>
      <para>
      An RPM package repository from which to select packages for  
      including in the repository.
      </para>

      <para>
      This element can occur zero or more times. However, if <xref
      linkend='main-type'/> is "system", the <emphasis
      role="strong">repo</emphasis> top-level element must have at least one
      <emphasis>repos/repo</emphasis> element.
      </para>

      <para>
      The repo element provides a means to define various properties about
      <application>YUM</application> and RHN repositories.
      </para>

      <para>
      Attributes
      </para>

      <variablelist>
      <varlistentry id="repo-id">
        <term>id</term>

        <listitem>
        <para>
        A unique one-word <varname>ID</varname> representing this repository.
        </para>

        <para>
        This attribute is required.
        </para>

        <para>
        If multiple repositories are defined with the same ID, the first
        repository is used and duplicates are silently ignored.
        </para>

        </listitem>
      </varlistentry>
      </variablelist>

      <para>
      Elements
      </para>

      <variablelist>
      <varlistentry id="baseurl" >
        <term>
        baseurl
        </term>

        <listitem>
        <para>
        URL to a valid repository.
        </para>

        <para>
        This element is required. 
        </para>

        <para>
        See <xref linkend="content-url"/> for information on URL values.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="download">
        <term>
        download
        </term>

        <listitem>
        <para>
        BOOLEAN value indicating whether packages
        from this repository should be downloaded when <xref
        linkend='main-type'/> is set to <varname>package</varname>. If
        <varname>TYPE</varname> is not set to <varname>package</varname>, this
        option is ignored.
        </para>

        <para>
        This element is optional. For repositories with the
        <emphasis>@id</emphasis> attribute set to <emphasis>base</emphasis> or
        <emphasis>updates</emphasis>, the default value is
        <constant>TRUE</constant>.  For all other repositories, the default
        value is <constant>FALSE</constant>.
        </para>

        <para>
        See <xref linkend="content-boolean"/> for information on BOOLEAN values.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="exclude">
        <term>
        exclude
        </term>

        <listitem>
        <para>
        PACKAGE pattern to exclude from the repository.
        </para>

        <para>
        This element can occur zero or more times.
        </para>

        <para>
        See <xref linkend="content-package"/> for information on PACKAGE values.
        </para>
        <para>
        See Also <emphasis>
        <xref linkend="repo-including-excluding-repository-content" /></emphasis>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgkey">
        <term>
        gpgkey
        </term>

        <listitem>
        <para>
        PATH to a GPG key.
        </para>

        <para>
        This element can occur zero or more times for any given repository.
        By default, however, one or more keys must be provided across all
        repositories. Deploy uses GPG keys to verify that packages 
        are from trusted providers. Verification can be disabled (not 
        recommended) by setting <emphasis>release-rpm/updates@gpgcheck</emphasis>
        to <constant>FALSE</constant>.
        </para>

        <para>
        See <xref linkend="content-path"/> for information on PATH values.
        </para>

        <para>
        See Also the <emphasis><xref linkend="release-rpm" /></emphasis>
        element.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="include-package"
                   >
        <term>
        include
        </term>

        <listitem>
          <para>
          Package pattern to include from the repository. If one or more
          <emphasis>repo/include</emphasis> patterns are defined, the
          repository will include only packages that match these patterns and
          nothing else.
          </para>

          <para>
          This element can occur zero or more times.
          </para>

          <para>
          See <xref linkend="content-package"/> for information on PACKAGE
          values.
          </para>

          <para>
          See Also <emphasis>
          <xref linkend="repo-including-excluding-repository-content" /></emphasis>.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="systemid"
                     >
          <term>
          systemid
          </term>

          <listitem>
          <para>
          PATH to a systemid file to use when contacting the Red Hat Network.
          </para>

          <para>
          This element is required when using RHN baseurls.
          </para>

          <para>
          See <xref linkend='content-path'/> for informaiton on PATH values.
          </para>

          </listitem>
        </varlistentry>
      </variablelist>

      </listitem>
    </varlistentry>
    </variablelist>

  <section>
    <title>
    Examples
    </title>

    <para>
    In the following examples, line breaks have been added to the
    <emphasis>repos/repo/baseurl</emphasis> to improve readability.
    In a real repository definition, however, line breaks within
    <varname>PATH</varname>-like elements are not allowed.
    </para>

    <section  id="repo-include-exclude-example">
      <title>
      Example 1 - using <emphasis>repos/repo/include</emphasis>
      and <emphasis>repos/repo/exclude</emphasis>
      </title>

      <para>
      In the following example, two repositories are defined directly 
      in XML. The first repository contains includes all packages except
      those that match the <varname>PACKAGE</varname> pattern "xorg-x11-drv*"
      while the second repository only includes packages that match the
      same pattern.
      </para>

      <para>
      Additionally, Deploy will include any and all repositories defined
      in the file <filename>centos-extras.repo</filename>.
      </para>

      <informalexample>
      <programlisting>
&lt;repos&gt;
&lt;repo id="base"&gt;
&lt;baseurl&gt;http://mirror.centos.org/centos/%{version}/os/%{arch}/&lt;/baseurl&gt;

&lt;!-- exclude all xorg-x11-drv packages --&gt;
&lt;exclude&gt;xorg-x11-drv*&lt;/exclude&gt;
&lt;/repo&gt;

&lt;repo id="livna-drivers"&gt;
&lt;baseurl&gt;http://rpm.livna.org/repo/%{version}/%{arch}/&lt;baseurl&gt;

&lt;!-- include only xorg-x11-drv packages --&gt;
&lt;include&gt;xorg-x11-drv*&lt;/include&gt;
&lt;/repo&gt;
&lt;/repos&gt;</programlisting>
      </informalexample>
    </section>

    <section id="repo-rhn-example">
      <title>
      Example 2 - Red Hat Network repositories
      </title>

      <para>
      Repositories that utilize the <filename>rhn</filename> protocol to contact
      the Red Hat Network require a systemid to be specified. See
      <xref linkend="repo-rhn-repositories" /> for more information on using Red Hat
      Network repositories.
      </para>

      <informalexample>
      <programlisting>
&lt;repos&gt;
&lt;repo id="base"&gt;
&lt;baseurl&gt;http://example.company.com/install_server/redhat/enterprise/
         %{version}/en/os/%{arch}&lt;/baseurl&gt;
&lt;/repo&gt;

&lt;repo id="updates"&gt;
&lt;baseurl&gt;rhn:///rhel-%{arch}-server-%{version}&lt;/baseurl&gt;
&lt;systemid&gt;systemid-%{version}Server-%{arch}&lt;/systemid&gt;
&lt;/repo&gt;

&lt;repo id="virtualization"&gt;
&lt;baseurl&gt;rhn:///rhel-%{arch}-server-vt-%{version}&lt;/baseurl&gt;
&lt;systemid&gt;systemid-%{version}Server-%{arch}&lt;/systemid&gt;
&lt;/repo&gt;
&lt;/repos&gt; </programlisting>
      </informalexample>
    </section>
  </section>

  <section>
    <title>
    See Also
    </title>

    <para>
    <xref linkend="content-boolean" />,
    <xref linkend="content-package" />,
    <xref linkend="content-path" />,
    <xref linkend="content-text" />
    </para>
  </section>
</section>
</section>
