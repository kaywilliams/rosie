<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="repos">
  <title>
  Repos
  </title>

  <section>
    <title>
    Definition
    </title>

    <para>
    The repos element specifies repositories that Deploy uses to download
    required packages.
    </para>

    <para>
    Repositories are specified using <emphasis><xref
    linkend='repo'/></emphasis> elements.
    </para>

    <para>
    Repo elements can also be specified within 
    <xref linkend='config-rpm'/> elements.
    </para>

  </section>

  <section>
    <title>
    Syntax
    </title>

    <programlisting>
[&lt;repos>
  &lt;repo id=TEXT>*
    (&lt;baseurl>URL&lt;/baseurl> | 
    [&lt;download>BOOLEAN&lt;/download>] | 
    [&lt;exclude>PACKAGE&lt;/exclude>]* | 
    [&lt;gpgkey>PATH&lt;/gpgkey>]* | 
    [&lt;include>PACKAGE&lt;/include>]* | 
    [&lt;sslcacert>PATH&lt;/sslcacert>] | 
    [&lt;sslclientcert>PATH&lt;/sslclientcert>] | 
    [&lt;sslclientkey>PATH&lt;/sslclientkey>] | 
  &lt;/repo>
&lt;/repos>]</programlisting>
  </section>

  <section>
    <title>
    Elements
    </title>

    <variablelist>
    <varlistentry id="repo">
      <term>
      repo
      </term>

      <listitem>
      <para>
      A YUM package repository from which to select packages for  
      including in the repository.
      </para>

      <para>
      Valid repository definitions must include a minimum of one baseurl.
      Furthermore, all repositories must have a unique id.
      </para>

      <para>
      This element can occur zero or more times. However, if <xref
      linkend='main-type'/> is "system", at least one <emphasis
      role="strong">repo</emphasis> must be defined: an operating system base
      repository.  Base repositories are unique in that they contain install
      image files. These files are located within a folder named
      <filename>images</filename>. They are used to create installation images
      for the system.  Base repositories include CentOS and Red Hat Enterprise
      Linux.
      </para>
      
      <para>
      For CentOS, the base repository will be a public or local mirror.  For
      Red Hat Enterprise Linux, it will be an install tree created by using the
      following command to mount an ISO image file to a local or web-available
      network location:
      </para>
      
      <informalexample>
      <synopsis>mount -o loop <emphasis>isofile</emphasis><emphasis>mount_location</emphasis></synopsis>
      </informalexample>
      
      <para>
      See the <emphasis>Red Hat Enterprise Linux 6 Installation
      Guide</emphasis> under the topic <emphasis>Preparing for a Network
      Installation</emphasis> for more information.
      </para>

      <para>
      <emphasis role='strong'>Attributes</emphasis>
      </para>

      <variablelist>
      <varlistentry id="repo-id">
        <term>id</term>

        <listitem>
        <para>
        A unique <varname>ID</varname> representing this repository. Spaces
        are not permitted in the ID.
        </para>

        <para>
        This attribute is required.
        </para>

        <para>
        If multiple repositories are defined with the same ID, the first
        repository is used and duplicates are silently ignored.
        </para>

        </listitem>
      </varlistentry>
      </variablelist>

      <para>
      <emphasis role='strong'>Elements</emphasis>
      </para>

      <variablelist>
      <varlistentry id="baseurl" >
        <term>
        baseurl
        </term>

        <listitem>
        <para>
        URL to a valid repository.
        </para>

        <para>
        Deploy supports an expanded type of repository, a "repository group". A
        repository group is a collection of repositories within a single
        baseurl.
        </para>

        <para>
        For example, if there are three repositories
        <filename>repoA</filename>, <filename>repoB</filename>, and
        <filename>repoC</filename> in folder <filename>/var/repos</filename>,
        all the repos can be included in Deploy as follows:
        </para>

        <programlisting>
&lt;repo id="repogroup"&gt;
  &lt;baseurl&gt;/var/repos&lt;/baseurl&gt;
&lt;/repo&gt;</programlisting>

        <para>
        This repository contains all the packages available in each
        of the individual repositories <filename>repoA</filename>,
        <filename>repoB</filename>, and <filename>repoC</filename>.
        </para>

        <para>
        This element is required. 
        </para>

        <para>
        See <xref linkend="content-url"/> for information on URL values.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="download">
        <term>
        download
        </term>

        <listitem>
        <para>
        BOOLEAN value indicating whether packages
        from this repository should be downloaded when <xref
        linkend='main-type'/> is set to <varname>package</varname>. If
        <varname>TYPE</varname> is not set to <varname>package</varname>, this
        option is ignored.
        </para>

        <para>
        This element is optional. The default value is
        <constant>FALSE</constant>.
        </para>

        <para>
        See <xref linkend="content-boolean"/> for information on BOOLEAN values.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="exclude">
        <term>
        exclude
        </term>

        <listitem>
        <para>
        PACKAGE pattern to exclude from the repository.
        </para>

        <para>
        By default, all packages in all repositories are available for 
        Deploy to use. Packages can be excluded from <emphasis>all 
        repositories</emphasis> using the <emphasis>packages/exclude</emphasis>
        element. See <xref linkend="packages" /> for information.
        </para>

        <para>
        Available packages for <emphasis>a single repository</emphasis> can be
        restricted using one or more <emphasis>repo/exclude</emphasis> or
        <emphasis>repo/include</emphasis> elements. The logic for processing
        these elements, described below, is the same as YUM's processing of
        <varname>exclude</varname> and <varname>includepkgs</varname> repo
        options.
        </para>

        <para>
        Using a repository's <emphasis>repo/include</emphasis> elements, the
        list of available packages is restricted to only those packages that
        match one or more of the included package patterns.  If no
        <emphasis>repo/include</emphasis> package patterns are specified, all
        packages are considered available.
        </para>

        <para>
        After processing a repository's <emphasis>repo/include</emphasis>
        elements, Deploy processes <emphasis>repo/exclude</emphasis> elements.
        Packages matching patterns specified in these elements will be ignored.
        </para>

        <para>
        This element can occur zero or more times.
        </para>

        <para>
        See <xref linkend="content-package"/> for information on PACKAGE
        patterns.
        </para>

        <para>
        See also <emphasis><xref linkend="include-package"/></emphasis>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgkey">
        <term>
        gpgkey
        </term>

        <listitem>
        <para>
        PATH to a GPG key.
        </para>

        <para>
        This element can occur zero or more times for any given repository.
        By default, however, one or more keys must be provided across all
        repositories. Deploy uses GPG keys to verify that packages 
        are from trusted providers. Verification can be disabled (not 
        recommended) by setting <emphasis>release-rpm/updates@gpgcheck</emphasis>
        to <constant>FALSE</constant>.
        </para>

        <para>
        See <xref linkend="content-path"/> for information on PATH values.
        </para>

        <para>
        See also the <emphasis><xref linkend="release-rpm" /></emphasis>
        element.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry id="include-package">
        <term>
        include
        </term>

        <listitem>
          <para>
          PACKAGE pattern to include from the repository. If one or more
          <emphasis>repo/include</emphasis> patterns are defined, the
          repository will include only packages that match these patterns and
          nothing else.
          </para>

          <para>
          This element can occur zero or more times.
          </para>

          <para>
          See <xref linkend="content-package"/> for information on PACKAGE
          patterns.
          </para>

          <para>
          See also <emphasis><xref linkend="exclude"/></emphasis>.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="sslcacert">
          <term>
          sslcacert
          </term>

          <listitem>
          <para>
          PATH to a file or directory containing certificate authority
          certificates to be used to verify SSL certificates.
          </para>

          <para>
          This element is required when providing
          <constant>sslclientcert</constant> and
          <constant>sslclientkey</constant> elements.
          </para>

          <para>
          See <xref linkend='repos.xml'/> for an example.
          </para>
          
          <para>
          See <xref linkend='content-path'/> for information on PATH values.
          </para>

          </listitem>
        </varlistentry>

        <varlistentry id="sslclientcert">
          <term>
          sslclientcert
          </term>

          <listitem>
          <para>
          PATH to a file containing an SSL certificate for connecting to the 
          repository.
          </para>

          <para>
          This element is required when providing <constant>sslcacert</constant>
          and <constant>sslclientkey</constant> elements.
          </para>

          <para>
          See <xref linkend='repos.xml'/> for an example.
          </para>

          <para>
          See <xref linkend='content-path'/> for information on PATH values.
          </para>

          </listitem>
        </varlistentry>

        <varlistentry id="sslclientkey">
          <term>
          sslclientkey
          </term>

          <listitem>
          <para>
          PATH to a file containing an SSL client key for connecting to the 
          repository.
          </para>

          <para>
          This element is required when providing <constant>sslcacert</constant>
          and <constant>sslclientcert</constant> elements.
          </para>

          <para>
          See <xref linkend='repos.xml'/> for an example.
          </para>
          
          <para>
          See <xref linkend='content-path'/> for information on PATH values.
          </para>

          </listitem>
        </varlistentry>
      </variablelist>

      </listitem>
    </varlistentry>
    </variablelist>

  <section>
    <title>
    Examples
    </title>

    <para>
    In the following example, line breaks may have been added to the
    <emphasis>repos/repo/baseurl</emphasis> to improve readability.
    In a real repository definition, however, line breaks within
    <varname>PATH</varname>-like elements are not allowed.
    </para>

    <section id="repos.xml">
    <title>Example 1 - repos.xml template</title>
    <para>
    Deploy includes a template to assist with repository definition. The
    template is located at
    <filename>%{templates-dir}/el6/common/repos.xml</filename>. It can be used
    within a definition as follows:
    </para>

    <informalexample>
    <programlisting>
&lt;repos>
&lt;xi:include href='%{templates-dir}/%{norm-os}/common/repos.xml'
            xpointer="xpointer(./repo[@id='%{os}-%{edition}-base' or
                                      @id='%{os}-%{edition}-updates'])"/>
&lt;/repos>
    </programlisting>
    </informalexample>

    <para>
    Users will need to complete additional steps to make 
    effective use of the <filename>repos.xml</filename> template. These steps
    include:
    </para>

    <orderedlist>
    <listitem>
    <para>
    Copying the file to a custom templates folder and making Deploy aware of
    that folder (recommended).
    </para>
    </listitem>
    <listitem>
    <para>
    For CentOS-based systems:
    <orderedlist>
    <listitem>
    <para>
    Modifying the <emphasis>centos-mirror</emphasis> 
    macro definition to point to a local mirror (optional).
    </para>
    </listitem>
    </orderedlist>
    </para>
    </listitem>
    <listitem>
    <para>
    For RHEL-based systems:
    </para>
    <orderedlist>
    <listitem>
    <para>
    Creating a rhel-base repository, which includes downloading an ISO image
    and making the contents available on the local machine or from a network
    file location (required).
    </para>
    </listitem>
    <listitem>
    <para>
    Modifying the <emphasis>rhel-mirror</emphasis> macro definition to point to
    the location created above (required).
    </para>
    </listitem>
    <listitem>
    <para>
    Obtaining an SSL key and SSL certificates for accessing RHEL repositories
    using the Red Hat Content Delivery Network (CDN), and place these files in
    the location specified by the template (required).
    </para>
    </listitem>
    </orderedlist>
    </listitem>
    </orderedlist>
    
    <para> 
    These steps are discussed in detail in the <ulink
    url="http://www.deployproject.org/docs/usermanual">Deploy User
    Manual</ulink> under "Creating a Definition".
    </para>

    <para>
    The complete text of <filename>repos.xml</filename> is shown below:
    </para>

    <informalexample>
    <programlisting><xi:include href="../../../../../share/deploy/templates/el6/common/repos.xml" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"/></programlisting>
    </informalexample>
    </section>

    <section  id="repo-include-exclude-example">
      <title>
      Example 2 - using <emphasis>repos/repo/include</emphasis>
      and <emphasis>repos/repo/exclude</emphasis>
      </title>

      <para>
      In the following example, two repositories are defined directly 
      in XML. The first repository contains includes all packages except
      those that match the <varname>PACKAGE</varname> pattern "xorg-x11-drv*"
      while the second repository only includes packages that match the
      same pattern.
      </para>

      <informalexample>
      <programlisting>
&lt;repos&gt;
&lt;repo id="centos-server-base"&gt;
&lt;baseurl&gt;http://mirror.centos.org/centos/%{version}/os/%{arch}/&lt;/baseurl&gt;

&lt;!-- exclude all xorg-x11-drv packages --&gt;
&lt;exclude&gt;xorg-x11-drv*&lt;/exclude&gt;
&lt;/repo&gt;

&lt;repo id="livna-drivers"&gt;
&lt;baseurl&gt;http://rpm.livna.org/repo/%{version}/%{arch}/&lt;baseurl&gt;

&lt;!-- include only xorg-x11-drv packages --&gt;
&lt;include&gt;xorg-x11-drv*&lt;/include&gt;
&lt;/repo&gt;
&lt;/repos&gt;</programlisting>
      </informalexample>
    </section>
  </section>

  <section>
    <title>
    See also
    </title>

    <para>
    <xref linkend="content-boolean" />,
    <xref linkend="content-package" />,
    <xref linkend="content-path" />,
    <xref linkend="content-text" />
    </para>
  </section>
</section>
</section>
