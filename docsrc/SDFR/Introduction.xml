<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<chapter id="DDFR-Introduction"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>
  Introduction
  </title>

  <para>
  The distribution definition file contains instructions for building a
  Linux operating system distribution, or distribution. It defines distribution 
  content and configuration, including name, version, and architecture; package
  repository locations; which packages to include; and the locations of 
  configuration scripts, files and custom graphics. SolutionStudio uses the distribution file
  to assemble, create and publish the distribution. Other programs, such as
  <application class="software">YUM</application>,
  <application class="software">Anaconda</application>, and
  <application class="software">RPM</application>
  use files created by <application class="software">SolutionStudio</application>
  to install and update the distribution on the client system.
  </para>

  <para>
  The distribution file is a text-based file in XML format. Within the
  file are a series of top-level elements that equate to
  modules, or steps, within the distribution build process. These elements,
  in turn, contain their own attributes and elements. There are three
  required top-level elements:
  <emphasis role="strong"><xref linkend="main" /></emphasis>,
  <emphasis role="strong"><xref linkend="repos" /></emphasis>, and
  <emphasis role="strong"><xref linkend="packages" /></emphasis>;
  all other top-level elements are optional. Top-level elements can appear
  in the distribution file in any order. Indentation is for readability
  purposes only.
  </para>

  <para>
  The distribution file has full support of XML Inclusions (XIncludes). Please
  refer to the <ulink url="http://www.w3.org/TR/xinclude/">XInclude Technical
  Report</ulink> for more information.
  </para>

  <para>
  A distribution file can be located in any local directory and invoked from the
  command line using the command <command>solutionstudio</command> followed by the full
  or relative pathname to the file, such as:
  </para>

  <informalexample>
  <programlisting>
<command>solutionstudio</command> /path/to/distribution/file
  </programlisting>
  </informalexample>

  <xi:include href="DocumentConventions.xml"
              xpointer="element(/1)" />

  <section>
    <title>
    Example Distribution Definition
    </title>

    <para>
    Here is a basic example distribution definition based on CentOS 5.
    </para>

    <informalexample>
    <programlisting>
&lt;distribution&gt;

  &lt;main&gt;
    &lt;name&gt;samba&lt;/name&gt;
    &lt;version&gt;5&lt;/version&gt;
    &lt;arch&gt;i386&lt;/arch&gt;
  &lt;/main&gt;

  &lt;repos&gt;
    &lt;repo id="base"&gt;
      &lt;name&gt;CentOS-$releasever - Base&lt;/name&gt;
      &lt;baseurl&gt;http://mirror.centos.org/centos/5/os/i386/&lt;/baseurl&gt;
    &lt;/repo&gt;
    &lt;repo id="updates"&gt;
      &lt;name&gt;CentOS-$releasever - Updates&lt;/name&gt;
      &lt;baseurl&gt;http://mirror.centos.org/centos/5/updates/i386/&lt;/baseurl&gt;
    &lt;/repo&gt;
  &lt;/repos&gt;

  &lt;packages&gt;
    &lt;group repoid="base"&gt;core&lt;/group&gt;
    &lt;group repoid="base"&gt;smb-server&lt;/group&gt;
  &lt;/packages&gt;

&lt;/distribution&gt;
    </programlisting>
    </informalexample>
  </section>

  <section>
    <title>
    Top-Level Elements
    </title>

	  <para>
	  Each top-level element in the DDFR maps to a code module of the same
	  name. Each code module is responsible for performing a single step in
	  the distribution build process.  Related modules are organized into 
	  module groups. To obtain a list of all available modules and module 
	  groups type

	  <programlisting>
	solutionstudio --list-modules
	  </programlisting>

	  at the command prompt. Refer to the SolutionStudio man pages for more information.
	  This document only describes top-level elements that contain
	  user-configurable parameters; not all modules listed from the above
	  command are described below.
	  </para>

	  <para>
	  All top-level elements, including those not described in the following
	  document, support the following method for enabling and disabling the
	  module's processing code. A top-level element
	  <emphasis role="strong">element</emphasis> can be disabled by setting
	  <emphasis>element/@enabled</emphasis> to <constant>FALSE</constant>.
	  Similarly, the module groups
	  <emphasis role="strong">rpmbuild</emphasis>,
	  <emphasis role="strong">package</emphasis>, and
	  <emphasis role="strong">installer</emphasis> can be disabled by setting
	  their <emphasis>@enabled</emphasis> attribute to
	  <constant>FALSE</constant>.
	  </para>

	  <para>
	  The sole exception to the above rules is the
	  <emphasis role="strong">main</emphasis> module, which is required for
	  SolutionStudio to operate properly.
	  </para>

	  <para>
	  The following example will disable the
	  <emphasis role="strong">config</emphasis> top-level element
	  and associated code module:
	  <programlisting>
	&lt;config enabled="false" /&gt;
	  </programlisting>

	  The entire <emphasis role="strong">rpmbuild</emphasis> module group,
	  which includes <emphasis role="strong">config</emphasis>, is
	  disabled like in the following example:

	  <programlisting>
	&lt;rpmbuild enabled="false" /&gt;
	  </programlisting>
	  </para>
  </section>

  <section>
    <title>
    See Also
    </title>

    <para>
    <ulink url="http://www.w3.org/TR/xinclude/">W3 XInclude instructions</ulink>,
    <ulink url="http://fedoraproject.org/wiki/Docs/Drafts/SoftwareManagementGuide">Fedora Project YUM</ulink>,
    <ulink url="http://linux.duke.edu/projects/YUM/">Duke University YUM Project</ulink>,
    <ulink url="http://fedoraproject.org/wiki/Anaconda">Fedora Anaconda Project</ulink>,
    <ulink url="http://rpm.org/">RPM Package Manager</ulink>
    </para>
  </section>

</chapter>
