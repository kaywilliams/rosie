<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="repos"
         xreflabel="repos">
  <title>
  Repos
  </title>

  <section>
    <title>
    Definition
    </title>

    <para>
    Contains a list of repositories that SolutionStudio uses to download its
    packages.
    </para>

    <para>
    In order to operate, <application class="software">SolutionStudio
    </application> requires at least one input repository.
    Repositories are specified by either defining them in XML
    (see <emphasis><xref linkend="repos-repo" /></emphasis>) or by
    pointing to a valid
    <application class="software">YUM</application> repofile (see
    <emphasis><xref linkend="repos-repofile" /></emphasis>). All enabled
    repositories are considered. Valid repository definitions must
    include a minimum of one baseurl or mirrorlist. Furthermore, all
    repositories must have a unique id.
    </para>

    <section id="repo-base-repository"
             xreflabel="Base Repository">
      <title>
      Operating System Base Repository
      </title>
      <para>
      Exactly one of the input repositories must specify an operating system base 
      repository containing installer images and isolinux files, located within
      folders called <filename>images</filename> and <filename>isolinux</filename>,
      respectively. These files are used to create installation images for the
      solution. For CentOS, this repository will be a public or local mirror. 
      For Red Hat Enterprise Linux, it will be an install tree created
      by using the <command>mount -o loop <emphasis>isofile</emphasis>
      <emphasis>mount_location</emphasis></command> command to mount an
      operating system ISO image file to a local or web-available network 
      location. See the <emphasis>Red Hat Enterprise Linux 5 Installation
      Guide</emphasis>, under the topic <emphasis>Preparing for a Network
      Installation</emphasis>, for more information.
      </para>
    </section>

    <section id="repo-rhn-repositories"
             xreflabel="Red Hat Network Repositories">
      <title>
      Red Hat Network Repositories
      </title>
      <para>
      SolutionStudio supports an extension to the standard supported schemes
      in that it can connect to and download packages from Red Hat Network (RHN)
      servers. 
      </para>

      <para>
      Prior to using SolutionStudio to access updates from RHN you will
      need to create a systemid. This requires an available subscription to 
      Red Hat Enterprise Linux. See the Red Hat web site for purchase
      information. Once you have an available subscription, install Red Hat 
      Enterprise Linux 5 in the desired architecture version (i386 or x86_64)
      onto a client system. Register the system to Red Hat Network during
      installation, or first boot, or later using the 
      <command>rhn_register</command> command. Once the system has successfully
      registered with RHN, a systemid file will be created in the 
      <filename type="directory">/etc/sysconfig/</filename> folder of the
      machine. This is the file you will use to configure SolutionStudio to
      access software from RHN. You may copy this file to the SolutionStudio
      build machine if necessary. Note, to ensure the systemid has access to
      the software desired for your solution, you can use the Red Hat
      Network web user interface to locate the system, and view and alter it's
      channel subscriptions.</para>

	    <para>After the above steps are completed, you are ready to create RHN
      repository definitions. In the definitions, you will use a custom 
      <filename>rhn://</filename> protocol, as follows, to specify a URL for 
      the channel:</para>

      <para><command>rhn://[$rhnhost]/$rhnchannel/</command></para>

      <para>In the above, $rhnhost is the hostname of the server to contact and
      $rhnchannel is the label of the RHN channel from which to obtain packages.
      If not specified, $rhnhost defaults to a public Red Hat Network server at
      xmlrpc.rhn.redhat.com. RHN channel labels can be located in the RHN web 
      user interface by clicking the name of a channel. Common channel labels 
      include the following:

        <itemizedlist>
          <listitem>rhel-i386-server-5</listitem>
          <listitem>rhel-i386-server-vt-5</listitem>
          <listitem>rhel-x86_64-server-5</listitem>
          <listitem>rhel-x86_64-server-vt-5</listitem>
        </itemizedlist>
      </para>

      <para>Separate repositories must be defined for the base channel as
      well as for each child channel. See 
      <emphasis><xref linkend="repo-rhn-example" /></emphasis> for
      an example.</para>

      <note>
      SolutionStudio requires additional software including rhnlib and 
      rhn-client-tools rpm packages in order to use RHN repositories. To install
      a complete version of SolutionStudio including all available software, 
      follow the instructions located at 
      http://www.renditionsoftware.com/solutionstudio/download.
      </note>
    </section>

    <section id="repo-including-excluding-repository-contents"
             xreflabel="Including and Excluding Repository Contents">
      <title>
      Including and Excluding Repository Contents
      </title>

      <para>
      By default, all packages in all repositories are available for 
      SolutionStudio to use. Packages can be excluded from <emphasis>all 
      repositories</emphasis> using the <emphasis>exclude</emphasis> element. 
      Available packages for <emphasis>a single repository</emphasis> can be 
      restricted by using one or more <emphasis>repo/exclude</emphasis> or
      <emphasis>repo/includepkgs</emphasis> elements. The logic for
      processing these elements is the same as YUM's processing of
      <varname>includepkgs</varname> and <varname>exclude</varname> repo
      options.
      </para>

      <para>
      Using a repository's <emphasis>repo/includepkgs</emphasis>
      elements, the list of available packages is restricted to only those
      packages that match one or more of the included <varname>PACKAGE</varname>
      patterns. If no <emphasis>repo/includepkgs</emphasis> patterns are 
      specified, all packages are considered available.
      </para>

      <para>
      After processing a repository's
      <emphasis>repo/includepkgs</emphasis> elements, the
      <emphasis>repo/exclude</emphasis> element can be used to
      selectively remove specific packages from the list of available
      packages for the repository. Any package matching one or more of
      the <varname>PACKAGE</varname> patterns specified in a
      <emphasis>repo/exclude</emphasis> element will be ignored
      by SolutionStudio.
      </para>

      <para>See <emphasis><xref linkend="repo-include-exclude-example" /></emphasis> for
      an example.</para>

    </section>

    <section id="repo-valid-repos"
             xreflabel="Valid Repositories">
      <title>
      Valid Repositories
      </title>

      <para>
      SolutionStudio supports standard YUM repositories; that is, folders containing
      a <filename>repodata</filename> folder with repository metadata.
      In addition, SolutionStudio supports an expanded type of repository, a
      "repository group". A repository group is a collection of standard
      YUM repositories within another folder. This feature allows, for 
      example, defining a Red Hat Enterprise Linux installation tree as a
      single repository when in fact it contain multiple repositories.</para>

      <para>
      For example, if there are three repositories
      <filename>repoA</filename>, <filename>repoB</filename>, and
      <filename>repoC</filename> in a folder <filename>/var/repos</filename>,
      in order to include all three repos in YUM, a repofile must contain
      three repo entries:

      <programlisting>
[repoA]
baseurl=/var/repos/repoA

[repoB]
baseurl=/var/repos/repoB

[repoC]
baseurl=/var/repos/repoC
      </programlisting>

      In SolutionStudio, on the other hand, all the repos can be included by
      using a repo group instead:

      <programlisting>
&lt;repo id="repogroup"&gt;
  &lt;baseurl&gt;/var/repos&lt;/baseurl&gt;
&lt;/repo&gt;
      </programlisting>

      This repository contains all the packages available in each
      of the individual repositories <filename>repoA</filename>,
      <filename>repoB</filename>, and <filename>repoC</filename>.
      </para>
    </section>

  </section>

  <section>
    <title>
    Attributes
    </title>

    <variablelist>
    <varlistentry>
      <term>
      enabled
      </term>

      <listitem>
      <para>
      See Common Attribute <emphasis><xref linkend="enabled" /></emphasis>.
      </para>
      </listitem>
    </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>
    Elements
    </title>

    <variablelist>
    <varlistentry>
      <term>
      exclude
      </term>

      <listitem>
      <para>
      A <varname>PACKAGE</varname> pattern to exclude from all repositories
      used in the solution. See Also 
      <emphasis><xref linkend="repo-including-excluding-repository-contents" /></emphasis>.
      </para>

      <para>
      This element can occur zero or more times.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>
      releasever
      </term>

      <listitem>
      <para>
      The value to use to replace the <varname>$releasever</varname> YUM
      variable in all repository baseurls and/or mirrorlists instead of
      the default value, <varname>$VERSION</varname>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry id="repos-repo"
                  xreflabel="repos/repo">
      <term>
      repo
      </term>

      <listitem>
      <para>
      Include a repository from which to select packages for the system
      solution.
      </para>

      <para>
      This element can occur zero or more times. However, the
      <emphasis role="strong">repo</emphasis> top-level element must have
      at least one <emphasis>repos/repo</emphasis> or
      <emphasis>repos/repofile</emphasis> element.
      </para>

      <para>
      The repo element provides a means to define various properties about
      a <application>YUM</application> repository. These definitions can be
      used in addition to or in place of repository definitions defined in
      a YUM repofile.
      </para>

      <para>
      Supported YUM repository options include
      <varname>baseurl</varname>,
      <varname>enabled</varname>,
      <varname>exclude</varname>,
      <varname>gpgcheck</varname>,
      <varname>gpgkey</varname>,
      <varname>includepkgs</varname>, and
      <varname>mirrorlist</varname>. All options
      are defined using elements of the same name. The
      <emphasis>repo/baseurl</emphasis> and
      <emphasis>repo/mirrorlist</emphasis> elements also have full support
      for the YUM variables <varname>$basearch</varname> and
      <varname>$releasever</varname>. However, instead of using the build
      system's architecture and release version, SolutionStudio defaults to using
      <varname>$ARCH</varname> and <varname>$VERSION</varname>,
      respectively. Top-level elements may define a
      <emphasis>releasever</emphasis> element that overrides the default
      replacement value for <varname>$releasever</varname>.
      </para>

      <para>
      Attributes
      </para>

      <variablelist>
      <varlistentry id="repo-id"
                    xreflabel="repo/@id">
        <term>id</term>

        <listitem>
        <para>
        A unique one-word <varname>ID</varname> representing this
        repository within a particular solution. Corresponds to the
        <varname>repositoryid</varname> of a repository in a YUM
        repofile.
        </para>

        <para>
        This attribute is required.
        </para>

        <para>
        See Also the <emphasis><xref linkend="name" /></emphasis>.
        </para>
        </listitem>
      </varlistentry>
      </variablelist>

      <para>
      Elements
      </para>

      <variablelist>
      <varlistentry id="baseurl"
                    xreflabel="repo/baseurl">
        <term>
        baseurl
        </term>

        <listitem>
        <para>
        The <varname>PATH</varname> to a valid repository.
        </para>

        <para>
        This element may occur zero or more times. However, each repository
        must have at least one <emphasis>repo/baseurl</emphasis> or
        <emphasis>repo/mirrorlist</emphasis>.
        </para>

        <para>
        See Also <xref linkend="repo-valid-repos" /> and the
        <emphasis><xref linkend="mirrorlist" /></emphasis> element.
        </para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
        enabled
        </term>

        <listitem>
        <para>
        <varname>BOOLEAN</varname> value indicating whether this
        repository should be enabled or not. Disabled repositories
        are ignored by SolutionStudio when looking for packages to include in
        the solution.
        </para>

        <para>
        The default text value for this element is
        <constant>TRUE</constant>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="exclude"
                    xreflabel="repo/exclude">
        <term>
        exclude
        </term>

        <listitem>
        <para>
        A <varname>PACKAGE</varname> pattern to exclude from the repository.
        </para>

        <para>
        This element can occur zero or more times.
        </para>

        <para>
        See Also <emphasis>
        <xref linkend="repo-including-excluding-repository-contents" /></emphasis>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgcheck"
                    xreflabel="repo/gpgcheck">
        <term>
        gpgcheck
        </term>

        <listitem>
        <para>
        <varname>BOOLEAN</varname> indicating whether GPG key
        checking is enabled for this repository.
        </para>

        <para>
        The default text value for this element is
        <constant>FALSE</constant>.
        </para>

        <para>
        If this element is <constant>TRUE</constant>, then at least one
        <emphasis>repo/gpgkey</emphasis> must be present.
        </para>

        <para>
        See Also the <emphasis><xref linkend="gpgkey" /></emphasis> element.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gpgkey"
                    xreflabel="repo/gpgkey">
        <term>
        gpgkey
        </term>

        <listitem>
        <para>
        The <varname>PATH</varname> to the ACII-armored GPG key
        for the repository.
        </para>

        <para>
        This element can occur zero or more times. If
        <emphasis>repo/gpgcheck</emphasis> is <constant>TRUE</constant>,
        this element must occur at least once.
        </para>

        <para>
        See Also the <emphasis><xref linkend="gpgcheck" /></emphasis>
        element.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="include-package"
                    xreflabel="repo/includepkgs">
        <term>
        includepkgs
        </term>

        <listitem>
          <para>
          A <varname>PACKAGE</varname> pattern to include from the
          repository. If one or more
          <emphasis>repo/includepkgs</emphasis> patterns are defined,
          the repository will include only packages that match these
          patterns and nothing else.
          </para>

          <para>
          This element can occur zero or more times.
          </para>

          <para>
          See Also <emphasis>
          <xref linkend="repo-including-excluding-repository-contents" /></emphasis>.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="mirrorlist"
                      xreflabel="repo/mirrorlist">
          <term>
          mirrorlist
          </term>

          <listitem>
          <para>
          The <varname>PATH</varname> to a file containing a list of
          baseurls to valid repositories.
          </para>

          <para>
          Each repository must have at least one
          <emphasis>repo/baseurl</emphasis> or
          <emphasis>repo/mirrorlist</emphasis>.
          </para>

          <para>
          See Also <xref linkend="repo-valid-repos" /> and the
          <emphasis><xref linkend="baseurl" /></emphasis> element.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="name"
                      xreflabel="repo/name">
          <term>
          name
          </term>

          <listitem>
          <para>
          A human-readable name of the repository.
          </para>

          <para>
          The default value is the repository's <varname>ID</varname>.
          </para>

          <para>
          See Also the <emphasis><xref linkend="repo-id" /></emphasis>
          attribute.
          </para>
          </listitem>
        </varlistentry>

        <varlistentry id="systemid"
                      xreflabel="repo/systemid">
          <term>
          systemid
          </term>

          <listitem>
          <para>
          A <varname>PATH</varname> to the systemid file to use when
          contacting the Red Hat Network.
          </para>

          <para>
          This element is required when using RHN baseurls.
          </para>

          </listitem>
        </varlistentry>
      </variablelist>

      </listitem>
    </varlistentry>

    <varlistentry id="repos-repofile"
                  xreflabel="repos/repofile">
      <term>
      repofile
      </term>

      <listitem>
      <para>
      The <varname>PATH</varname> to a
      <application class="software">YUM</application> repofile.  See also the
      yum.conf man pages for the appropriate syntax of a YUM repofile.
      </para>

      <para>
      This element can occur zero or more times. However, the
      <emphasis role="strong">repo</emphasis> top-level element must have
      at least one <emphasis>repos/repo</emphasis> or
      <emphasis>repos/repofile</emphasis> element.
      </para>
      </listitem>
      </varlistentry>
    </variablelist>

  <section>
    <title>
    Examples
    </title>

    <para>
    In the following examples, line breaks have been added to the
    <emphasis>repos/repo/baseurl</emphasis> and
    <emphasis>repos/repo/mirrorlist</emphasis> to improve readability.
    In a real solution definition file, however, line breaks within
    <varname>PATH</varname>-like elements are not allowed.
    </para>

    <section  id="repo-include-exclude-example"
             xreflabel="Example 1 - using repos/repo/includepkgs and repos/repo/exclude">
      <title>
      Example 1 - using <emphasis>repos/repo/includepkgs</emphasis>
      and <emphasis>repos/repo/exclude</emphasis>
      </title>

      <para>
      In the following example, two repositories are defined directly 
      in XML. The first repository contains includes all packages except
      those that match the <varname>PACKAGE</varname> pattern "xorg-x11-drv*"
      while the second repository only includes packages that match the
      same pattern.
      </para>

      <para>
      Additionally, SolutionStudio will include any and all repositories defined
      in the file <filename>centos-extras.repo</filename>.
      </para>

      <informalexample>
      <programlisting>
&lt;repos&gt;

  &lt;repo id="base"&gt;

    &lt;!-- $basearch will be replaced by $ARCH, $releasever by $VERSION --&gt;
    &lt;baseurl&gt;http://mirror.centos.org/centos/$releasever/os/
          $basearch/&lt;/baseurl&gt;

    &lt;!-- include a mirrorlist as backup in case baseurl fails --&gt;
    &lt;mirrorlist&gt;http://mirrorlist.centos.org/?release=$releasever&amp;amp;
          arch=$basearch&amp;amp;repo=os&amp;amp;country=us&lt;/mirrorlist&gt;

    &lt;!-- exclude all xorg-x11-drv packages --&gt;
    &lt;exclude&gt;xorg-x11-drv*&lt;/exclude&gt;
  &lt;/repo&gt;

  &lt;repo id="livna-drivers"&gt;
    &lt;baseurl&gt;http://rpm.livna.org/repo/$releasever/$basearch/&lt;baseurl&gt;

    &lt;!-- include only xorg-x11-drv packages --&gt;
    &lt;includepkgs&gt;xorg-x11-drv*&lt;/includepkgs&gt;
  &lt;/repo&gt;

  &lt;!-- include additional repos defined in centos-extras.repo --&gt;
  &lt;repofile&gt;centos-extras.repo&lt;/repofile&gt;
&lt;/repos&gt;
      </programlisting>
      </informalexample>
    </section>

    <section id="repo-rhn-example"
             xreflabel="Example 2 - Red Hat Network repositories">
      <title>
      Example 2 - Red Hat Network repositories
      </title>

      <para>
      Repositories that utilize the <filename>rhn</filename> protocol to contact
      the Red Hat Network require a systemid to be specified. See
      <xref linkend="repo-rhn-repositories" /> for more information on using Red Hat
      Network repositories.
      </para>

      <informalexample>
      <programlisting>
&lt;repos&gt;
  &lt;repo id="base"&gt;
    &lt;baseurl&gt;http://example.company.com/install_server/redhat/enterprise/
             $releasever/en/os/i386&lt;/baseurl&gt;
  &lt;/repo&gt;

  &lt;repo id="updates"&gt;
    &lt;baseurl&gt;rhn:///rhel-i386-server-5&lt;/baseurl&gt;
    &lt;systemid&gt;systemid-5Server-$basearch&lt;/systemid&gt;
  &lt;/repo&gt;

  &lt;repo id="virtualization"&gt;
    &lt;baseurl&gt;rhn:///rhel-i386-server-vt-5&lt;/baseurl&gt;
    &lt;systemid&gt;systemid-5Server-$basearch&lt;/systemid&gt;
  &lt;/repo&gt;
&lt;/repos&gt; 
      </programlisting>
      </informalexample>
    </section>

    <section>
      <title>
      Example 3 - using <emphasis>repos/releasever</emphasis>
      </title>

      <para>
      The <emphasis>repos/releasever</emphasis> element allows overriding the 
      value used to replace the <varname>$releasever</varname> YUM variable.

      <informalexample>
      <programlisting>
&lt;system&gt;
  &lt;main&gt;
    ...
    &lt;arch&gt;i386&lt;/arch&gt;
    &lt;version&gt;1.0&lt;/version&gt;
    ...
  &lt;/main&gt;
  ...
  &lt;repos&gt;
    &lt;releasever&gt;5&lt;/releasever&gt;
    &lt;repo id="centos-5"&gt;
	    &lt;baseurl&gt;http://mirror.centos.org/centos/$releasever/os/
	          $basearch/&lt;/baseurl&gt;
    &lt;/repo&gt;
  &lt;/repos&gt;
  ...
&lt;/system&gt;
      </programlisting>
      </informalexample>

      In the example above, the baseurl evaluates to:

      <literallayout>http://mirror.centos.org/centos/5/os/i386 </literallayout>

      If <emphasis>repos/releasever</emphasis> had not been included, the
      baseurl instead would have been:

      <literallayout>http://mirror.centos.org/centos/1.0/os/i386 </literallayout>
      </para>
    </section>
  </section>

  <section>
    <title>
    See Also
    </title>

    <para>

    <varname><xref linkend="variable-arch" /></varname>,
    <varname><xref linkend="content-boolean" /></varname>,
    <varname><xref linkend="content-package" /></varname>,
    <varname><xref linkend="content-path" /></varname>,
    <varname><xref linkend="content-text" /></varname>,
    <emphasis role="strong"><xref linkend="sources" /></emphasis>
    </para>
  </section>
</section>
</section>
