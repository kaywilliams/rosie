<docroot>
  <refentry>
    <!-- exclude -->
    <refsect2>
      <title>&lt;exclude&gt;</title>
      <para>
      exclude is a container for package elements.  It indicates packages that should
      be explicitly excluded from some operation, even if they would normally be
      included in some other way.  For example, the comps element uses exclude to
      list packages that shouldn't be included in the required packages list, even if
      they are included in one of the groups it contains.
      </para>
      <programlisting>
element exclude {
  element package { ... }+
}
      </programlisting>
      <refsection>
        <title>Parents</title>
        <para>create-new, repo</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>comps, include</para>
      </refsection>
    </refsect2>
    
    <!-- include -->
    <refsect2>
      <title>&lt;include&gt;</title>
      <para>
      include is a container for package elements.  It indicates packages that should
      be explicitly included in a distribution.  For example, you can include one or
      more single packages in a distribution by using an include node inside a comps
      element.
      </para>
      <programlisting>
element include {
  element package { ... }+
}
      </programlisting>
      <refsection>
        <title>Parents</title>
        <para>create-new</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>comps, exclude</para>
      </refsection>
    </refsect2>
    
    <!-- path -->
    <refsect2>
      <title>&lt;path&gt;</title>
      <para>
      A valid URI utilizing one of the following supported protocols: file, http,
      and https.  If no protocol is specified, 'file' is typically assumed.  If the
      path is relative instead of absolute, dimsbuild assumes a relative file path
      to ...somewhere...
      </para>
      <programlisting>
element path {
  attribute dest { text }?,
  text
}
      </programlisting>
      <refsection>
        <title>Attributes</title>
        <para>path elements have the following attributes:</para>
        <refsection>
          <title>dest</title>
          <para>
          optional; some path elements are used as both a source and a destination;
          for these cases, the dest attribute tells dimsbuild where to put the file
          or directory; events that do not use dest ignore it; defaults to '/'
          </para>
          <para>
          Any path specified (including the default) will have all leading '/'
          characters stripped to ensure proper joining - to treat the destination
          specified as an absolute path, join it with the string '/'.
          </para>
        </refsection>
      </refsection>
      <refsection>
        <title>Parents</title>
        <para>isolinux, product.img, repo, updates.img, use-existing</para>
        <!-- there are certainly more -->
      </refsection>
      <refsection>
        <title>Examples</title>
        <para>
        The following are a few examples of path elements
        </para>
        <programlisting>
&lt;path&gt;http://redhat.download.fedoraproject.org/pub/&lt;/path&gt;
        </programlisting>
        <para>
        This is a simple web location, pointing to the 'pub' folder at the given
        server.
        </para>
        <programlisting>
&lt;path&gt;/var/cache/profiles&lt;/path&gt;
&lt;path&gt;file:///var/cache/profiles&lt;/path&gt;
        </programlisting>
        <para>
        These are equivalent paths to a file location on the local machine.  It is
        uncertain whether this is a file or a directory; in most cases is is
        recommended that trailing directories are affixed with a '/' to be clear.
        </para>
        <programlisting>
&lt;path&gt;source/schema/di.xml&lt;/path&gt;
        </programlisting>
        <para>
        This is an example relative path.  This path is appended onto the relative
        path root ...defined somehow...
        </para>
        <programlisting>
&lt;path dest='/var/cache'&gt;/var/cache/profiles&lt;/path&gt;
        </programlisting>
        <para>
        This is a path that includes a dest attribute.  If dimsbuild copies this file
        somewhere, it will have 'var/cache' appended to the destination before copying.
        </para>
      </refsection>
    </refsect2>
    
    <!-- repo -->
    <refsect2>
      <title>&lt;repo&gt;</title>
      <para>
      repo elements represent a local or remote repository that can be used by
      dimsbuild as a source for input files, including rpms, stage2 images, kernels
      and initrds, and other files.  They contain a number of nodes that define all
      the characteristics of a repository for dimsbuild's use.
      </para>
      <programlisting>
element repo {
  attribute id { text },
  attribute type { text }?,
  element path { ... }
  &amp; element include { ... }?
  &amp; element exclude { ... }?
  &amp; element gpgkey { ... }?
  &amp; element gpgcheck { ... }?
}
      </programlisting>
      <refsection>
        <title>Parents</title>
        <para>repos, sources</para>
      </refsection>
      <refsection>
        <title>Attributes</title>
        <para>package elements have the following attributes:</para>
        <refsection>
          <title>id</title>
          <para>a unique id representing this repo in the config file</para>
        </refsection>
        <refsection>
          <title>type</title>
          <para>
          optional; a classification for this repo, allowing multiple repos to be
          grouped together; defaults to the empty string
          </para>
        </refsection>
      </refsection>
      <refsection>
        <title>Examples</title>
        <para>
        The following is an example repository element.  Note that the definition
        includes a macro element; see the appropriate section for information on
        how these are processed.
        </para>
        <programlisting>
&lt;repo id='example-fedora-repo'&gt;
  &lt;macro id='root'&gt;http://redhat.download.fedoraproject.org&lt;macro&gt;
  &lt;path&gt;%{root}/pub/fedora/linux/core/6/i386/os/&lt;/path&gt;
  &lt;gpgkey&gt;
    %{root}/pub/fedora/linux/core/6/i386/os/RPM-GPG-KEY-fedora
  &lt;/gpgkey&gt;
  &lt;gpgcheck&gt;yes&lt;/gpgcheck&gt;
&lt;/repo&gt;
        </programlisting>
      </refsection>
    </refsect2>
    
  </refentry>
</docroot>
