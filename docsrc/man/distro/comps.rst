<comps> (top level)
-------------------

comps is the container for the comps module's configuration data

::

	element comps {
	  text|(
	    element group { ... }?,
	    element package { ... }?,
	    element exclude-package { ... }?
	)}


Parents
*******

distro

Examples
********

The following are two examples of comps elements.  The first instructs
spin to use an already-existing group file, /var/temp/comps.xml.


::

         <comps>/var/temp/comps.xml</comps>


The second indicates that comps should generate a new file.  The group
file will have the 'core', 'base' and 'base-x' groups included. The 'core'
group is included by default. The 'base-x' group must come from the
repository with id 'fedora-6'.  Furthermore, the core group will include
the 'createrepo', 'httpd', and 'sudo' packages, and
excludes the 'vim-minimal' package.

::

	<comps>
	  <group>base</group>
	  <group repoid='fedora-6'>base-x</group>
	  <package>createrepo</package>
	  <package>httpd</package>
	  <package type='conditional'
	              requires='filesystem'>sudo</package>
	  <exclude-package>vim-minimal</exclude-package>
	</comps>


<exclude-package>
-----------------

optional; allows packages to be excluded from the generated comps file;
text value indicates the name of an RPM in one of the source repositories

::

	element exclude-package { text }

Parents
*******

comps

Examples
********

See comps for an example of an exclude-package element

<group>
-------

optional; used to list a group that should be contained in the groupfile
generated by the comps event. The group element contains the name of a
single package group as defined in a groupfile.  Specifically, it must
be the same as the id element of a group in a groupfile for it to be
considered a match.

::

	element group {
	  attribute default { text }?
	  attribute repoid { text }?,
	}


Attributes
**********

group elements have the following attributes:

default
+++++++

optional; possible values include boolean values and 'default'; if
specified and a boolean value, comps resets the value of the 'default'
element for the group to this value; if specified and 'default', comps
leaves the values of the 'default' element of this group unchanged;
otherwise, it sets the value to 'true'


repoid
++++++


optional; the id of the repository from which to obtain this group; defaults
to None, which means that all repositories are considered


Parents
*******

comps

Example
*******

See comps for an example of a group element

<package>
---------

optional; used to specify a package to be added to the core group of the
groupfile generated by the comps event. A package element's text value
indicates the name of an RPM in one of the source repositories.

::

	element package {
	  attribute type { text }?,
	  attribute requires { text }?,
	}


Attributes
**********

package elements have the following attributes:

type
++++

optional; one of 'conditional', 'default', 'optional', or 'mandatory';
controls the behavior of anaconda when installing packages onto the end
user system; defaults to 'mandatory'

'conditional' packages are installed only if their required package is also
installed, as indicated by the 'requires' attribute (see below).  'default'
pacakges are installed if the group to which they belong has its 'default'
attribute set to true.  'optional' pacakges are installed if at install time
the user chooses to install all group packages instead of just the default
set.  'mandatory' packages are always installed.

requires
++++++++

required if type is 'conditional', ignored otherwise; indicates to which RPM
this package should be conditionally linked


Parents
*******

comps

Examples
********

See comps for an example of a package element

