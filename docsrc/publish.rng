<docroot>
  <refentry>
    
    <!-- local-webroot -->
    <refsect2>
      <title>&lt;local-webroot&gt;</title>
      <para>
      The local-webroot element is the directory serving as the build machine's web
      root (same as 'DocumentRoot' in httpd.conf, for example).  This, when combined
      with the path-prefix element, form the path to the directory into which new
      custom builds are published.
      </para>
      <programlisting>
element local-webroot { text }
      </programlisting>
      <refsection>
        <title>Parent</title>
        <para>publish</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>path-prefix</para>
      </refsection>
    </refsect2>
    
    <!-- path-prefix -->
    <refsect2>
      <title>&lt;path-prefix&gt;</title>
      <para>
      The path-prefix element is appended onto the end of local-webroot and
      remote-webroot elements to determine the publish directory for local and remote
      machines, respectively.  In other ways, it is similar to a standard path
      element.
      </para>
      <programlisting>
element path-prefix { text }
      </programlisting>
      <refsection>
        <title>Parent</title>
        <para>publish</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>local-webroot, remote-webroot</para>
      </refsection>
    </refsect2>
    
    <!-- publish -->
    <refsect2>
      <title>&lt;publish&gt; (top level)</title>
      <para>
      The publish section contains data relevant to 'publishing' the distribution
      created by dimsbuild to a web-accessible location on the build machine.
      </para>
      <programlisting>
element publish {
  element remote-webroot { ... }?
  &amp; element local-webroot { ... }?
  &amp; element path-prefix { ... }?
  &amp; element repofile { ... }?
}
      </programlisting>
      <refsection>
        <title>Parent</title>
        <para>distro</para>
      </refsection>
      <refsection>
        <title>Examples</title>
        <para>The following is an example publish element:</para>
        <programlisting>
&lt;publish&gt;
  &lt;remote-webroot&gt;http://www.example.com&lt;/remote-webroot&gt;
  &lt;local-webroot&gt;/var/www/html&lt;/local-webroot&gt;
  &lt;path-prefix&gt;software/custom_distros&lt;/path-prefix&gt;
&lt;/publish&gt;
        </programlisting>
        <para>
        The above config section instructs dimsbuild to publish the distribution it
        creates to '/var/www/html/software/custom_distros'.  Other computers can then
        access the distribution by navigating to 'http://www.example.com/software/custom_distros'
        </para>
      </refsection>
    </refsect2>
    
    <!-- remote-webroot -->
    <refsect2>
      <title>&lt;remote-webroot&gt;</title>
      <para>
      The remote-webroot element indicates the protocol and hostname of the publishing
      machine ('authority' being the official term) as seen from other computers that
      will allow them web access to custom distributions published by the build machine.
      It contains no directory information; merely the server portion of the url.  When
      combined with path-prefix, this forms a full URL to allow remote access to
      dimsbuild-created distributions.
      </para>
      <programlisting>
element remote-webroot { text }
      </programlisting>
      <refsection>
        <title>Parent</title>
        <para>publish</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>path-prefix</para>
      </refsection>
    </refsect2>
    
    <!-- repofile -->
    <refsect2>
      <title>&lt;repofile&gt;</title>
      <para>
      The repofile element pertains to the creation of a yum repository definition file
      that can be used to update machines based off this build.  If repo file creation
      is enabled (by setting the enabled attribute to 'true'), then dimsbuild generates
      a .repo file that points to the publish directory on the build machine which can
      be used by end user machines for updates.
      </para>
      <programlisting>
element repofile {
  attribute enabled { text }?,
  attribute include-input { text }?,
}
      </programlisting>
      <refsection>
        <title>Attributes</title>
        <para>repofile elements have the following attributes:</para>
        <refsection>
          <title>enabled</title>
          <para>
          optional; whether or not to generate a .repo file for the distribution;
          defaults to 'true'
          </para>
        </refsection>
        <refsection>
          <title>include-input</title>
          <para>
          optional; if enabled, generates a second .repo file pointing to the
          repositories used as inputs by dimsbuild in creating the final output;
          defaults to 'false'
          </para>
        </refsection>
      </refsection>
      <refsection>
        <title>Parent</title>
        <para>publish</para>
      </refsection>
      <refsection>
        <title>See also</title>
        <para>release-rpm</para>
      </refsection>
    </refsect2>
    
  </refentry>
</docroot>
