<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="enterprise">
  <title>Enterprise</title>

  <para>
  Enterprise system deployment is typically managed by in-house system
  administrators, often with the assistance of deployment automation
  infrastructure such as network installation servers or more highly integrated
  systems/operations management solutions. Enterprise system administrators can
  use Deploy to perform system integration, testing and maintenance,
  while using existing infrastructure to automate system deployment.
  </para>

  <para>
  Two primary strategies can be followed for integrating Deploy
  repositories with enterprise deployment management systems. One of those is
  to use Deploy repositories for performing Preboot Execution
  Environment (PXE)-based system installations. PXE is an efficient deployment
  infrastructure, supported by most enterprise management solutions.  The other
  strategy is to use Deploy to generate system images in a format
  supported by the deployment system. PXE-based deployment will be discussed in
  this chapter. System image-based deployment will be covered in 
  <xref linkend='virtual'/>.
  </para>

  <para>
  PXE deployment is recommended over system image deployment, if supported by
  your management system, as it eliminates the added step of creating and
  maintaining system images. See the documentation for your particular
  management solution to learn if it provides support for PXE.
  </para>

  <para>
  Deploy enables PXE deployment by creating system repositories in a
  standard operating system distribution format known as an
  <emphasis>installation tree</emphasis>. An installation tree is a folder in
  the file system that contains all the needed files and subfolders to perform
  a complete system installation.
  </para>

  <section>
  <title>PXE-based System Deployment</title>

  <para>
  Because Deploy system repositories are created in a standard
  <emphasis>installation tree</emphasis> format, they can be used with any
  deployment system that supports the Preboot Execution Environment (PXE)
  protocol.
  </para>
  
  <para>
  If you organization does not have an existing systems management solution,
  you can implement a simple PXE-based deployment system using components
  available in the default CentOS and Red Hat Enterprise Linux server operating
  systems. See the advanced topics section of the <emphasis>Red Hat Enterprise
  Linux Installation Guide</emphasis> for more information.
  </para>

  <para>
  To integrate your system repositories with a PXE-based deployment system you
  will first create repositories, and then configure the PXE service to
  expose those repositories. 
  </para>

  <section>
  <title>Create repositories</title>

  <para>
  To enable this scenario, system administrators must first establish a web
  server for deploying system repositories. Similar to the small business
  scenario described in the previous section, the web server can be running on
  any operating system - the only requirements being that 1) client systems can
  access it over HTTP/HTTPS and 2) the Deploy build machine can
  copy/synchronize files to its underlying file system.
  </para>

  <para>
  For this scenario, we assume that the final production machines (e.g.
  laptops, desktops or servers) will be installed using PXE-capable deployment
  systems. As with the small business scenario, maintenance will occur
  automatically using YUM. 
  </para>

  <para>
  Again as in the small business scenario, we assume that production machines
  are strictly managed, specifically that all applications and configuration on
  the machines are controlled by the system administrator rather than by end
  users. Some users may require a greater degree of control over their
  machines, in which case system administrators can accommodate these users
  following a strategy similar to that described under <xref
  linkend='consumer'/>.
  </para>

  <para>
  In fact, the major difference between this scenario and the small business
  scenario is the additional use of PXE deployment infrastructure. All
  other aspects of the small business scenario, including the ability to
  manually install systems via CD/DVD, still apply.
  </para>

  <para>
  See <xref linkend='smb'/> for an overview and example skeleton
  system repository definition that applies to both small business and
  enterprise.
  </para>

  <note>
  <para>
  For enterprise scenarios, you will typically omit the <emphasis>network
  --hostname</emphasis> option from the kickstart file for the repository, as
  the hostname will be provided by DHCP.
  </para>
  </note>
  </section>

  <section>
  <title>Configure the PXE service to expose repositories</title>
  <para>
  Instructions for PXE boot configuration vary across deployment management
  solutions. In this section, we will discuss PXE boot configuration generally.
  Consult the documentation for your deployment management solution for
  details.
  </para>

  <para>
  In general, configuring your PXE service will involve specifying the location
  for three files, the kernel and initrd images, and the kickstart file.
  </para>

  <para>
  You may need to copy the kernel and initrd image files from the production
  web server to the PXE boot server. This can be accomplished using additional
  elements in the definition as shown below. These additions will
  cause the kernel and initrd images to be copied to the PXE server each time
  Deploy updates production images.
  </para>

  <informalexample>
  <programlisting>&lt;publish>
...
&lt;triggers>treeinfo&lt;triggers>
&lt;script id='sync-to-pxe-server' type='install'/>
#!/bin/sh
rsync -a --delete -e ssh \
"/var/www/html/deploy/systems/%{id}/images/pxeboot" \
"user@pxe.company.com:/pxe/file/location/%{id}"
&lt;/script>
&lt;publish></programlisting>
  </informalexample>

  <para>
  Once the kernel and initrd images are available to the PXE server, you
  configure the PXE service to install client machines using these files.
  Again, configuration varies from system to system, but in general you should
  specify the boot kernel as the path to the <filename>vmlinuz</filename> file
  copied in the script above.  In addition, you should specify at least two
  kernel boot arguments. These arguments will be the paths to the initrd image
  and the kickstart file. For example -
  </para>

  <informalexample>
  <programlisting>kernel /path/to/vmlinuz/on/pxeboot/server
append initrd=/path/to/initrd.img/on/pxeboot/server ks=http:/www.company.com/deploy/systems/web-server-centos-6-x86_64/ks.cfg ...</programlisting>
  </informalexample>

  <para>
  In addition to the <emphasis>initrd</emphasis> and <emphasis>ks</emphasis>
  arguments, a number of additional boot arguments, also known as boot options,
  can be specified. These boot options are described in the <emphasis>Advanced
  Installation options</emphasis> section of the <emphasis>Red Hat Enterprise
  Linux Installation Guide</emphasis>.
  </para>

  </section>
  </section>
</section>

