<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section>
  <title>How Spin Makes Typical System and Build Management Tasks
  Easier</title>

  <para>Residing on a build system, Spin and its components make your
  appliance administration tasks easier during every step of the process.
  Three are four main components within the Spin build system:</para>

  <para><orderedlist>
      <listitem>
        <para><emphasis role="strong">Appliance configuration</emphasis>,
        consisting of <application class="software">Spin</application>'s
        configuration information, your appliance's definition file and its
        configuration scripts;</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Appliance distribution</emphasis>,
        containing your appliance's distribution images with the appliance
        RPMs;</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong"><application
        class="software">Spin'</application>s cache</emphasis>, containing the
        cached contents of the OS and application packages for your appliance;
        and</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong"><application
        class="software">Spin</application>'s log</emphasis>, a record of your
        appliance's builds.</para>
      </listitem>
    </orderedlist>The first component maintains the operations of <application
  class="software">Spin</application>, including logging and cache
  preferences; your appliance's definition file, which defines repositories,
  application groups and packages; and your appliance's configuration scripts,
  to name a few. The second component contains the images used during first
  boot and appliance deployment to install the appliance on the client system.
  The last two components, the cache and log, enable <application
  class="software">Spin</application> to outperform its competitors in terms
  of speed to build and track information.</para>

  <para>These four areas dramatically improve your ability to create, deploy
  and maintain your appliances in a superior manner.</para>

  <section>
    <title>Testing an appliance</title>

    <para>While preparing the appliance definition file, you can test the OS
    with its various applications and configurations, together or in separate
    combinations, until you achieve the desired results.</para>

    <para><orderedlist>
        <listitem>
          <para><emphasis role="strong">Test different configuration and
          application combinations within a single appliance definition
          file.</emphasis> <application class="software">Spin</application>
          uses an appliance definition file as a recipe for your appliance.
          You can create an appliance template, then enable or disable
          appliance components using the appliance definition file to test
          application compatibility and functionality with the OS until you
          derive the combination that meets your needs.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Accelerate testing procedures by
          eliminating unnecessary steps.</emphasis> Reduce the appliance build
          time by forcing or skipping build components during a single build
          run. For example, you may want to test connection and download
          speeds to particular repositories, but you may not want to build the
          actual distribution images.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Locate performance problem areas
          quickly and resolve them.</emphasis> <application
          class="software">Spin</application> writes build actions to a log
          file up to Log Level 5, the debugging mode. This information
          includes non-fatal errors that may impede performance without
          halting the process altogether.</para>
        </listitem>
      </orderedlist></para>
  </section>

  <section>
    <title>Deploying appliances to clients</title>

    <para>Spin empowers you to deploy the same appliance to one or more client
    systems with less time and effort than it would take to build and
    configure identical systems manually.</para>

    <para><orderedlist>
        <listitem>
          <para><emphasis role="strong">Eliminate the need for custom
          deployment automation scripts and applications.</emphasis>
          <application class="software">Spin</application>-generated
          installation images are complete and ready to deploy via standard
          deployment tools and methods.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Dramatically reduce the download time
          when deploying an appliance.</emphasis> <application
          class="software">Spin</application> creates a local appliance
          repository, so the client installation connects to your local
          download server, not various remote Internet servers, thereby
          reducing the connection speed.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Increase the consistency of the
          appliance components.</emphasis> By using its own RPMs and local
          repository on the build system for a particular appliance, Spin
          enables you to consistently deploy that appliance to all the client
          systems.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Deploy your appliances to multiple
          machines quickly and reliably.</emphasis> Once you have identified
          your client system hardware, an appliance and your boot media, you
          can systematically and simultaneously create multiple client systems
          using a multihoned or replicate web server.</para>
        </listitem>
      </orderedlist></para>
  </section>

  <section>
    <title>Maintaining and updating distributions</title>

    <para>Spin simplifies and standardizes the maintenance and update of
    complex appliances through its architecture and appliance
    definitions.</para>

    <para><orderedlist>
        <listitem>
          <para><emphasis role="strong">Utilize standard XML nomenclature to
          create an understandable yet powerful appliance
          definition.</emphasis> Combining the standardized XML-based
          appliance definitions with familiar repository and package concepts
          makes reading, writing, understanding and updating the appliance
          definition straightforward.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Eliminate the need for custom
          configuration management systems.</emphasis> Spin bundles
          configuration into an RPM, making it easy to deploy and maintain
          using standard package management tools, such as <application
          class="software">YUM</application>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Reduce the learning curve for various
          standard package management tools.</emphasis> By utilizing an
          appliance definition file that defines key repository, OS, package
          and configuration parameters, you can reduce the burden of
          understanding the intricacies of multiple software tools, i.e.
          <application class="software">Anaconda</application>, <application
          class="software">YUM </application>and <application
          class="software">RPM</application>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Ease software update testing and
          deployment.</emphasis> Spin allows software updates to be deployed
          either independently or on a per-appliance basis. This allows
          software applications on some machines to be updated quickly as
          needed, while others go through a more rigorous testing process, or
          deploy different application versions altogether.</para>
        </listitem>
      </orderedlist></para>
  </section>

  <section>
    <title>Migrating appliances and recovering systems</title>

    <para>Migrating to new hardware or recovering from a disaster are critical
    management issues. Spin can reduce the time needed and make work
    estimations more reliable.</para>

    <para><orderedlist>
        <listitem>
          <para><emphasis role="strong">Reduce downtime for system recovery
          and migration.</emphasis> Spin makes it easy to maintain current
          up-to-date system images which are ready for redeployment in
          critical situations such as disaster recovery, or planned situations
          such as system migration.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Have accurate estimates of
          redeployment and recovery.</emphasis> In addition to build process
          details, the Spin logs include start and end times for build cycles,
          so you can reliably predict disaster recovery time and effort needed
          for all your appliances.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Migrate one appliance to new hardware
          in a fast, efficient, repeatable manner.</emphasis> Migrate an
          appliance that has been configured for one architecture to another
          by changing a few items in the appliance definition file in just
          minutes. Use Spin on a sandbox build system to test the appliance
          before readying it for deployment to the new hardware
          systems.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Utilize a local cache to quickly
          redeploy an appliance.</emphasis> You do not have to rely on the
          consistency or uptime of an Internet-based host to redeploy your
          appliance or continue operations. <application
          class="software">Spin</application> utilizes its own cached contents
          to complete installations and client system configurations.</para>
        </listitem>
      </orderedlist></para>
  </section>

  <section>
    <title>Upgrading appliances and their components</title>

    <para>Before upgrading a client system's hardware or an appliance's OS or
    one of its applications, use Spin to test those upgrades with an
    appliance's other components to ensure compatibility and stability.</para>

    <para><orderedlist>
        <listitem>
          <para><emphasis role="strong">Reduce planning and deployment effort
          for hardware, OS and application upgrades.</emphasis> <application
          class="software">Spin</application>'s appliance definition files
          function as system descriptions. You can use these definitions as a
          starting point when upgrading to ensure that all prior system
          functions carry forward.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Increase speeds for follow-on
          builds.</emphasis> <application class="software">Spin</application>
          uses its built-in caching technology to store the appliance packages
          locally for quick access. If a package has not changed between
          builds, <application class="software">Spin</application> uses the
          cached copy.</para>
        </listitem>

        <listitem>
          <para><emphasis role="strong">Utilize <application
          class="software">Spin</application> as an appliance configuration
          management system. </emphasis> Adding version control to the
          <application class="software">appliance configuration portion of
          Spin's</application> build system, as described in the introduction,
          empowers you to manage your appliance releases.</para>
        </listitem>
      </orderedlist></para>
  </section>
</section>
