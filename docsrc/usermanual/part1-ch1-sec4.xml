<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section>
  <title>Building System Distributions with SystemBuilder</title>

  <para><application class="software">SystemBuilder</application> empowers you
  to build an system distributions using a single configuration file and a 
  single command. 

  <para>To begin the system distribution build process, you must first define
  the system through a system definition file, commonly tagged with an
  <filename class="extension">.xml</filename> filename extension. It's
  XML syntax, defined in the SDFR, has multiple TLEs, each of which gives you
  an extraordinary level of control over system components and
  configuration.</para>

  <para>In addition to serving as the executable road map for the system
  distribution, system definition file has the added
  benefit of self-documenting your system. Storing it in a versioning
  system makes tracking and auditing system life cycle changes
  easier.</para>

  <para>Next, build the system distribution using the 
  <command>systembuilder</command> command.
  <application class="software">SystemBuilder</application> provides many
  command-line options for controlling logging, module execution and <application
  class="software">SystemBuilder</application>'s configuration. By only
  utilizing the system definition file and restricting direct user interaction,
  <application class="software">SystemBuilder</application>
  enables you to schedule automated build and update processes during off-peak
  hours, thereby freeing up technical resources and bandwidth and not
  interfering with end users' activities.</para>

  <para>By default, <application class="software">SystemBuilder</application>
  stores the completed system distribution on the <application
  class="software">SystemBuilder</application> build system, making it the
  download server. But you can change the download location using the system
  definition file. To deploy client systems, you
  can use a download server and typical boot media (CD, DVD or USB).</para>

  <para>Enabling you to easily and reliably update the system distribution on
  the build system and client systems is one of <application
  class="software">SystemBuilder</application>'s strengths. Running
  <command>systembuilder</command> on the build system will check the public OS
  and application repositories for package updates. If found, <application
  class="software">SystemBuilder</application> will rebuild the distribution.
  You can also redefine the system using the system definition file, then use
  <command>systembuilder</command> to rebuild the distribution. Using the
  <userinput>yum update</userinput> command on the client system will update
  client systems from the download server. Add to this the fact that you can
  schedule <command>systembuilder</command> to run automatically, and you have a
  powerful system deployment an maintenance management tool.</para>

  <para>In summary, using a single system definition file and some common
  system administration tasks, you can define and build a comprehensive
  system distribution with a Linux-based OS and one or more applications,
  deploy it to multiple machines and update it automatically.</para>

  <para><application class="software">SystemBuilder</application> can accomplish
  all this and make your job as a system and build administrator more efficient
  and less labor intensive.</para>
</section>
