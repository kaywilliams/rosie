<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section>
  <title>Defining a Distribution</title>

  <para>To define your Samba system distribution, you will need to do the
  following:</para>

  <para><itemizedlist>
      <listitem>
        <para>Define some basic system information;</para>
      </listitem>

      <listitem>
        <para>Select the repositories from which to download the OS, the Samba
        RPMs and any dependency files;</para>
      </listitem>

      <listitem>
        <para>Define the application groups and packages to include with the
        OS; and</para>
      </listitem>

      <listitem>
        <para>Provide configuration information.</para>
      </listitem>
    </itemizedlist></para>

  <section>
    <title>Naming the system distribution</title>

    <para>The first step to creating a system distribution is creating the
    definition file. The tags &lt;system&gt; and &lt;/system&gt; encapsulate
    all top-level elements and their child elements and attributes.</para>

    <para><informalexample>
        <programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;system xmlns:xi="http://www.w3.org/2001/XInclude"&gt;

&lt;!-- Included top-level elements with child elements and attributes --&gt;

&lt;/system&gt;</programlisting>
      </informalexample></para>

    <para>The first required element, <emphasis>main</emphasis>, includes the
    name of system distribution, the system architecture and the version. These
    three items make up the default <varname>$DISTRIBUTIONID</varname>, which
    SystemBuilder uses to create directories for storing the completed system
    distribution and providing web access to the distribution.</para>

    <para><note>
        <para>The TLE elements can be in any order within a distribution definition
        file.</para>
      </note></para>

    <para>In the example below, the system distribution version will be 5, and
    the system architecture will be i386.</para>

    <para><important>
        <para>The <emphasis>main</emphasis> top-level element is required.</para>
      </important></para>

    <para><informalexample>
        <programlisting>  &lt;main&gt;
    &lt;name&gt;samba-server&lt;/name&gt;
    &lt;version&gt;5&lt;/version&gt;
    &lt;arch&gt;i386&lt;/arch&gt;
  &lt;/main&gt;</programlisting>
      </informalexample></para>

    <para>The default <varname>$DISTRIBUTIONID</varname> will be
    <filename>samba-server-5-i386</filename>. See the DDFR for more details
    about the <emphasis>main</emphasis> element.</para>

    <para>Save the file as <filename>samba-server.xml</filename> before
    preceding.</para>
  </section>

  <section>
    <title>Specifying the input repositories</title>

    <para>Next, to define the OS and the application packages for the
    system distribution, you need to define what repositories SystemBuilder
    will use. The example below uses the <emphasis>repos/repo</emphasis> child
    element to define the repositories.</para>

    <para><important>
        <para>For SystemBuilder to operate correctly, one of the repositories must have
        an <filename class="directory">isolinux</filename> or <filename
        class="directory">images</filename> directory.</para>
      </important></para>

    <para>This example includes the i386 base architecture components for
    <application class="software">CentOS</application> 5 and its updates and
    uses variables for the <emphasis>/repo/baseurl</emphasis> and
    <emphasis>/repo/mirrorlist</emphasis> URL values. Line breaks in the URLs
    are for readability purposes only.</para>

    <para><important>
        <para>The <emphasis>repos</emphasis> top-level element is required.
        </para>
      </important></para>

    <para><informalexample>
        <programlisting>  &lt;repos&gt;

    &lt;!-- See www.centos.org for a list of public mirrors --&gt;
    &lt;repo id="base"&gt;
      &lt;name&gt;CentOS-$releasever - Base&lt;/name&gt;
      &lt;baseurl&gt;http://mirror.centos.org/centos/$releasever/os/
           $basearch/&lt;/baseurl&gt;
      &lt;mirrorlist&gt;http://mirrorlist.centos.org/?release=$releasever&amp;amp;
           arch=$basearch&amp;amp;repo=os&amp;amp;country=us&lt;/mirrorlist&gt;
    &lt;/repo&gt;

    &lt;repo id="updates"&gt;
      &lt;name&gt;CentOS-$releasever - Updates&lt;/name&gt;
      &lt;baseurl&gt;http://mirror.centos.org/centos/$releasever/updates/
           $basearch/&lt;/baseurl&gt;
      &lt;mirrorlist&gt;http://mirrorlist.centos.org/?release=$releasever&amp;amp;
           arch=$basearch&amp;amp;repo=updates&amp;amp;country=us&lt;/mirrorlist&gt;
    &lt;/repo&gt;

  &lt;/repos&gt;</programlisting>
      </informalexample></para>

    <para><note>
        <para>Escape the ampersand sign in the URLs (&amp;) with
        <sgmltag>&amp;amp;</sgmltag>.</para>
      </note></para>

    <para>The <varname>$releasever</varname> variable is a placeholder for the
    <emphasis>main/version</emphasis> value, while the
    <varname>$basearch</varname> variable represents the
    <emphasis>main/arch</emphasis> value. As a failsafe measure, the example
    includes a mirror list in addition to the preferred baseurl. In this
    example, should the baseurl fail for the base repository, SystemBuilder will move
    to the mirror list in the United States for that version and architecture
    and traverse the list until it finds a working repository.</para>

    <para><note>
        <para>To avoid confusion between the system version and the OS
        version, use the base OS version number in the
        <emphasis>main/version</emphasis> child element.</para>
      </note></para>

    <para>Now that you've identified the package repositories for the OS, you
    need to include the RPMs for the applications, namely <application
    class="software">Samba</application>.</para>
  </section>

  <section>
    <title>Including package groups in the system distribution</title>

    <para>Once you have defined your repositories, you specify the software
    packages and groups to include. Use the <emphasis>packages</emphasis>
    top-level element to accomplish this.</para>

    <para>The example below includes package groups for the <application
    class="software">Samba</application> application and related tools plus an
    X Window System.</para>

    <para><important>
        <para>The <emphasis>packages</emphasis> top-level element is required.
        </para>
      </important></para>

    <para><informalexample>
        <programlisting>&lt;packages&gt;
  &lt;group&gt;core&lt;/group&gt;
  &lt;group&gt;base&lt;/group&gt;
  &lt;group&gt;base-x&lt;/group&gt;
  &lt;group&gt;gnome-desktop&lt;/group&gt;
  &lt;group&gt;admin-tools&lt;/group&gt;
  &lt;group&gt;web-server&lt;/group&gt;
  &lt;group&gt;smb-server&lt;/group&gt;
  &lt;group&gt;printing&lt;/group&gt;

&lt;/packages&gt;  </programlisting>
      </informalexample></para>

    <para>The system distribution will include the <application
    class="software">GNOME</application> graphical user interface (GUI) and
    printing capabilities. Print administration for CUPS printers can be done
    using a web interface, hence the inclusion of the web-server package.
    SystemBuilder's default settings will include only the "name" and "description" for
    the groups in English.</para>
  </section>

  <section>
    <title>Configuring the system</title>

    <para>The final step is to include system-specific configuration
    information, such as your own configuration files and required
    packages outside the standard groups you have identified in
    <emphasis>packages</emphasis>, above.</para>

    <para>To enable you to install the system
    distribution on a client system, SystemBuilder uses RPMs just like other
    Linux-based OS and applications. When you install your distribution on the
    client system, the install process will retrieve all the packages and other
    files that you specify from the download server.</para>

    <para>In this instance, SystemBuilder will rely on its default settings plus
    the <emphasis>/file</emphasis> and <emphasis>/requires</emphasis> child
    element parameters to construct the <filename>config.rpm</filename> file.
    That file will construct a <application class="software">YUM</application>
    <filename>samba-server.repo</filename> file at the default path <filename
    class="directory">/etc/yum.repos.d/</filename>. The <filename
    class="extension">REPO</filename> file will not include the remote
    repositories that other organizations have hosted; however, it will
    include a repository definition pointing to your download server location
    for this distribution.</para>

    <para><informalexample>
        <programlisting>&lt;config-rpm&gt;
  &lt;!-- install configuration files on the client system --&gt;
  &lt;files destdir="/etc/samba" mode="644" content="filename"&gt;smb.conf&lt;/files&gt;

  &lt;!-- required packages for samba in addition to the default smb-server group--&gt;
  &lt;requires&gt;samba&lt;/requires&gt;
  &lt;requires&gt;samba-common&lt;/requires&gt;

&lt;/config-rpm&gt;</programlisting>
      </informalexample></para>

    <para>In the example above, the client system will receive your
    <application class="software">Samba</application> configuration file,
    <filename>smb.conf</filename>, in the <filename
    class="directory">/etc/samba</filename> directory. The distribution will also
    include two key <application>Samba</application>-related packages.
    <application class="software">SystemBuilder</application> will resolve the
    dependencies to create the system distribution.</para>

    <para>For more information on the advanced child elements of
    <emphasis>config-rpm</emphasis> (implementing scripts and triggers,
    obsoleting packages and customizing the <filename
    class="extension">REPO</filename> file), see the
    <emphasis>config-rpm</emphasis> TLE in the DDFR.</para>

    <para>After you have saved your definition file, you are ready to build
    your system distribution.</para>
  </section>
</section>
