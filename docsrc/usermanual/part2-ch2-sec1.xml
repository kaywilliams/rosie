<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section>
  <title>Setting Up a SystemBuilder Production Environment</title>

  <para>The traditional system development life cycle (SDLC) includes several
  stages, such as requirements analysis, system architecture, design and
  implementation, testing, deployment and maintenance. The stages with which
  SystemBuilder is an integral part are implementation, testing, deployment and
  maintenance. Within the SystemBuilder realm, implementation and testing include
  development, often with a sandbox server for creating and testing the
  appliance. A second phase of testing includes staging, which allows you to
  test the pre-release appliance before releasing it for public consumption.
  This simulated environment includes completing the build and deployment
  processes plus using the appliance as intended for a period of time. The
  final component, production, enables deployment of the appliance to a client
  system. Maintenance is an on-going process that could involve all of these
  stages.</para>

  <para>SystemBuilder's ability to combine an OS with any number of applications makes
  it at once powerful and complicated. The advantage of using a repetitive
  isolated process described above is that you can develop, test and fine-tune
  your appliance before gradually testing its interactions with the outside
  world and, finally, releasing it for others to use. Within the Linux release
  environment, applications and OS are updated and upgraded at a variety of
  rates. This process gives you optimum control over what patches, updates,
  enhancements and upgrades you choose to maintain and release to your
  customers.</para>

  <section>
    <title>The SDLC Process Step-by-Step</title>

    <para><application class="software">SystemBuilder</application>'s logical network
    diagram, below, and subsequent description of steps covers the process in
    more detail.</para>

    <para><mediaobject>
        <imageobject>
          <imagedata fileref="systembuilder_logical_network.jpg" />
        </imageobject>
      </mediaobject></para>

    <para>To set up an environment with <application
    class="software">SystemBuilder</application>, you would need a Development, or
    sandbox, system (D); a Version Control system (V); a Staging system (S);
    and a Production system (P). Development and Staging would contain
    identical installations of a <application
    class="software">SystemBuilder</application> version on identical hardware with the
    same OS. The Production system, which would serve as your download server,
    should have a Linux-based OS and be web-accessible for client systems to
    be able to access it to retrieve your appliance RPMs. The Version system
    should have a Linux-based OS with a compatible version control
    system.</para>

    <para>One variable worth noting is that the hostname for Staging and
    Production systems is identical; this compatibility will aid in Step 7,
    migrating the built appliance to the download server for distribution. The
    hostnames for Development and Version Control are different from the
    others.</para>

    <para>Another point about the diagram is that the Production system is
    outside your internal firewall, in the DMZ. If client systems will access
    the Production system from the Internet, it should be in the DMZ.</para>

    <para><variablelist>
        <varlistentry>
          <term>Step 1: Define Your Appliance</term>

          <listitem>
            <para>During this phase you will work with the Development system
            (D). In addition to creating the
            <filename>samber-server.xml</filename> definition file, you
            will also create any configuration files necessary for the
            appliance to run properly, such as <filename>smb.conf</filename>.
            Essentially, you will complete the process described in "Defining
            Your Appliance" in Part I, Chapter 2.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 2: Build Your Appliance and Deploy and Test it on a
          Sandbox Client</term>

          <listitem>
            <para>This step entails building and deploying your appliance as
            in Part I, Chapter 2, and testing the functionality of your
            appliance to make sure it does what it is supposed to do. Steps 1
            and 2 are iterative during the alpha release phase, with you
            incorporating changes to the <filename
            class="extension">.appliance</filename> or configuration files and
            testing them until you are satisfied with the end result, i.e. an
            appliance distribution that deploys correctly and the resulting
            appliance functionality performs as expected.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 3: Check-in Your Appliance Files to Version
          Control</term>

          <listitem>
            <para>Once you are satisfied with the results in Step 2, you will
            set up your Version Control repository (V) and check in the
            <filename class="extension">.appliance</filename> and
            configuration files to create the beta release. From this point
            forward, if you need to adjust your appliance in any way, you can
            check out and alter these files only using the Development
            system.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 4: Check-out Your Appliance Files to Staging</term>

          <listitem>
            <para>Now that your beta release is available, you are ready to
            complete the pre-release build/deploy/test process. Check out the
            repository with the <filename
            class="extension">.appliance</filename> and configuration files
            from Version Control. If you made several revisions to the files,
            check out the version you want to deploy.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 5: Build Your Appliance and Deploy and Test it on a
          Staging Client</term>

          <listitem>
            <para>Using <application class="software">SystemBuilder</application> on
            the Staging system (S), you build the appliance with the
            <command>systembuilder</command> command, i.e. <userinput>systembuilder
            samber-server.xml</userinput>. <application
            class="software">SystemBuilder</application> will create your appliance
            RPMs and install images in the same location as in Step 2. After
            deploying the appliance to a Staging Client, test this beta
            version. If the results are unsatisfactory, go back to
            Development, check out the appropriate files from Version Control
            and make the appropriate changes, then check in. Use the iterative
            process in Steps 1-5 until you are satisfied with the results. Run
            the <application class="software">SystemBuilder</application> appliance
            test at least twice to confirm cache performance.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 6: Check-in Your Appliance Distribution to Version
          Control</term>

          <listitem>
            <para>Once you have successfully built, deployed and tested your
            appliance on the Staging Client, you can check in to Version
            Control the distribution RPMs and images that resulted from the
            Staging release. Including the appliance distribution itself in
            this system has one distinct advantage. By utilizing the control
            part of the system, you have a record of who checks out what
            appliance and when. It also audits what changed in each version,
            e.g. the RPM headers.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 7: Migrate Your Appliance Distribution to Production for
          Release</term>

          <listitem>
            <para>Now you are ready to migrate the RPMs and distribution
            images that are a result of the successful build in Step 5 and
            that were checked into the Version Control system. You will not
            rerun SystemBuilder on the Production system (P). Rather, you migrate the
            distribution to Production and release them for download access.
            This practice also ensures a controlled release into Production,
            which improves the lock-down and control process for releasing
            appliances such as DNS or SMTP servers to the sanitized DMZ
            environment.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step 8: Deploy Your Appliance to the Production Clients</term>

          <listitem>
            <para>As in Part I, Chapter 2, the "Deploying Your Appliance"
            section, you will create the boot media from the Staging system
            and use it to install the appliance on your users' clients. In
            turn, the clients will download the appliance RPMs from the
            Production system.</para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <para>Once you have deployed the appliance to production clients, you may
    discover changes that need to be made. OS or applications can have
    updates, incorporating bug fixes or other planned changes. They can have
    upgrades or full version releases with new features. Or you may want to
    add or remove applications or change configuration settings. Depending
    upon the change needed, the process will differ. Part III will discuss the
    differences and methods of implementation.</para>
  </section>
</section>
