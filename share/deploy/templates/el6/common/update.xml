<?xml version="1.0" encoding="utf-8"?>
<script id='update' type='update'>
#!/usr/bin/python

import os
import re
import sys
import yum

from rpmUtils import miscutils

# using shlib.call() as it allows capturing interleaved output and error text 
<include href="%{templates-dir}/%{norm-os}/common/shlib.py" parse="text"/>

# run yum command(s), checking output for scriptlet failed errors
opts = "-d 0 -e 0 -q -y"

# ensure release-rpm installed
try:
  call('yum %s install %{name}-release' % opts, shell=True, verbose=False)
except ShCalledProcessError as e:
  sys.stderr.write('%s\n' % e.both)
  sys.exit(e.returncode)

# determine commands to run 
if os.path.exists('/usr/lib/yum-plugins/sync.py'):
  commands = ['yum %s sync' % opts]
else:
  commands = [ 'yum %s groupinstall core' % opts,
               'yum %s update' % opts ]

# run commands
for cmd in commands:
  try:
    _,_,both = call(cmd, shell=True, verbose=False)

  # handle regular errors
  except ShCalledProcessError as e:
    sys.stderr.write('%s\n' % e.both)
    sys.exit(e.returncode)

  # check for scriptlet failed errors
  else:
    failed = []
    errlines = []
    pkgs = "%{custom-pkgs}".split()
    for l in both.split('\n'):
      if 'scriptlet failed' in l:
        errlines.append(l)
        pkg = re.search(r'\((.*)\)', l).group(1)
        script = re.search(r'%(.*)\(', l).group(1)
        if pkg in pkgs:
          failed.append((pkg,script))

    # handle scriptlet failed errors
    if failed:
      try:
        call("yum erase %s -y --cacheonly --disableplugin sync"
             % ' '.join([x[0] for x in failed]), shell=True, verbose=False)
      except ShCalledProcessError as e:
        sys.stderr.write('%s\n' % both)
        sys.exit(e.returncode)
      else:
        if len(failed) == 1:
          pkgname = miscutils.splitFilename(failed[0][0])[0]
          scriptname = failed[0][1]
        else:
          pkgname = "&lt;pkg>"
          scriptname = "&lt;script>"

        sys.stderr.write("""\
Scriptlet failed errors ocurred during package installation.  The failed package(s) have been uninstalled to prevent system inconsistencies:

%s

The following commands may assist with troubleshooting. See the Deploy User
Manual for additional information:

# ssh %{ssh-host}
# yum -y install %s 
# vi %{config-dir}/%s/%s

YUM error output below:

%s"""
% ("\n".join([x[0] for x in failed]), pkgname, pkgname, scriptname, both))
        sys.exit(1)
</script>
