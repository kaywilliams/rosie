<?xml version="1.0" encoding="UTF-8"?>
<config-rpm id="openstack-nova-controller-config">
<description>
Configures a compute controller service for openstack.
</description>

<!-- default values -->
<macro id='nova-api-host'>127.0.0.1</macro>
<macro id='nova-cert-host'>127.0.0.1</macro>
<macro id='nova-vncproxy-host'>127.0.0.1</macro>
<macro id='nova-compute-host'>127.0.0.1</macro>
<macro id='nova-conductor-host'>127.0.0.1</macro>
<macro id='nova-db-password' type='script'>
#!/usr/bin/python
import uuid
print uuid.uuid4().hex[:16]
</macro>
<macro id='nova-user-password' type='script'>
#!/usr/bin/python
import uuid
print uuid.uuid4().hex[:16]
</macro>
<macro id='nova-sched-host'>127.0.0.1</macro>
<macro id='nova-sched-cpu-alloc-ratio'>16.0</macro>
<macro id='nova-sched-ram-alloc-ratio'>1.5</macro>
<macro id='nova-compute-privif'>lo</macro>

<!-- package requires -->
<requires>openstack-nova</requires>
<requires>python-novaclient</requires>
<requires>openstack-network-utils</requires>
<requires>openstack-keystone-client-config</requires>
<requires>openstack-mysql-config</requires>
<requires>openstack-qpid-config</requires>

<script type='post'>
# modify nova.conf
cmd="openstack-config --set /etc/nova/nova.conf"
$cmd database connection mysql://nova:%{nova-db-password}@%{nova-api-host}/nova
$cmd DEFAULT my_ip $(/usr/bin/get-my-ip)
$cmd DEFAULT vncserver_listen %{nova-vncproxy-host}
$cmd DEFAULT vncserver_proxyclient_address %{nova-vncproxy-host}

# messaging (qpid)
$cmd DEFAULT rpc_backend nova.openstack.common.rpc.impl_qpid
$cmd DEFAULT qpid_hostname %{qpid-host}

# auth
$cmd DEFAULT auth_strategy keystone 
$cmd keystone_authtoken auth_uri http://%{keystone-host}:5000/v2.0
$cmd keystone_authtoken admin_tenant_name service
$cmd keystone_authtoken admin_user nova
$cmd keystone_authtoken admin_password %{nova-user-password}

# network config
%{network-config} <!--set in nova-network-config or neutron-config-->

# create database
if ! mysql -u root -p%{mysql-password} -e "show databases like 'nova'" |\
  grep -q nova; then
  openstack-db --yes --init --service nova --rootpw "%{mysql-password}" \
               --password "%{nova-db-password}" > /dev/null
fi
mysql-change-user-password %{mysql-password} nova %{nova-db-password}

# keystone configuration
keystone-service-create \
  --name nova \
  --type compute \
  --desc "Nova Compute Service" \
  --url http://%{nova-api-host}:8774/v2/%\(tenant_id\)s \
  --pass %{nova-user-password}

# start nova service
if ! ps aux | grep -q "[/]usr/bin/anaconda"; then
  service openstack-nova-api restart > /dev/null
  service openstack-nova-cert restart > /dev/null
  service openstack-nova-consoleauth restart > /dev/null
  service openstack-nova-scheduler restart > /dev/null
  service openstack-nova-conductor restart > /dev/null
  service openstack-nova-novncproxy restart > /dev/null
fi
chkconfig openstack-nova-api on
chkconfig openstack-nova-cert on
chkconfig openstack-nova-consoleauth on
chkconfig openstack-nova-scheduler on
chkconfig openstack-nova-conductor on
chkconfig openstack-nova-novncproxy on

# configure default security group
<macro id='default-security-group-config'>
# add security groups
export OS_USERNAME=admin
export OS_TENANT_NAME=admin
export OS_PASSWORD=%{keystone-admin-password}
export OS_AUTH_URL=http://%{keystone-host}:35357/v2.0/
nova secgroup-list-rules default | grep -q tcp || \
  nova secgroup-add-rule default tcp 22 22 0.0.0.0/0
nova secgroup-list-rules default | grep -q icmp || \
  nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0
</macro>

if ps aux | grep -q "[/]usr/bin/anaconda"; then
  # use a firstboot service to perform network configuration. can't do it 
  # directly under anaconda since nova services aren't started 
  chkconfig openstack-nova-controller-firstboot-script on
else
%{default-security-group-config}
fi
</script>

<files destdir='/etc/rc.d/init.d' destname='openstack-nova-controller-firstboot-script' 
       mode='755' content='text'>
#!/bin/bash
#
# openstack-nova-controller-firstboot-script Openstack Configuration Script
# 
# chkconfig: - 99 02
# description: Firstboot script to configure openstack nova controller

case "$1" in
  start)
%{default-security-group-config}
    chkconfig openstack-nova-controller-firstboot-script off
  ;;
  stop|status|restart|reload|force-reload)
    # do nothing
  ;;
esac
</files>
</config-rpm>
