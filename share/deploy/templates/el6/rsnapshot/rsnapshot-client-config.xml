<config-rpm id='rsnapshot-client-config' xmlns:xi="http://www.w3.org/2001/XInclude">
<!--
To use this template, first create the rsnapshot server (see
rsnapshot-server.definition). Then create a config-rpm macro in your client
definition that looks something like the following. 

The rsnapshot-client-config template configures the authorized_keys file on the
client to accept ssh connections from the server. You may also need to
configure the client firewall to allow inbound ssh connections from the server.

<config-rpm id='rsnapshot-client-config'>
<macro id='rsnapshot-server-ssh-pubkey-text'><xi:include href="rsnapshot-server-%{os}-%{version}-%{arch}/id_rsa.pub" parse="text"/></macro>

<xi:include
    href="%{templates-dir}/%{norm-os}/rsnapshot/rsnapshot-client-config.xml"
    xpointer="xpointer(./*)"/>

<script type='post'>
# script that configures the firewall to accept ssh connections from the server
...
</script>
</config-rpm>
-->

<!-- everything here and below is part of the template -->
<!-- add backup server to authorized_keys -->
<script type='post'>
sshdir=/root/.ssh
pubkey="%{rsnapshot-server-ssh-pubkey-text}"
if [ ! -d $sshdir ]; then
  mkdir $sshdir
fi
if [[ ! -e $sshdir/authorized_keys ]] || \
   [[ ! `grep "$pubkey" $sshdir/authorized_keys` ]]; then
  echo $pubkey >> $sshdir/authorized_keys
fi
chown -R root:root $sshdir
chmod 700 $sshdir
chmod 600 $sshdir/authorized_keys
</script>
</config-rpm>
