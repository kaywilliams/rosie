<script id='ssh-write-host-key' type='activate' comes-after='connect'>
#!/usr/bin/python

import socket
import sys

from deploy.util import pps
from deploy.util import shlib 

# get namelist (fqdn, ipaddr) 
fqdn = '%{fqdn}'
ssh_host = '%{ssh-host}'
ssh_host_key_file = pps.path('%{ssh-host-key-file}')
 
if fqdn == ssh_host:
  try:
    ipaddr = socket.gethostbyname(fqdn)
  except socket.gaierror, e:
    sys.stderr.write('error obtaining an IP Address for %s: \n\n%s' %
                    (fqdn, e))
    sys.exit(1)
else: 
  ipaddr = ssh_host 
 
namelist = ','.join([fqdn, fqdn.split('.')[0], ipaddr]) 

# write file - do this only if the file does not exist or the namelist 
# has changed - to prevent host spoofing 
if (not ssh_host_key_file.exists() or  
    not ssh_host_key_file.read_text().startswith(namelist)): 
  fields = shlib.execute('ssh-keyscan %s' % ipaddr)[0].split() 
  key = '%s %s\n' % (namelist, ' '.join(fields[1:])) 
  ssh_host_key_file.write_text(key) 

  # update root user known_hosts file 
  known_hosts_file = pps.path('/root/.ssh/known_hosts') 
  if known_hosts_file.exists(): 
    currlines = known_hosts_file.read_lines() 
  else: 
    currlines = [] 

  newlines = [] 
  for l in currlines: 
    if not fqdn in l: 
      newlines.append(l) 
  newlines.append(key) 

  known_hosts_file.write_lines(newlines)
</script>
