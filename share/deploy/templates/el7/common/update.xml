<?xml version="1.0" encoding="utf-8"?>
<script id='update' type='update'>
<macro id="yum-update-command">sync</macro>
#!/usr/bin/python

import os
import re
import sys
import yum

# using shlib.call() as it allows capturing interleaved output and error text 
<include href="shlib.py" parse="text"/>

# run yum command(s), checking output for scriptlet failed errors

# ensure release-rpm installed
if not yum.YumBase().rpmdb.searchNevra(name='%{name}-release'):
  try:
    call('yum -q -y install %{name}-release', shell=True, verbose=True)
  except ShCalledProcessError as e:
    sys.exit(e.returncode)

# determine commands to run 
if os.path.exists('/usr/lib/yum-plugins/sync.py'):
  commands = ['yum -q -y sync']
else:
  commands = [ 'yum -q -y groupinstall core', 'yum -q -y update' ]

# run commands
for cmd in commands:
  try:
    _,_,both = call(cmd, shell=True, verbose=False)

  # handle regular errors
  except ShCalledProcessError as e:
    sys.exit(e.returncode)

  # check for scriptlet failed errors
  else:
    failed = []
    errlines = []
    pkgs = "%{custom-pkgs}".split()
    for l in both.split('\n'):
      if 'scriptlet failed' in l:
        errlines.append(l)
        pkg = re.search(r'\((.*)\)', l).group(1)
        if pkg in pkgs:
          failed.append(pkg)

    # handle scriptlet failed errors
    if failed:
      try:
        call("yum erase %s -y --cacheonly --disableplugin sync"
             % ' '.join(failed), shell=True, verbose=False)
      except ShCalledProcessError as e:
        sys.exit(e.returncode)
      else:
        sys.stderr.write('%s\n' % both)
        sys.stderr.write('%s\n' % '\n'.join(errlines))
        sys.stderr.write("""
ERROR: Scriptlet failed errors ocurred during package installation. The
failed package(s) have been uninstalled to prevent system inconsistencies:

%s

Issue the following commands as the root user to troubleshoot:

#####
#connect to remote client
ssh %{ssh-host}

# reinstall failed packages
yum -y sync # or yum -y install $pkg

# view and troubleshoot failed scripts
cd %{config-dir}

# exit the remote session
exit
#####

See the Deploy User Manual for additional information on 'Troubleshooting 
RPM scriptlet failed errors'.
"""
% "\n".join(failed))
        sys.exit(1)
</script>
