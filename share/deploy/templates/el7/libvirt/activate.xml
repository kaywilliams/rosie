<?xml version="1.0" encoding="utf-8"?>
<script id='activate' type='activate' xmlns:xi="http://www.w3.org/2001/XInclude">
<xi:include href="test-exists.xml" xpointer="xpointer(./node())"/>
state = vm.state(0)[0]

# if vm is active, exit
if state == 1:
  sys.exit(0)

# if vm is idle blocked on resource, warn but exit success
if state == 2:
  sys.stdout.write("warning: domain is active, but currently idle waiting "
                   "for system resources\n")
  sys.exit(0)

# if vm is paused or suspended, attempt to resume it
elif state == 3:
  try:
    vm.resume() 
    sys.exit(0)
  except libvirt.libvirtError, e:
    sys.stderr.write("vm is paused and failed to resume [%s]\n" % e)
    sys.exit(1)

# if vm is being shutdown, print an error and exit
# perhaps in the future wait for shutdown to complete and restart
elif state == 4:
  sys.stderr.write("vm is shutting down, unable to activate\n")
  sys.exit(1)

# if vm is shut off, attempt to start it
elif state == 5:
  try:
    vm.create()
    sys.exit(0)
  except libvirt.libvirtError, e:
    sys.stderr.write("vm is shut off and failed to start [%s]\n" % e)
    sys.exit(1)
    
# if vm is crashed, print an error and exit
elif state == 6:
  sys.stderr.write("vm is crashed, unable to activate\n")
  sys.exit(1)

# if vm is suspended by guest power management, attempt to resume it
elif state == 7:
  try:
    vm.pMWakeup(0)
    sys.exit(0)
  except libvirt.libvirtError, e:
    sys.stderr.write("vm is suspended and failed to resume [%s]\n" % e)
    sys.exit(1)

else:
  sys.stderr.write("vm is in an unknown state, unable to activate "
                   "[state code: %s]\n" % state)
  sys.exit(1)
</script>
