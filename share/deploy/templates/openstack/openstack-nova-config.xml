<?xml version="1.0" encoding="UTF-8"?>
<config-rpm id="openstack-nova-config"
            xmlns:xi="http://www.w3.org/2001/XInclude">
<description>
Configures a compute service for openstack.
</description>

<!-- default values -->
<macro id='nova-api-host'>127.0.0.1</macro>
<macro id='nova-cert-host'>127.0.0.1</macro>
<macro id='nova-vncproxy-host'>127.0.0.1</macro>
<macro id='nova-compute-host'>127.0.0.1</macro>
<macro id='nova-conductor-host'>127.0.0.1</macro>
<macro id='nova-db-password' type='script'>
#!/usr/bin/python
import uuid
print uuid.uuid4().hex[:16]
</macro>
<macro id='nova-user-password' type='script'>
#!/usr/bin/python
import uuid
print uuid.uuid4().hex[:16]
</macro>
<macro id='nova-sched-host'>127.0.0.1</macro>
<macro id='nova-sched-cpu-alloc-ratio'>16.0</macro>
<macro id='nova-sched-ram-alloc-ratio'>1.5</macro>
<macro id='nova-compute-privif'>lo</macro>

<!-- package requires -->
<requires>openstack-nova</requires>
<requires>python-novaclient</requires>
<requires>openstack-keystone-config</requires>
<requires>openstack-mysql-config</requires>
<requires>openstack-qpid-config</requires>

<script type='post'>
# modify nova.conf
cmd="openstack-config --set /etc/nova/nova.conf"

$cmd database connection mysql://nova:%{nova-db-password}@%{nova-api-host}/nova
$cmd DEFAULT my_ip $(%{installdir}/files/get_my_ip)
$cmd DEFAULT vncserver_listen %{nova-vncproxy-host}
$cmd DEFAULT vncserver_proxyclient_address %{nova-vncproxy-host}
$cmd DEFAULT api_paste_config '/etc/nova/api-paste.ini'

# messaging (qpid)
$cmd DEFAULT rpc_backend nova.openstack.common.rpc.impl_qpid
$cmd DEFAULT qpid_hostname %{qpid-host}

# neutron
$cmd DEFAULT network_api_class nova.network.neutronv2.api.API
$cmd DEFAULT neutron_admin_username neutron
$cmd DEFAULT neutron_admin_password %{neutron-user-password}
$cmd DEFAULT neutron_admin_auth_url http://%{keystone-host}:5000/v2.0
$cmd DEFAULT neutron_auth_strategy keystone 
$cmd DEFAULT neutron_admin_tenant_name service 
$cmd DEFAULT neutron_url http://%{neutron-server-host}:9696/
$cmd DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
$cmd DEFAULT security_group_api neutron

# auth
$cmd DEFAULT auth_strategy keystone 
$cmd keystone_authtoken auth_host %{keystone-host}
$cmd keystone_authtoken auth_port 5000
$cmd keystone_authtoken auth_protocol http
$cmd keystone_authtoken admin_tenant_name service
$cmd keystone_authtoken admin_user nova
$cmd keystone_authtoken admin_password %{nova-user-password}

# create database
if ! mysql -u root -p%{mysql-password} -e "show databases like 'nova'" |\
  grep nova; then
  openstack-db --yes --init --service nova --rootpw "%{mysql-password}" \
               --password "%{nova-db-password}"
fi

# create nova user in keystone
export OS_USERNAME=admin
export OS_TENANT_NAME=admin
export OS_PASSWORD=%{keystone-admin-password}
export OS_AUTH_URL=http://%{keystone-host}:35357/v2.0/

if ! keystone user-get nova &amp;>/dev/null; then
  keystone user-create --name nova --pass %{nova-user-password}
  keystone user-role-add --user nova --tenant service --role admin

  # create nova service and api endpoint entries
  keystone service-create --name nova --type=compute \
           --description "Nova Compute Service"
  serviceid=$(keystone service-get nova | sed -n 's/|.*id.*| \(.*\) |/\1/p')
  keystone endpoint-create \
           --service-id=$serviceid \
           --publicurl=http://%{nova-api-host}:8774/v2/%\(tenant_id\)s \
           --internalurl=http://%{nova-api-host}:8774/v2/%\(tenant_id\)s \
           --adminurl=http://%{nova-api-host}:8774/v2/%\(tenant_id\)s
fi

unset OS_USERNAME OS_TENANT_NAME OS_PASSWORD OS_AUTH_URL

# start nova service
service openstack-nova-api restart > /dev/null
service openstack-nova-cert restart > /dev/null
service openstack-nova-consoleauth restart > /dev/null
service openstack-nova-scheduler restart > /dev/null
service openstack-nova-conductor restart > /dev/null
service openstack-nova-novncproxy restart > /dev/null
chkconfig openstack-nova-api on
chkconfig openstack-nova-cert on
chkconfig openstack-nova-consoleauth on
chkconfig openstack-nova-scheduler on
chkconfig openstack-nova-conductor on
chkconfig openstack-nova-novncproxy on
</script>

<files destdir='root' destname='keystonerc_admin' mode='600' content='text'>
export OS_USERNAME=admin
export OS_TENANT_NAME=admin
export OS_PASSWORD=%{keystone-admin-password}
export OS_AUTH_URL=http://%{keystone-host}:35357/v2.0/
export PS1='[\\u@\\h \\W(keystone_admin)]\\$ '
</files>

<files destname='get_my_ip' content='text' mode='750'>
#!/usr/bin/python
"""
Borrowed with thanks from nova/netconf.py

Returns the actual ip of the local machine.

This code figures out what source address would be used if some traffic
were to be sent out to some well known address on the Internet. In this
case, a Google DNS server is used, but the specific address does not
matter much.  No traffic is actually sent.
"""
import socket
try:
    csock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    csock.connect(('8.8.8.8', 80))
    (addr, port) = csock.getsockname()
    csock.close()
    print addr
except socket.error:
    print "127.0.0.1"
</files>
</config-rpm>
